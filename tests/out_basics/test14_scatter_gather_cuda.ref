jit_set_device(device=0, stream=0): creating stream
jit_var_new(1): mov.u32 $r0, $i
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_ext(1): 2
jit_var_dec_ref_ext(1): 1
jit_var_inc_ref_int(1): 1
jit_var_new(2 <- 1): neg.$t0 $r0, $r1
jit_var_inc_ref_ext(2): 1
jit_var_schedule(2)
jit_var_inc_ref_ext(2): 2
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(3): <@>, size=4, free=1
jit_var_inc_ref_ext(3): 1
jit_var_copy_mem(3, size=4)
jit_var_new_literal(4): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(4): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=1024): register map:
   - %r4 -> 1
   - %r5 -> 2 [out]
jit_malloc(type=device, device=0, size=4096): <@> (new allocation)
  -> launching <@> (n=1024, in=0, out=1, ops=6):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<6>;
    .reg.b16 %w<6>;
    .reg.b32 %r<6>;
    .reg.b64 %rd<6>;
    .reg.f32 %f<6>;
    .reg.f64 %d<6>;
    .reg.pred %p<6>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %r5
    neg.s32 %r5, %r4;

    // Store %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(5 <- 2): <@>
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(3): 1
jit_var_new(6 <- 5, 3): mul.wide.$t2 %rd3, $r2, $s0$nadd.$t1 %rd3, %rd3, $r1$nld.global.nc.$t0 $r0, [%rd3]
jit_var_inc_ref_ext(6): 1
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - %r4 -> 3 [in]
   - %rd5 -> 5 [scalar] [direct_pointer]
   - %r6 -> 6 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
  -> launching <@> (n=4, in=2, out=1, ops=7):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %r6
    mul.wide.u32 %rd3, %r4, 4;
    add.u64 %rd3, %rd3, %rd5;
    ld.global.nc.s32 %r6, [%rd3];

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(3): 0
jit_eval(): done.
[-34, -62, -75, -2]
[0, -1, -2, -3, -4, .. 1014 skipped .., -1019, -1020, -1021, -1022, -1023]
jit_var_new_literal(7): mov.$b0 $r0, 0x3
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_int(6): 1
jit_var_inc_ref_int(7): 1
jit_var_new(8 <- 6, 7): mul.lo.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(8): 1
jit_var_new_literal(9): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(10 <- 2): <@>
jit_var_inc_ref_ext(10): 1
jit_var_inc_ref_int(10): 1
jit_var_inc_ref_int(8): 1
jit_var_inc_ref_int(3): 1
jit_var_new(11 <- 10, 8, 3): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nst.global.$t2 [%rd3], $r2
jit_var_inc_ref_ext(11): 1
jit_var_mark_scatter(11, 2)
jit_var_dec_ref_ext(10): 0
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_var_dec_ref_ext(8): 0
jit_var_dec_ref_ext(7): 0
jit_var_new_literal(12): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(12): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - %r4 -> 6 [in]
   - %r5 -> 7 [scalar]
   - %r6 -> 8
   - %r7 -> 3 [in]
   - %rd8 -> 10 [scalar] [direct_pointer]
   - %u9 -> 11 [scat]
  -> launching <@> (n=4, in=3, out=1, ops=10):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<10>;
    .reg.b16 %w<10>;
    .reg.b32 %r<10>;
    .reg.b64 %rd<10>;
    .reg.f32 %f<10>;
    .reg.f64 %d<10>;
    .reg.pred %p<10>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r4, [%rd0];

    // Evaluate %r5
    mov.b32 %r5, 0x3;

    // Evaluate %r6
    mul.lo.s32 %r6, %r4, %r5;

    // Load %r7
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r7, [%rd0];

    // Load %rd8
    ld.param.u64 %rd8, [arg2];

    // Evaluate %u9
    mul.wide.u32 %rd3, %r7, 4;
    add.u64 %rd3, %rd3, %rd8;
    st.global.s32 [%rd3], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_var_dec_ref_int(10): 0
jit_var_free(10)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(8): 0
jit_var_free(8)
jit_var_dec_ref_int(6): 0
jit_var_dec_ref_int(7): 0
jit_var_free(7)
jit_var_dec_ref_int(3): 0
jit_eval(): done.
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(13 <- 2): <@>
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(3): 1
jit_var_new(14 <- 13, 3): mul.wide.$t2 %rd3, $r2, $s0$nadd.$t1 %rd3, %rd3, $r1$nld.global.nc.$t0 $r0, [%rd3]
jit_var_inc_ref_ext(14): 1
jit_var_dec_ref_ext(13): 0
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - %r4 -> 3 [in]
   - %rd5 -> 13 [scalar] [direct_pointer]
   - %r6 -> 14 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
  -> launching <@> (n=4, in=2, out=1, ops=7):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %r6
    mul.wide.u32 %rd3, %r4, 4;
    add.u64 %rd3, %rd3, %rd5;
    ld.global.nc.s32 %r6, [%rd3];

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(3): 0
jit_eval(): done.
[-102, -186, -225, -6]
[0, -1, -6, -3, -4, .. 1014 skipped .., -1019, -1020, -1021, -1022, -1023]
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=4096)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 3 deallocations
jit_shutdown(): releasing 3 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 4.12 KiB in 3 allocations
jit_shutdown(): done
