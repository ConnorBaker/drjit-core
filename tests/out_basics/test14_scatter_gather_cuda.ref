jit_device_set(device=0, stream=0): creating stream
jit_trace_append(1): mov.u32 $r0, $i
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_int(1): 1
jit_trace_append(2 <- 1): cvt.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_var_inc_ref_int(2): 1
jit_trace_append(3 <- 2): neg.$t0 $r0, $r1
jit_var_inc_ref_ext(3): 1
jit_var_dec_ref_ext(2): 0
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(4): <@>, size=4, free=1
jit_var_inc_ref_ext(4): 1
jit_var_copy(4, size=4)
jit_eval(): begin.
jit_assemble(size=1024): register map:
   - %r4 -> 1
   - %r5 -> 2
   - %r6 -> 3 [out]
jit_malloc(type=device, device=0, size=4096): <@> (new allocation)
jit_run(): launching kernel (n=1024, in=0, out=1, ops=7) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %r5
    cvt.s32.u32 %r5, %r4;

    // Evaluate %r6
    neg.s32 %r6, %r5;

    // Store %r6
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_var_dec_ref_int(2): 0
jit_var_free(2)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_var_copy_ptr(5): <@>
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(5): 1
jit_trace_append(6 <- 4, 5): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(6): 1
jit_trace_append(7 <- 6): ld.global.nc.$t0 $r0, [$r1]
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(6): 0
jit_var_dec_ref_ext(5): 0
jit_var_set_extra_dep(7, 3)
jit_var_inc_ref_ext(3): 2
jit_eval(): begin.
jit_assemble(size=4): register map:
   - %r4 -> 4 [in]
   - %rd5 -> 5 [scalar] [in]
   - %rd6 -> 6
   - %r7 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=4, in=2, out=1, ops=8) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.s32 %rd6, %r4, 4;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %r7
    ld.global.nc.s32 %r7, [%rd6];

    // Store %r7
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_var_dec_ref_ext(3): 1
jit_eval(): done.
[-34, -62, -75, -2]
jit_trace_append(8): mov.$t0 $r0, 0x00000003
jit_var_inc_ref_ext(8): 1
jit_var_inc_ref_int(7): 1
jit_var_inc_ref_int(8): 1
jit_trace_append(9 <- 7, 8): mul.lo.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(9): 1
jit_var_copy_ptr(10): <@>
jit_var_inc_ref_ext(10): 1
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(10): 1
jit_trace_append(11 <- 4, 10): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(11): 1
jit_var_inc_ref_int(11): 1
jit_var_inc_ref_int(9): 1
jit_trace_append(12 <- 11, 9): st.global.$t2 [$r1], $r2
jit_var_inc_ref_ext(12): 1
jit_var_inc_ref_ext(12): 2
jit_var_mark_side_effect(12)
jit_var_dec_ref_ext(11): 0
jit_var_dec_ref_ext(10): 0
jit_var_set_extra_dep(12, 3)
jit_var_inc_ref_ext(3): 2
jit_var_mark_dirty(3)
jit_var_dec_ref_ext(12): 1
jit_var_dec_ref_ext(9): 0
jit_var_dec_ref_ext(8): 0
jit_eval(): begin.
jit_assemble(size=4): register map:
   - %r4 -> 7 [in]
   - %r5 -> 8 [scalar]
   - %r6 -> 9
   - %r7 -> 4 [in]
   - %rd8 -> 10 [scalar] [in]
   - %rd9 -> 11
   - 10 -> 12 [se]
jit_run(): launching kernel (n=4, in=3, out=0, ops=11) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<11>;
    .reg.b16 %w<11>;
    .reg.b32 %r<11>;
    .reg.b64 %rd<11>;
    .reg.f32 %f<11>;
    .reg.f64 %d<11>;
    .reg.pred %p<11>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r4, [%rd0];

    // Evaluate %r5
    mov.s32 %r5, 0x00000003;

    // Evaluate %r6
    mul.lo.s32 %r6, %r4, %r5;

    // Load %r7
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r7, [%rd0];

    // Load %rd8
    ld.param.u64 %rd8, [arg2];

    // Evaluate %rd9
    mul.wide.s32 %rd9, %r7, 4;
    add.u64 %rd9, %rd9, %rd8;

    // Evaluate 10
    st.global.s32 [%rd9], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(7): 0
jit_var_dec_ref_int(8): 0
jit_var_free(8)
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(10): 0
jit_var_free(10)
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(9): 0
jit_var_free(9)
jit_var_dec_ref_ext(3): 1
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_eval(): done.
jit_var_copy_ptr(13): <@>
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(13): 1
jit_trace_append(14 <- 4, 13): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_int(14): 1
jit_trace_append(15 <- 14): ld.global.nc.$t0 $r0, [$r1]
jit_var_inc_ref_ext(15): 1
jit_var_dec_ref_ext(14): 0
jit_var_dec_ref_ext(13): 0
jit_var_set_extra_dep(15, 3)
jit_var_inc_ref_ext(3): 2
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_eval(): begin.
jit_assemble(size=4): register map:
   - %r4 -> 4 [in]
   - %rd5 -> 13 [scalar] [in]
   - %rd6 -> 14
   - %r7 -> 15 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=4, in=2, out=1, ops=8) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.s32 %rd6, %r4, 4;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %r7
    ld.global.nc.s32 %r7, [%rd6];

    // Store %r7
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_int(14): 0
jit_var_free(14)
jit_var_dec_ref_ext(3): 1
jit_eval(): done.
[-102, -186, -225, -6]
[0, -1, -6, -3, -4, .. 1014 skipped .., -1019, -1020, -1021, -1022, -1023]
jit_var_dec_ref_ext(15): 0
jit_var_free(15)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=4096)
jit_shutdown(): destroying streams ..
jit_free_flush(): scheduling 3 deallocations
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 4.12 KiB in 3 allocations
jit_shutdown(): done
