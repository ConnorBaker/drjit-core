jit_set_device(device=0, stream=0): creating stream
jit_var_new_literal(1): mov.b16 %w1, 0x91$ncvt.u8.u16 $r0, %w1
jit_var_inc_ref_ext(1): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %b4 -> 1 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %b4
    mov.b16 %w1, 0x91;
    cvt.u8.u16 %b4, %w1;

    // Store %b4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s8 [%rd0], %b4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
  int8_t: [-111, -111, -111, -111, -111]
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(2): mov.b16 %w1, 0xde$ncvt.u8.u16 $r0, %w1
jit_var_inc_ref_ext(2): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %b4 -> 2 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %b4
    mov.b16 %w1, 0xde;
    cvt.u8.u16 %b4, %w1;

    // Store %b4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u8 [%rd0], %b4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
 uint8_t: [222, 222, 222, 222, 222]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(3): mov.$b0 $r0, 0xfba9
jit_var_inc_ref_ext(3): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %w4 -> 3 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %w4
    mov.b16 %w4, 0xfba9;

    // Store %w4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 2;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s16 [%rd0], %w4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
 int16_t: [-1111, -1111, -1111, -1111, -1111]
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(4): mov.$b0 $r0, 0x08ae
jit_var_inc_ref_ext(4): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %w4 -> 4 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %w4
    mov.b16 %w4, 0x08ae;

    // Store %w4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 2;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u16 [%rd0], %w4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
uint16_t: [2222, 2222, 2222, 2222, 2222]
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(5): mov.$b0 $r0, 0xbdc5ca39
jit_var_inc_ref_ext(5): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %r4 -> 5 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0xbdc5ca39;

    // Store %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
 int32_t: [-1111111111, -1111111111, -1111111111, -1111111111, -1111111111]
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(6): mov.$b0 $r0, 0x84746b8e
jit_var_inc_ref_ext(6): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %r4 -> 6 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0x84746b8e;

    // Store %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
uint32_t: [2222222222, 2222222222, 2222222222, 2222222222, 2222222222]
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(7): mov.$b0 $r0, 0xf0948a54d43b8e39
jit_var_inc_ref_ext(7): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %rd4 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %rd4
    mov.b64 %rd4, 0xf0948a54d43b8e39;

    // Store %rd4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
 int64_t: [-1111111111111111111, -1111111111111111111, -1111111111111111111, -1111111111111111111, -1111111111111111111]
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(8): mov.$b0 $r0, 0x1ed6eb565788e38e
jit_var_inc_ref_ext(8): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %rd4 -> 8 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %rd4
    mov.b64 %rd4, 0x1ed6eb565788e38e;

    // Store %rd4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
uint64_t: [2222222222222222222, 2222222222222222222, 2222222222222222222, 2222222222222222222, 2222222222222222222]
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(9): mov.$t0 $r0, 0f3eaaaaab
jit_var_inc_ref_ext(9): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %f4 -> 9 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %f4
    mov.f32 %f4, 0f3eaaaaab;

    // Store %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
   float: [0.333333, 0.333333, 0.333333, 0.333333, 0.333333]
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(10): mov.$t0 $r0, 0d3fd5555555555555
jit_var_inc_ref_ext(10): 1
jit_eval(): begin.
jit_assemble(size=5): register map:
   - %d4 -> 10 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=5, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %d4
    mov.f64 %d4, 0d3fd5555555555555;

    // Store %d4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f64 [%rd0], %d4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
  double: [0.333333, 0.333333, 0.333333, 0.333333, 0.333333]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=device, device=0, size=64)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 1 deallocation
jit_shutdown(): releasing 10 kernels ..
jit_malloc_trim(): freed
 - device memory: 64 B in 1 allocation
jit_shutdown(): done
