jit_set_device(device=-1, stream=0): creating stream
jit_var_new_literal(1): $r0_0 = insertelement <$w x $t0> undef, $t0 145, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(1): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %b0 -> 1 [out]
jit_malloc(type=host-async, size=64): <@> (new allocation)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i8*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %b0
    %b0_0 = insertelement <8 x i8> undef, i8 145, i32 0
    %b0 = shufflevector <8 x i8> %b0_0, <8 x i8> undef, <8 x i32> zeroinitializer

    ; Store %b0
    %b0_i = getelementptr inbounds i8, i8* %a0, i32 %index
    %b0_p = bitcast i8* %b0_i to <8 x i8>*
    store <8 x i8> %b0, <8 x i8>* %b0_p, align 8, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
  int8_t: [-111, -111, -111, -111, -111]
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(2): $r0_0 = insertelement <$w x $t0> undef, $t0 222, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(2): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %b0 -> 2 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i8*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %b0
    %b0_0 = insertelement <8 x i8> undef, i8 222, i32 0
    %b0 = shufflevector <8 x i8> %b0_0, <8 x i8> undef, <8 x i32> zeroinitializer

    ; Store %b0
    %b0_i = getelementptr inbounds i8, i8* %a0, i32 %index
    %b0_p = bitcast i8* %b0_i to <8 x i8>*
    store <8 x i8> %b0, <8 x i8>* %b0_p, align 8, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
 uint8_t: [222, 222, 222, 222, 222]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(3): $r0_0 = insertelement <$w x $t0> undef, $t0 64425, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(3): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %w0 -> 3 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i16*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %w0
    %w0_0 = insertelement <8 x i16> undef, i16 64425, i32 0
    %w0 = shufflevector <8 x i16> %w0_0, <8 x i16> undef, <8 x i32> zeroinitializer

    ; Store %w0
    %w0_i = getelementptr inbounds i16, i16* %a0, i32 %index
    %w0_p = bitcast i16* %w0_i to <8 x i16>*
    store <8 x i16> %w0, <8 x i16>* %w0_p, align 16, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
 int16_t: [-1111, -1111, -1111, -1111, -1111]
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(4): $r0_0 = insertelement <$w x $t0> undef, $t0 2222, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(4): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %w0 -> 4 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i16*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %w0
    %w0_0 = insertelement <8 x i16> undef, i16 2222, i32 0
    %w0 = shufflevector <8 x i16> %w0_0, <8 x i16> undef, <8 x i32> zeroinitializer

    ; Store %w0
    %w0_i = getelementptr inbounds i16, i16* %a0, i32 %index
    %w0_p = bitcast i16* %w0_i to <8 x i16>*
    store <8 x i16> %w0, <8 x i16>* %w0_p, align 16, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
uint16_t: [2222, 2222, 2222, 2222, 2222]
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(5): $r0_0 = insertelement <$w x $t0> undef, $t0 3183856185, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(5): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %r0 -> 5 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <8 x i32> undef, i32 3183856185, i32 0
    %r0 = shufflevector <8 x i32> %r0_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Store %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r0_p = bitcast i32* %r0_i to <8 x i32>*
    store <8 x i32> %r0, <8 x i32>* %r0_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
 int32_t: [-1111111111, -1111111111, -1111111111, -1111111111, -1111111111]
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(6): $r0_0 = insertelement <$w x $t0> undef, $t0 2222222222, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(6): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %r0 -> 6 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <8 x i32> undef, i32 2222222222, i32 0
    %r0 = shufflevector <8 x i32> %r0_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Store %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r0_p = bitcast i32* %r0_i to <8 x i32>*
    store <8 x i32> %r0, <8 x i32>* %r0_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
uint32_t: [2222222222, 2222222222, 2222222222, 2222222222, 2222222222]
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(7): $r0_0 = insertelement <$w x $t0> undef, $t0 17335632962598440505, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(7): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %rd0 -> 7 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i64*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %rd0
    %rd0_0 = insertelement <8 x i64> undef, i64 17335632962598440505, i32 0
    %rd0 = shufflevector <8 x i64> %rd0_0, <8 x i64> undef, <8 x i32> zeroinitializer

    ; Store %rd0
    %rd0_i = getelementptr inbounds i64, i64* %a0, i32 %index
    %rd0_p = bitcast i64* %rd0_i to <8 x i64>*
    store <8 x i64> %rd0, <8 x i64>* %rd0_p, align 64, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
 int64_t: [-1111111111111111111, -1111111111111111111, -1111111111111111111, -1111111111111111111, -1111111111111111111]
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(8): $r0_0 = insertelement <$w x $t0> undef, $t0 2222222222222222222, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(8): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %rd0 -> 8 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i64*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %rd0
    %rd0_0 = insertelement <8 x i64> undef, i64 2222222222222222222, i32 0
    %rd0 = shufflevector <8 x i64> %rd0_0, <8 x i64> undef, <8 x i32> zeroinitializer

    ; Store %rd0
    %rd0_i = getelementptr inbounds i64, i64* %a0, i32 %index
    %rd0_p = bitcast i64* %rd0_i to <8 x i64>*
    store <8 x i64> %rd0, <8 x i64>* %rd0_p, align 64, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
uint64_t: [2222222222222222222, 2222222222222222222, 2222222222222222222, 2222222222222222222, 2222222222222222222]
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(9): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3fd5555560000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(9): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %f0 -> 9 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %f0
    %f0_0 = insertelement <8 x float> undef, float 0x3fd5555560000000, i32 0
    %f0 = shufflevector <8 x float> %f0_0, <8 x float> undef, <8 x i32> zeroinitializer

    ; Store %f0
    %f0_i = getelementptr inbounds float, float* %a0, i32 %index
    %f0_p = bitcast float* %f0_i to <8 x float>*
    store <8 x float> %f0, <8 x float>* %f0_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
   float: [0.333333, 0.333333, 0.333333, 0.333333, 0.333333]
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=host-async, size=64)
jit_var_new_literal(10): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3fd5555555555555, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(10): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=5): register map:
   - %d0 -> 10 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=5, in=0, out=1, ops=1):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(32) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to double*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %d0
    %d0_0 = insertelement <8 x double> undef, double 0x3fd5555555555555, i32 0
    %d0 = shufflevector <8 x double> %d0_0, <8 x double> undef, <8 x i32> zeroinitializer

    ; Store %d0
    %d0_i = getelementptr inbounds double, double* %a0, i32 %index
    %d0_p = bitcast double* %d0_i to <8 x double>*
    store <8 x double> %d0, <8 x double>* %d0_p, align 64, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_eval(): done.
  double: [0.333333, 0.333333, 0.333333, 0.333333, 0.333333]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=64)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 1 deallocation
jit_shutdown(): releasing 10 kernels ..
jit_malloc_trim(): freed
 - host-async memory: 64 B in 1 allocation
jit_shutdown(): done
