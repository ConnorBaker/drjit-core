jit_device_set(device=0, stream=0): creating stream
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(1): <@>, size=9, free=1
jit_var_inc_ref_ext(1): 1
jit_var_copy(1, size=9)
jit_var_inc_ref_int(1): 1
jit_trace_append(2 <- 1): cvt.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_int(1): 2
jit_trace_append(3 <- 1): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(3): 1
jit_var_inc_ref_int(1): 3
jit_trace_append(4 <- 1): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(4): 1
jit_var_inc_ref_int(1): 4
jit_trace_append(5 <- 1): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(1): 5
jit_trace_append(6 <- 1): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(2): 1
jit_trace_append(7 <- 2): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_int(2): 2
jit_trace_append(8 <- 2): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(8): 1
jit_var_inc_ref_int(2): 3
jit_trace_append(9 <- 2): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_int(2): 4
jit_trace_append(10 <- 2): cvt.rpi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(10): 1
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f4 -> 1 [in]
   - %r5 -> 3 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r6 -> 4 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %rd7 -> 5 [out]
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
   - %rd8 -> 6 [out]
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
   - %d9 -> 2
   - %r10 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r11 -> 8 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %rd12 -> 9 [out]
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
   - %rd13 -> 10 [out]
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
jit_run(): launching kernel (n=9, in=1, out=8, ops=14) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2,
                              .param .u64 arg3,
                              .param .u64 arg4,
                              .param .u64 arg5,
                              .param .u64 arg6,
                              .param .u64 arg7,
                              .param .u64 arg8) {
    .reg.b8 %b<14>;
    .reg.b16 %w<14>;
    .reg.b32 %r<14>;
    .reg.b64 %rd<14>;
    .reg.f32 %f<14>;
    .reg.f64 %d<14>;
    .reg.pred %p<14>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Evaluate %r5
    cvt.rpi.s32.f32 %r5, %f4;

    // Store %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    // Evaluate %r6
    cvt.rpi.u32.f32 %r6, %f4;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %rd7
    cvt.rpi.s64.f32 %rd7, %f4;

    // Store %rd7
    ld.param.u64 %rd0, [arg3];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd7;

    // Evaluate %rd8
    cvt.rpi.u64.f32 %rd8, %f4;

    // Store %rd8
    ld.param.u64 %rd0, [arg4];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd8;

    // Evaluate %d9
    cvt.f64.f32 %d9, %f4;

    // Evaluate %r10
    cvt.rpi.s32.f64 %r10, %d9;

    // Store %r10
    ld.param.u64 %rd0, [arg5];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r10;

    // Evaluate %r11
    cvt.rpi.u32.f64 %r11, %d9;

    // Store %r11
    ld.param.u64 %rd0, [arg6];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r11;

    // Evaluate %rd12
    cvt.rpi.s64.f64 %rd12, %d9;

    // Store %rd12
    ld.param.u64 %rd0, [arg7];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd12;

    // Evaluate %rd13
    cvt.rpi.u64.f64 %rd13, %d9;

    // Store %rd13
    ld.param.u64 %rd0, [arg8];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd13;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
ceil_f_i32=[-1, 0, 0, 0, 1, 1, 1, 2, 2147483647]
ceil_f_i64=[-1, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_d_i32=[-1, 0, 0, 0, 1, 1, 1, 2, 2147483647]
ceil_d_i64=[-1, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_f_u32=[0, 0, 0, 0, 1, 1, 1, 2, 4294967295]
ceil_f_u64=[0, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_d_u32=[0, 0, 0, 0, 1, 1, 1, 2, 4294967295]
ceil_d_u64=[0, 0, 0, 0, 1, 1, 1, 2, 4294967296]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(1): 2
jit_trace_append(11 <- 1): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(11): 1
jit_var_inc_ref_int(1): 3
jit_trace_append(12 <- 1): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(12): 1
jit_var_inc_ref_int(1): 4
jit_trace_append(13 <- 1): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(1): 5
jit_trace_append(14 <- 1): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_int(2): 1
jit_trace_append(15 <- 2): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(15): 1
jit_var_inc_ref_int(2): 2
jit_trace_append(16 <- 2): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(16): 1
jit_var_inc_ref_int(2): 3
jit_trace_append(17 <- 2): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(17): 1
jit_var_inc_ref_int(2): 4
jit_trace_append(18 <- 2): cvt.rmi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(18): 1
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f4 -> 1 [in]
   - %r5 -> 11 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r6 -> 12 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd7 -> 13 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd8 -> 14 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %d9 -> 2
   - %r10 -> 15 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r11 -> 16 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd12 -> 17 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd13 -> 18 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=14) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2,
                              .param .u64 arg3,
                              .param .u64 arg4,
                              .param .u64 arg5,
                              .param .u64 arg6,
                              .param .u64 arg7,
                              .param .u64 arg8) {
    .reg.b8 %b<14>;
    .reg.b16 %w<14>;
    .reg.b32 %r<14>;
    .reg.b64 %rd<14>;
    .reg.f32 %f<14>;
    .reg.f64 %d<14>;
    .reg.pred %p<14>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Evaluate %r5
    cvt.rmi.s32.f32 %r5, %f4;

    // Store %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    // Evaluate %r6
    cvt.rmi.u32.f32 %r6, %f4;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %rd7
    cvt.rmi.s64.f32 %rd7, %f4;

    // Store %rd7
    ld.param.u64 %rd0, [arg3];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd7;

    // Evaluate %rd8
    cvt.rmi.u64.f32 %rd8, %f4;

    // Store %rd8
    ld.param.u64 %rd0, [arg4];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd8;

    // Evaluate %d9
    cvt.f64.f32 %d9, %f4;

    // Evaluate %r10
    cvt.rmi.s32.f64 %r10, %d9;

    // Store %r10
    ld.param.u64 %rd0, [arg5];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r10;

    // Evaluate %r11
    cvt.rmi.u32.f64 %r11, %d9;

    // Store %r11
    ld.param.u64 %rd0, [arg6];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r11;

    // Evaluate %rd12
    cvt.rmi.s64.f64 %rd12, %d9;

    // Store %rd12
    ld.param.u64 %rd0, [arg7];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd12;

    // Evaluate %rd13
    cvt.rmi.u64.f64 %rd13, %d9;

    // Store %rd13
    ld.param.u64 %rd0, [arg8];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd13;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
floor_f_i32=[-2, -1, -1, -1, 0, 0, 0, 1, 2147483647]
floor_f_i64=[-2, -1, -1, -1, 0, 0, 0, 1, 4294967296]
floor_d_i32=[-2, -1, -1, -1, 0, 0, 0, 1, 2147483647]
floor_d_i64=[-2, -1, -1, -1, 0, 0, 0, 1, 4294967296]
floor_f_u32=[0, 0, 0, 0, 0, 0, 0, 1, 4294967295]
floor_f_u64=[0, 0, 0, 0, 0, 0, 0, 1, 4294967296]
floor_d_u32=[0, 0, 0, 0, 0, 0, 0, 1, 4294967295]
floor_d_u64=[0, 0, 0, 0, 0, 0, 0, 1, 4294967296]
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(15): 0
jit_var_free(15)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(1): 2
jit_trace_append(19 <- 1): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(19): 1
jit_var_inc_ref_int(1): 3
jit_trace_append(20 <- 1): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(20): 1
jit_var_inc_ref_int(1): 4
jit_trace_append(21 <- 1): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(21): 1
jit_var_inc_ref_int(1): 5
jit_trace_append(22 <- 1): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(22): 1
jit_var_inc_ref_int(2): 1
jit_trace_append(23 <- 2): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_int(2): 2
jit_trace_append(24 <- 2): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(24): 1
jit_var_inc_ref_int(2): 3
jit_trace_append(25 <- 2): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(25): 1
jit_var_inc_ref_int(2): 4
jit_trace_append(26 <- 2): cvt.rzi.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(26): 1
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f4 -> 1 [in]
   - %r5 -> 19 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r6 -> 20 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd7 -> 21 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd8 -> 22 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %d9 -> 2
   - %r10 -> 23 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r11 -> 24 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd12 -> 25 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd13 -> 26 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=14) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2,
                              .param .u64 arg3,
                              .param .u64 arg4,
                              .param .u64 arg5,
                              .param .u64 arg6,
                              .param .u64 arg7,
                              .param .u64 arg8) {
    .reg.b8 %b<14>;
    .reg.b16 %w<14>;
    .reg.b32 %r<14>;
    .reg.b64 %rd<14>;
    .reg.f32 %f<14>;
    .reg.f64 %d<14>;
    .reg.pred %p<14>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Evaluate %r5
    cvt.rzi.s32.f32 %r5, %f4;

    // Store %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    // Evaluate %r6
    cvt.rzi.u32.f32 %r6, %f4;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %rd7
    cvt.rzi.s64.f32 %rd7, %f4;

    // Store %rd7
    ld.param.u64 %rd0, [arg3];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd7;

    // Evaluate %rd8
    cvt.rzi.u64.f32 %rd8, %f4;

    // Store %rd8
    ld.param.u64 %rd0, [arg4];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd8;

    // Evaluate %d9
    cvt.f64.f32 %d9, %f4;

    // Evaluate %r10
    cvt.rzi.s32.f64 %r10, %d9;

    // Store %r10
    ld.param.u64 %rd0, [arg5];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r10;

    // Evaluate %r11
    cvt.rzi.u32.f64 %r11, %d9;

    // Store %r11
    ld.param.u64 %rd0, [arg6];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r11;

    // Evaluate %rd12
    cvt.rzi.s64.f64 %rd12, %d9;

    // Store %rd12
    ld.param.u64 %rd0, [arg7];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd12;

    // Evaluate %rd13
    cvt.rzi.u64.f64 %rd13, %d9;

    // Store %rd13
    ld.param.u64 %rd0, [arg8];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd13;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
trunc_f_i32=[-1, 0, 0, 0, 0, 0, 0, 1, 2147483647]
trunc_f_i64=[-1, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_d_i32=[-1, 0, 0, 0, 0, 0, 0, 1, 2147483647]
trunc_d_i64=[-1, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_f_u32=[0, 0, 0, 0, 0, 0, 0, 1, 4294967295]
trunc_f_u64=[0, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_d_u32=[0, 0, 0, 0, 0, 0, 0, 1, 4294967295]
trunc_d_u64=[0, 0, 0, 0, 0, 0, 0, 1, 4294967296]
jit_var_dec_ref_ext(26): 0
jit_var_free(26)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(24): 0
jit_var_free(24)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(23): 0
jit_var_free(23)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(22): 0
jit_var_free(22)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(21): 0
jit_var_free(21)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(19): 0
jit_var_free(19)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(1): 2
jit_trace_append(27 <- 1): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(27): 1
jit_var_inc_ref_int(1): 3
jit_trace_append(28 <- 1): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(28): 1
jit_var_inc_ref_int(1): 4
jit_trace_append(29 <- 1): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(29): 1
jit_var_inc_ref_int(1): 5
jit_trace_append(30 <- 1): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(30): 1
jit_var_inc_ref_int(2): 1
jit_trace_append(31 <- 2): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(31): 1
jit_var_inc_ref_int(2): 2
jit_trace_append(32 <- 2): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(32): 1
jit_var_inc_ref_int(2): 3
jit_trace_append(33 <- 2): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(33): 1
jit_var_inc_ref_int(2): 4
jit_trace_append(34 <- 2): cvt.rni.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(34): 1
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f4 -> 1 [in]
   - %r5 -> 27 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r6 -> 28 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd7 -> 29 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd8 -> 30 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %d9 -> 2
   - %r10 -> 31 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r11 -> 32 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %rd12 -> 33 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
   - %rd13 -> 34 [out]
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=14) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2,
                              .param .u64 arg3,
                              .param .u64 arg4,
                              .param .u64 arg5,
                              .param .u64 arg6,
                              .param .u64 arg7,
                              .param .u64 arg8) {
    .reg.b8 %b<14>;
    .reg.b16 %w<14>;
    .reg.b32 %r<14>;
    .reg.b64 %rd<14>;
    .reg.f32 %f<14>;
    .reg.f64 %d<14>;
    .reg.pred %p<14>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Evaluate %r5
    cvt.rni.s32.f32 %r5, %f4;

    // Store %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    // Evaluate %r6
    cvt.rni.u32.f32 %r6, %f4;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %rd7
    cvt.rni.s64.f32 %rd7, %f4;

    // Store %rd7
    ld.param.u64 %rd0, [arg3];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd7;

    // Evaluate %rd8
    cvt.rni.u64.f32 %rd8, %f4;

    // Store %rd8
    ld.param.u64 %rd0, [arg4];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd8;

    // Evaluate %d9
    cvt.f64.f32 %d9, %f4;

    // Evaluate %r10
    cvt.rni.s32.f64 %r10, %d9;

    // Store %r10
    ld.param.u64 %rd0, [arg5];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r10;

    // Evaluate %r11
    cvt.rni.u32.f64 %r11, %d9;

    // Store %r11
    ld.param.u64 %rd0, [arg6];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r11;

    // Evaluate %rd12
    cvt.rni.s64.f64 %rd12, %d9;

    // Store %rd12
    ld.param.u64 %rd0, [arg7];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s64 [%rd0], %rd12;

    // Evaluate %rd13
    cvt.rni.u64.f64 %rd13, %d9;

    // Store %rd13
    ld.param.u64 %rd0, [arg8];
    mul.wide.u32 %rd1, %r0, 8;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u64 [%rd0], %rd13;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
round_f_i32=[-1, -1, 0, 0, 0, 0, 1, 1, 2147483647]
round_f_i64=[-1, -1, 0, 0, 0, 0, 1, 1, 4294967296]
round_d_i32=[-1, -1, 0, 0, 0, 0, 1, 1, 2147483647]
round_d_i64=[-1, -1, 0, 0, 0, 0, 1, 1, 4294967296]
round_f_u32=[0, 0, 0, 0, 0, 0, 1, 1, 4294967295]
round_f_u64=[0, 0, 0, 0, 0, 0, 1, 1, 4294967296]
round_d_u32=[0, 0, 0, 0, 0, 0, 1, 1, 4294967295]
round_d_u64=[0, 0, 0, 0, 0, 0, 1, 1, 4294967296]
jit_var_dec_ref_ext(34): 0
jit_var_free(34)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(33): 0
jit_var_free(33)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(32): 0
jit_var_free(32)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(31): 0
jit_var_free(31)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(30): 0
jit_var_free(30)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(29): 0
jit_var_free(29)
jit_free(<@>, type=device, device=0, size=128)
jit_var_dec_ref_ext(28): 0
jit_var_free(28)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(27): 0
jit_var_free(27)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_var_dec_ref_int(1): 0
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 9 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 832 B in 9 allocations
jit_shutdown(): done
