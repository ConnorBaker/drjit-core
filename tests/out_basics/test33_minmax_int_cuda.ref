jit_var_new_literal(1): mov.$b0 $r0, 0x2
jit_var_inc_ref_ext(1): 1
jit_var_new_literal(2): mov.$b0 $r0, 0x3
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_int(1): 1
jit_var_inc_ref_int(2): 1
jit_var_new(3 <- 1, 2): min.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(3): 1
jit_var_inc_ref_int(1): 2
jit_var_inc_ref_int(2): 2
jit_var_new(4 <- 1, 2): max.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(4): 1
jit_var_schedule(3)
jit_var_schedule(4)
jit_eval(): launching 1 kernel.
jit_assemble(size=1): register map:
   - %r4 -> 1 [scalar]
   - %r5 -> 2 [scalar]
   - %r6 -> 3 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r7 -> 4 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
  -> launching <@> (n=1, in=0, out=2, ops=8):
.version 6.0
.target sm_50
.address_size 64

.entry enoki_<@>(.param .align 8 .b8 in[24]) {
    .reg.b8   %b <8>; .reg.b16 %w<8>; .reg.b32 %r<8>;
    .reg.b64  %rd<8>; .reg.f32 %f<8>; .reg.f64 %d<8>;
    .reg.pred %p <8>;

    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [in];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0x2;

    // Evaluate %r5
    mov.b32 %r5, 0x3;

    // Evaluate %r6
    min.u32 %r6, %r4, %r5;

    // Store %r6
    ld.param.u64 %rd0, [in+8];
    mad.wide.u32 %rd0, %r0, 4, %rd0;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %r7
    max.u32 %r7, %r4, %r5;

    // Store %r7
    ld.param.u64 %rd0, [in+16];
    mad.wide.u32 %rd0, %r0, 4, %rd0;
    st.global.cs.u32 [%rd0], %r7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(1): 0
jit_var_dec_ref_int(2): 0
jit_eval(): done.
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(1): 1
jit_var_new(5 <- 3, 1): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(5): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=1): register map:
   - %r4 -> 3 [scalar] [in]
   - %r5 -> 1 [scalar]
   - %p6 -> 5 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
  -> launching <@> (n=1, in=1, out=1, ops=7):
.version 6.0
.target sm_50
.address_size 64

.entry enoki_<@>(.param .align 8 .b8 in[24]) {
    .reg.b8   %b <7>; .reg.b16 %w<7>; .reg.b32 %r<7>;
    .reg.b64  %rd<7>; .reg.f32 %f<7>; .reg.f64 %d<7>;
    .reg.pred %p <7>;

    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [in];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [in+8];
    ldu.global.u32 %r4, [%rd0];

    // Evaluate %r5
    mov.b32 %r5, 0x2;

    // Evaluate %p6
    setp.eq.u32 %p6, %r4, %r5;

    // Store %p6
    ld.param.u64 %rd0, [in+16];
    mad.wide.u32 %rd0, %r0, 1, %rd0;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(1): 0
jit_eval(): done.
jit_all(<@>, size=1)
jit_memset_async(<@>, isize=1, size=3)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(2): 1
jit_var_new(6 <- 4, 2): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(6): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=1): register map:
   - %r4 -> 4 [scalar] [in]
   - %r5 -> 2 [scalar]
   - %p6 -> 6 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
  -> launching <@> (n=1, in=1, out=1, ops=7):
.version 6.0
.target sm_50
.address_size 64

.entry enoki_<@>(.param .align 8 .b8 in[24]) {
    .reg.b8   %b <7>; .reg.b16 %w<7>; .reg.b32 %r<7>;
    .reg.b64  %rd<7>; .reg.f32 %f<7>; .reg.f64 %d<7>;
    .reg.pred %p <7>;

    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [in];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [in+8];
    ldu.global.u32 %r4, [%rd0];

    // Evaluate %r5
    mov.b32 %r5, 0x3;

    // Evaluate %p6
    setp.eq.u32 %p6, %r4, %r5;

    // Store %p6
    ld.param.u64 %rd0, [in+16];
    mad.wide.u32 %rd0, %r0, 1, %rd0;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(2): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_all(<@>, size=1)
jit_memset_async(<@>, isize=1, size=3)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_shutdown(): releasing 1 thread state ..
jit_free_flush(): scheduling 4 deallocations
jit_shutdown(): releasing 3 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 128 B in 2 allocations
 - device memory: 192 B in 3 allocations
jit_shutdown(): done
