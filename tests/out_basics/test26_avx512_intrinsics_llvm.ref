jit_var_new(1): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_int(1): 1
jit_var_new(2 <- 1): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_var_new(1): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0 (reused)
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_new(2 <- 1): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0> (reused)
jit_var_inc_ref_ext(2): 2
jit_var_dec_ref_ext(1): 0
jit_var_new_literal(3): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3fb99999a0000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(3): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(3): 1
jit_var_new(4 <- 2, 3): $r0 = fadd <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(4): 1
jit_var_dec_ref_ext(3): 0
jit_var_dec_ref_ext(2): 1
jit_var_new(5): 
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_dec_ref_ext(5): 0
jit_var_new(6 <- 5, 0, 0, 0): declare <16 x $t1> @llvm.x86.avx512.max.ps.512(<16 x $t1>, <16 x $t1>, i32)
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(2): 2
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(6): 1
jit_var_new(7 <- 2, 4, 6): $4$r0 = call <16 x $t0> @llvm.x86.avx512.max.ps.512(<16 x $t1> $r1, <16 x $t2> $r2, i32 4)
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(6): 0
jit_var_new(5):  (reused)
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 2
jit_var_dec_ref_ext(5): 0
jit_var_new(8 <- 5, 0, 0, 0): declare <$w x $t1> @llvm.fma.v$w$a1(<$w x $t1>, <$w x $t1>, <$w x $t1>)
jit_var_inc_ref_ext(8): 1
jit_var_inc_ref_int(2): 3
jit_var_inc_ref_int(4): 2
jit_var_inc_ref_int(7): 1
jit_var_inc_ref_int(8): 1
jit_var_new(9 <- 2, 4, 7, 8): $r0 = call <$w x $t0> @llvm.fma.v$w$a1(<$w x $t1> $r1, <$w x $t2> $r2, <$w x $t3> $r3)
jit_var_inc_ref_ext(9): 1
jit_var_dec_ref_ext(8): 0
jit_var_inc_ref_int(4): 3
jit_var_inc_ref_int(7): 2
jit_var_new(10 <- 4, 7): $r0 = fcmp oeq <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(10): 1
jit_var_schedule(7)
jit_var_schedule(9)
jit_var_schedule(10)
jit_eval(): launching 1 kernel.
jit_assemble(size=64): register map:
   - gl0 -> 6 [scalar]
   - gl1 -> 8 [scalar]
   - %r2 -> 1
   - %f3 -> 2
   - %f4 -> 3 [scalar]
   - %f5 -> 4
   - %f6 -> 5 [scalar]
   - %f7 -> 7 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %f8 -> 9 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %p9 -> 10 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
  -> launching <@> (n=64, in=0, out=3, ops=10):
declare <16 x float> @llvm.x86.avx512.max.ps.512(<16 x float>, <16 x float>, i32)

declare <32 x float> @llvm.fma.v32f32(<32 x float>, <32 x float>, <32 x float>)

define void @enoki_<@>(i32 %start, i32 %end, i8** noalias %ptrs) #0 {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to float*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i8*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r2
    %r2_0 = insertelement <32 x i32> undef, i32 %index, i32 0
    %r2_1 = shufflevector <32 x i32> %r2_0, <32 x i32> undef, <32 x i32> zeroinitializer
    %r2 = add <32 x i32> %r2_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Evaluate %f3
    %f3 = uitofp <32 x i32> %r2 to <32 x float>

    ; Evaluate %f4
    %f4_0 = insertelement <32 x float> undef, float 0x3fb99999a0000000, i32 0
    %f4 = shufflevector <32 x float> %f4_0, <32 x float> undef, <32 x i32> zeroinitializer

    ; Evaluate %f5
    %f5 = fadd <32 x float> %f3, %f4

    ; Evaluate %f6

    ; Evaluate %f7
    %f3_unroll_f7_0_0 = shufflevector <32 x float> %f3, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f3_unroll_f7_0_1 = shufflevector <32 x float> %f3, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f5_unroll_f7_0_0 = shufflevector <32 x float> %f5, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f5_unroll_f7_0_1 = shufflevector <32 x float> %f5, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f7_unroll_f7_0_0 = call <16 x float> @llvm.x86.avx512.max.ps.512(<16 x float> %f3_unroll_f7_0_0, <16 x float> %f5_unroll_f7_0_0, i32 4)
    %f7_unroll_f7_0_1 = call <16 x float> @llvm.x86.avx512.max.ps.512(<16 x float> %f3_unroll_f7_0_1, <16 x float> %f5_unroll_f7_0_1, i32 4)

    %f7 = shufflevector <16 x float> %f7_unroll_f7_0_0, <16 x float> %f7_unroll_f7_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %f7
    %f7_i = getelementptr inbounds float, float* %a0, i32 %index
    %f7_p = bitcast float* %f7_i to <32 x float>*
    store <32 x float> %f7, <32 x float>* %f7_p, align 128, !noalias !1

    ; Evaluate %f8
    %f8 = call <32 x float> @llvm.fma.v32f32(<32 x float> %f3, <32 x float> %f5, <32 x float> %f7)

    ; Store %f8
    %f8_i = getelementptr inbounds float, float* %a1, i32 %index
    %f8_p = bitcast float* %f8_i to <32 x float>*
    store <32 x float> %f8, <32 x float>* %f8_p, align 128, !noalias !1

    ; Evaluate %p9
    %p9 = fcmp oeq <32 x float> %f5, %f7

    ; Store %p9
    %p9_i = getelementptr inbounds i8, i8* %a2, i32 %index
    %p9_p = bitcast i8* %p9_i to <32 x i8>*
    %p9_e = zext <32 x i1> %p9 to <32 x i8>
    store <32 x i8> %p9_e, <32 x i8>* %p9_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 32
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind alignstack=128 "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="-vzeroupper,+avx512f,+avx512dq,+avx512vl" }
jit_run(): scheduling 2 packets in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(4): 2
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_var_dec_ref_int(5): 1
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(4): 1
jit_var_dec_ref_int(7): 1
jit_var_dec_ref_int(8): 0
jit_var_free(8)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(7): 0
jit_eval(): done.
value=[0.1, 1.1, 2.1, 3.1, 4.1, .. 54 skipped .., 59.1, 60.1, 61.1, 62.1, 63.1]
value=[0.1, 2.2, 6.3, 12.4, 20.5, .. 54 skipped .., 3546, 3666.1, 3788.2, 3912.3, 4038.4]
jit_all(<@>, size=64)
jit_reduce(<@>, type=uint32, rtype=and, size=16)
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_free_flush(): scheduling 3 deallocations
jit_shutdown(): releasing 1 kernel ..
jit_shutdown(): releasing 1 thread state ..
jit_malloc_trim(): freed
 - host-async memory: 768 B in 3 allocations
jit_shutdown(): done
