jit_device_set(device=0, stream=0): creating stream
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_fill(<@>, type=uint8, size=64)
jit_var_map(1): <@>, size=16, free=1
jit_var_inc_ref_ext(1): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(2): <@>, size=15, free=1
jit_var_inc_ref_ext(2): 1
jit_var_copy(2, size=15)
jit_trace_append(3): mov.$t0 $r0, 0f3f800000
jit_var_inc_ref_ext(3): 1
jit_trace_append(4): mov.$t0 $r0, 1
jit_var_inc_ref_ext(4): 1
jit_var_copy_ptr(5): <@>
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(5): 1
jit_trace_append(6 <- 2, 5): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(6): 1
jit_var_inc_ref_int(3): 1
jit_trace_append(7 <- 6, 3): red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_ext(7): 2
jit_var_mark_side_effect(7)
jit_var_dec_ref_ext(6): 0
jit_var_dec_ref_ext(5): 0
jit_var_set_extra_dep(7, 1)
jit_var_inc_ref_ext(1): 2
jit_var_mark_dirty(1)
jit_var_dec_ref_ext(7): 1
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(3): 0
jit_eval(): begin.
jit_assemble(size=15): register map:
   - %r4 -> 2 [in]
   - %rd5 -> 5 [scalar] [in]
   - %rd6 -> 6
   - %f7 -> 3 [scalar]
   - %u8 -> 7 [se]
jit_run(): launching kernel (n=15, in=2, out=0, ops=9) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<9>;
    .reg.b16 %w<9>;
    .reg.b32 %r<9>;
    .reg.b64 %rd<9>;
    .reg.f32 %f<9>;
    .reg.f64 %d<9>;
    .reg.pred %p<9>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.u32 %rd6, %r4, 4;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %f7
    mov.f32 %f7, 0f3f800000;

    // Evaluate %u8
    red.global.add.f32 [%rd6], %f7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_fill(<@>, type=uint8, size=64)
jit_var_map(8): <@>, size=16, free=1
jit_var_inc_ref_ext(8): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(9): <@>, size=16, free=1
jit_var_inc_ref_ext(9): 1
jit_var_copy(9, size=16)
jit_trace_append(10): mov.$t0 $r0, 0f3f800000
jit_var_inc_ref_ext(10): 1
jit_trace_append(11): mov.$t0 $r0, 1
jit_var_inc_ref_ext(11): 1
jit_var_copy_ptr(12): <@>
jit_var_inc_ref_ext(12): 1
jit_var_inc_ref_int(9): 1
jit_var_inc_ref_int(12): 1
jit_trace_append(13 <- 9, 12): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(10): 1
jit_trace_append(14 <- 13, 10): red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_ext(14): 2
jit_var_mark_side_effect(14)
jit_var_dec_ref_ext(13): 0
jit_var_dec_ref_ext(12): 0
jit_var_set_extra_dep(14, 8)
jit_var_inc_ref_ext(8): 2
jit_var_mark_dirty(8)
jit_var_dec_ref_ext(14): 1
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_var_dec_ref_ext(10): 0
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 9 [in]
   - %rd5 -> 12 [scalar] [in]
   - %rd6 -> 13
   - %f7 -> 10 [scalar]
   - %u8 -> 14 [se]
jit_run(): launching kernel (n=16, in=2, out=0, ops=9) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<9>;
    .reg.b16 %w<9>;
    .reg.b32 %r<9>;
    .reg.b64 %rd<9>;
    .reg.f32 %f<9>;
    .reg.f64 %d<9>;
    .reg.pred %p<9>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.u32 %rd6, %r4, 4;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %f7
    mov.f32 %f7, 0f3f800000;

    // Evaluate %u8
    red.global.add.f32 [%rd6], %f7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(9): 0
jit_var_dec_ref_int(12): 0
jit_var_free(12)
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_int(10): 0
jit_var_free(10)
jit_var_dec_ref_ext(8): 1
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
jit_fill(<@>, type=uint8, size=128)
jit_var_map(15): <@>, size=16, free=1
jit_var_inc_ref_ext(15): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(16): <@>, size=15, free=1
jit_var_inc_ref_ext(16): 1
jit_var_copy(16, size=15)
jit_trace_append(17): mov.$t0 $r0, 0d3ff0000000000000
jit_var_inc_ref_ext(17): 1
jit_trace_append(18): mov.$t0 $r0, 1
jit_var_inc_ref_ext(18): 1
jit_var_copy_ptr(19): <@>
jit_var_inc_ref_ext(19): 1
jit_var_inc_ref_int(16): 1
jit_var_inc_ref_int(19): 1
jit_trace_append(20 <- 16, 19): mul.wide.$t1 $r0, $r1, 8$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(20): 1
jit_var_inc_ref_int(20): 1
jit_var_inc_ref_int(17): 1
jit_trace_append(21 <- 20, 17): red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(21): 1
jit_var_inc_ref_ext(21): 2
jit_var_mark_side_effect(21)
jit_var_dec_ref_ext(20): 0
jit_var_dec_ref_ext(19): 0
jit_var_set_extra_dep(21, 15)
jit_var_inc_ref_ext(15): 2
jit_var_mark_dirty(15)
jit_var_dec_ref_ext(21): 1
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_var_dec_ref_ext(17): 0
jit_eval(): begin.
jit_assemble(size=15): register map:
   - %r4 -> 16 [in]
   - %rd5 -> 19 [scalar] [in]
   - %rd6 -> 20
   - %d7 -> 17 [scalar]
   - %u8 -> 21 [se]
jit_run(): launching kernel (n=15, in=2, out=0, ops=9) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<9>;
    .reg.b16 %w<9>;
    .reg.b32 %r<9>;
    .reg.b64 %rd<9>;
    .reg.f32 %f<9>;
    .reg.f64 %d<9>;
    .reg.pred %p<9>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.u32 %rd6, %r4, 8;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %d7
    mov.f64 %d7, 0d3ff0000000000000;

    // Evaluate %u8
    red.global.add.f64 [%rd6], %d7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(16): 0
jit_var_dec_ref_int(19): 0
jit_var_free(19)
jit_var_dec_ref_int(20): 0
jit_var_free(20)
jit_var_dec_ref_int(17): 0
jit_var_free(17)
jit_var_dec_ref_ext(15): 1
jit_var_dec_ref_ext(21): 0
jit_var_free(21)
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(15): 0
jit_var_free(15)
jit_free(<@>, type=device, device=0, size=128)
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_fill(<@>, type=uint8, size=128)
jit_var_map(22): <@>, size=16, free=1
jit_var_inc_ref_ext(22): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(23): <@>, size=16, free=1
jit_var_inc_ref_ext(23): 1
jit_var_copy(23, size=16)
jit_trace_append(24): mov.$t0 $r0, 0d3ff0000000000000
jit_var_inc_ref_ext(24): 1
jit_trace_append(25): mov.$t0 $r0, 1
jit_var_inc_ref_ext(25): 1
jit_var_copy_ptr(26): <@>
jit_var_inc_ref_ext(26): 1
jit_var_inc_ref_int(23): 1
jit_var_inc_ref_int(26): 1
jit_trace_append(27 <- 23, 26): mul.wide.$t1 $r0, $r1, 8$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(27): 1
jit_var_inc_ref_int(27): 1
jit_var_inc_ref_int(24): 1
jit_trace_append(28 <- 27, 24): red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(28): 1
jit_var_inc_ref_ext(28): 2
jit_var_mark_side_effect(28)
jit_var_dec_ref_ext(27): 0
jit_var_dec_ref_ext(26): 0
jit_var_set_extra_dep(28, 22)
jit_var_inc_ref_ext(22): 2
jit_var_mark_dirty(22)
jit_var_dec_ref_ext(28): 1
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_var_dec_ref_ext(24): 0
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 23 [in]
   - %rd5 -> 26 [scalar] [in]
   - %rd6 -> 27
   - %d7 -> 24 [scalar]
   - %u8 -> 28 [se]
jit_run(): launching kernel (n=16, in=2, out=0, ops=9) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<9>;
    .reg.b16 %w<9>;
    .reg.b32 %r<9>;
    .reg.b64 %rd<9>;
    .reg.f32 %f<9>;
    .reg.f64 %d<9>;
    .reg.pred %p<9>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %rd5
    ld.param.u64 %rd5, [arg1];

    // Evaluate %rd6
    mul.wide.u32 %rd6, %r4, 8;
    add.u64 %rd6, %rd6, %rd5;

    // Evaluate %d7
    mov.f64 %d7, 0d3ff0000000000000;

    // Evaluate %u8
    red.global.add.f64 [%rd6], %d7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(23): 0
jit_var_dec_ref_int(26): 0
jit_var_free(26)
jit_var_dec_ref_int(27): 0
jit_var_free(27)
jit_var_dec_ref_int(24): 0
jit_var_free(24)
jit_var_dec_ref_ext(22): 1
jit_var_dec_ref_ext(28): 0
jit_var_free(28)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(23): 0
jit_var_free(23)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(22): 0
jit_var_free(22)
jit_free(<@>, type=device, device=0, size=128)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_fill(<@>, type=uint8, size=64)
jit_var_map(29): <@>, size=16, free=1
jit_var_inc_ref_ext(29): 1
jit_trace_append(30): mov.u32 $r0, $i
jit_var_inc_ref_ext(30): 1
jit_var_inc_ref_int(30): 1
jit_trace_append(31 <- 30): cvt.rn.ftz.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(31): 1
jit_var_dec_ref_ext(30): 0
jit_trace_append(32): mov.$t0 $r0, 0f41000000
jit_var_inc_ref_ext(32): 1
jit_var_inc_ref_int(31): 1
jit_var_inc_ref_int(32): 1
jit_trace_append(33 <- 31, 32): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(33): 1
jit_var_dec_ref_ext(32): 0
jit_var_dec_ref_ext(31): 0
jit_malloc(type=device, device=0, size=64): <@> (reused global)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(34): <@>, size=15, free=1
jit_var_inc_ref_ext(34): 1
jit_var_copy(34, size=15)
jit_trace_append(35): mov.$t0 $r0, 0f3f800000
jit_var_inc_ref_ext(35): 1
jit_var_copy_ptr(36): <@>
jit_var_inc_ref_ext(36): 1
jit_var_inc_ref_int(34): 1
jit_var_inc_ref_int(36): 1
jit_trace_append(37 <- 34, 36): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(37): 1
jit_var_inc_ref_int(37): 1
jit_var_inc_ref_int(35): 1
jit_var_inc_ref_int(33): 1
jit_trace_append(38 <- 37, 35, 33): @$r3 red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(38): 1
jit_var_inc_ref_ext(38): 2
jit_var_mark_side_effect(38)
jit_var_dec_ref_ext(37): 0
jit_var_dec_ref_ext(36): 0
jit_var_set_extra_dep(38, 29)
jit_var_inc_ref_ext(29): 2
jit_var_mark_dirty(29)
jit_var_dec_ref_ext(38): 1
jit_var_dec_ref_ext(35): 0
jit_eval(): begin.
jit_assemble(size=15): register map:
   - %r4 -> 30
   - %f5 -> 31
   - %f6 -> 32 [scalar]
   - %p7 -> 33 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r8 -> 34 [in]
   - %rd9 -> 36 [scalar] [in]
   - %rd10 -> 37
   - %f11 -> 35 [scalar]
   - %u12 -> 38 [se]
jit_run(): launching kernel (n=15, in=2, out=1, ops=13) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<13>;
    .reg.b16 %w<13>;
    .reg.b32 %r<13>;
    .reg.b64 %rd<13>;
    .reg.f32 %f<13>;
    .reg.f64 %d<13>;
    .reg.pred %p<13>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %f5
    cvt.rn.ftz.f32.u32 %f5, %r4;

    // Evaluate %f6
    mov.f32 %f6, 0f41000000;

    // Evaluate %p7
    setp.lt.f32 %p7, %f5, %f6;

    // Store %p7
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p7;
    st.global.cs.u8 [%rd0], %w0;

    // Load %r8
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Load %rd9
    ld.param.u64 %rd9, [arg2];

    // Evaluate %rd10
    mul.wide.u32 %rd10, %r8, 4;
    add.u64 %rd10, %rd10, %rd9;

    // Evaluate %f11
    mov.f32 %f11, 0f3f800000;

    // Evaluate %u12
    @%p7 red.global.add.f32 [%rd10], %f11;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(30): 0
jit_var_free(30)
jit_var_dec_ref_int(31): 0
jit_var_free(31)
jit_var_dec_ref_int(32): 0
jit_var_free(32)
jit_var_dec_ref_int(34): 0
jit_var_dec_ref_int(36): 0
jit_var_free(36)
jit_var_dec_ref_int(37): 0
jit_var_free(37)
jit_var_dec_ref_int(35): 0
jit_var_free(35)
jit_var_dec_ref_int(33): 0
jit_var_dec_ref_ext(29): 1
jit_var_dec_ref_ext(38): 0
jit_var_free(38)
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(34): 0
jit_var_free(34)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(33): 0
jit_var_free(33)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(29): 0
jit_var_free(29)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_fill(<@>, type=uint8, size=64)
jit_var_map(39): <@>, size=16, free=1
jit_var_inc_ref_ext(39): 1
jit_trace_append(40): mov.u32 $r0, $i
jit_var_inc_ref_ext(40): 1
jit_var_inc_ref_int(40): 1
jit_trace_append(41 <- 40): cvt.rn.ftz.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(41): 1
jit_var_dec_ref_ext(40): 0
jit_trace_append(42): mov.$t0 $r0, 0f41000000
jit_var_inc_ref_ext(42): 1
jit_var_inc_ref_int(41): 1
jit_var_inc_ref_int(42): 1
jit_trace_append(43 <- 41, 42): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(43): 1
jit_var_dec_ref_ext(42): 0
jit_var_dec_ref_ext(41): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(44): <@>, size=16, free=1
jit_var_inc_ref_ext(44): 1
jit_var_copy(44, size=16)
jit_trace_append(45): mov.$t0 $r0, 0f3f800000
jit_var_inc_ref_ext(45): 1
jit_var_copy_ptr(46): <@>
jit_var_inc_ref_ext(46): 1
jit_var_inc_ref_int(44): 1
jit_var_inc_ref_int(46): 1
jit_trace_append(47 <- 44, 46): mul.wide.$t1 $r0, $r1, 4$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(47): 1
jit_var_inc_ref_int(47): 1
jit_var_inc_ref_int(45): 1
jit_var_inc_ref_int(43): 1
jit_trace_append(48 <- 47, 45, 43): @$r3 red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(48): 1
jit_var_inc_ref_ext(48): 2
jit_var_mark_side_effect(48)
jit_var_dec_ref_ext(47): 0
jit_var_dec_ref_ext(46): 0
jit_var_set_extra_dep(48, 39)
jit_var_inc_ref_ext(39): 2
jit_var_mark_dirty(39)
jit_var_dec_ref_ext(48): 1
jit_var_dec_ref_ext(45): 0
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 40
   - %f5 -> 41
   - %f6 -> 42 [scalar]
   - %p7 -> 43 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r8 -> 44 [in]
   - %rd9 -> 46 [scalar] [in]
   - %rd10 -> 47
   - %f11 -> 45 [scalar]
   - %u12 -> 48 [se]
jit_run(): launching kernel (n=16, in=2, out=1, ops=13) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<13>;
    .reg.b16 %w<13>;
    .reg.b32 %r<13>;
    .reg.b64 %rd<13>;
    .reg.f32 %f<13>;
    .reg.f64 %d<13>;
    .reg.pred %p<13>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %f5
    cvt.rn.ftz.f32.u32 %f5, %r4;

    // Evaluate %f6
    mov.f32 %f6, 0f41000000;

    // Evaluate %p7
    setp.lt.f32 %p7, %f5, %f6;

    // Store %p7
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p7;
    st.global.cs.u8 [%rd0], %w0;

    // Load %r8
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Load %rd9
    ld.param.u64 %rd9, [arg2];

    // Evaluate %rd10
    mul.wide.u32 %rd10, %r8, 4;
    add.u64 %rd10, %rd10, %rd9;

    // Evaluate %f11
    mov.f32 %f11, 0f3f800000;

    // Evaluate %u12
    @%p7 red.global.add.f32 [%rd10], %f11;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(40): 0
jit_var_free(40)
jit_var_dec_ref_int(41): 0
jit_var_free(41)
jit_var_dec_ref_int(42): 0
jit_var_free(42)
jit_var_dec_ref_int(44): 0
jit_var_dec_ref_int(46): 0
jit_var_free(46)
jit_var_dec_ref_int(47): 0
jit_var_free(47)
jit_var_dec_ref_int(45): 0
jit_var_free(45)
jit_var_dec_ref_int(43): 0
jit_var_dec_ref_ext(39): 1
jit_var_dec_ref_ext(48): 0
jit_var_free(48)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(44): 0
jit_var_free(44)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(43): 0
jit_var_free(43)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(39): 0
jit_var_free(39)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=128): <@> (reused global)
jit_fill(<@>, type=uint8, size=128)
jit_var_map(49): <@>, size=16, free=1
jit_var_inc_ref_ext(49): 1
jit_trace_append(50): mov.u32 $r0, $i
jit_var_inc_ref_ext(50): 1
jit_var_inc_ref_int(50): 1
jit_trace_append(51 <- 50): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(51): 1
jit_var_dec_ref_ext(50): 0
jit_trace_append(52): mov.$t0 $r0, 0d4020000000000000
jit_var_inc_ref_ext(52): 1
jit_var_inc_ref_int(51): 1
jit_var_inc_ref_int(52): 1
jit_trace_append(53 <- 51, 52): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(53): 1
jit_var_dec_ref_ext(52): 0
jit_var_dec_ref_ext(51): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(54): <@>, size=15, free=1
jit_var_inc_ref_ext(54): 1
jit_var_copy(54, size=15)
jit_trace_append(55): mov.$t0 $r0, 0d3ff0000000000000
jit_var_inc_ref_ext(55): 1
jit_var_copy_ptr(56): <@>
jit_var_inc_ref_ext(56): 1
jit_var_inc_ref_int(54): 1
jit_var_inc_ref_int(56): 1
jit_trace_append(57 <- 54, 56): mul.wide.$t1 $r0, $r1, 8$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(57): 1
jit_var_inc_ref_int(57): 1
jit_var_inc_ref_int(55): 1
jit_var_inc_ref_int(53): 1
jit_trace_append(58 <- 57, 55, 53): @$r3 red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(58): 1
jit_var_inc_ref_ext(58): 2
jit_var_mark_side_effect(58)
jit_var_dec_ref_ext(57): 0
jit_var_dec_ref_ext(56): 0
jit_var_set_extra_dep(58, 49)
jit_var_inc_ref_ext(49): 2
jit_var_mark_dirty(49)
jit_var_dec_ref_ext(58): 1
jit_var_dec_ref_ext(55): 0
jit_eval(): begin.
jit_assemble(size=15): register map:
   - %r4 -> 50
   - %d5 -> 51
   - %d6 -> 52 [scalar]
   - %p7 -> 53 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r8 -> 54 [in]
   - %rd9 -> 56 [scalar] [in]
   - %rd10 -> 57
   - %d11 -> 55 [scalar]
   - %u12 -> 58 [se]
jit_run(): launching kernel (n=15, in=2, out=1, ops=13) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<13>;
    .reg.b16 %w<13>;
    .reg.b32 %r<13>;
    .reg.b64 %rd<13>;
    .reg.f32 %f<13>;
    .reg.f64 %d<13>;
    .reg.pred %p<13>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %d5
    cvt.rn.f64.u32 %d5, %r4;

    // Evaluate %d6
    mov.f64 %d6, 0d4020000000000000;

    // Evaluate %p7
    setp.lt.f64 %p7, %d5, %d6;

    // Store %p7
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p7;
    st.global.cs.u8 [%rd0], %w0;

    // Load %r8
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Load %rd9
    ld.param.u64 %rd9, [arg2];

    // Evaluate %rd10
    mul.wide.u32 %rd10, %r8, 8;
    add.u64 %rd10, %rd10, %rd9;

    // Evaluate %d11
    mov.f64 %d11, 0d3ff0000000000000;

    // Evaluate %u12
    @%p7 red.global.add.f64 [%rd10], %d11;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(50): 0
jit_var_free(50)
jit_var_dec_ref_int(51): 0
jit_var_free(51)
jit_var_dec_ref_int(52): 0
jit_var_free(52)
jit_var_dec_ref_int(54): 0
jit_var_dec_ref_int(56): 0
jit_var_free(56)
jit_var_dec_ref_int(57): 0
jit_var_free(57)
jit_var_dec_ref_int(55): 0
jit_var_free(55)
jit_var_dec_ref_int(53): 0
jit_var_dec_ref_ext(49): 1
jit_var_dec_ref_ext(58): 0
jit_var_free(58)
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(54): 0
jit_var_free(54)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(53): 0
jit_var_free(53)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(49): 0
jit_var_free(49)
jit_free(<@>, type=device, device=0, size=128)
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_fill(<@>, type=uint8, size=128)
jit_var_map(59): <@>, size=16, free=1
jit_var_inc_ref_ext(59): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(60): <@>, size=16, free=1
jit_var_inc_ref_ext(60): 1
jit_var_copy(60, size=16)
jit_trace_append(61): mov.u32 $r0, $i
jit_var_inc_ref_ext(61): 1
jit_var_inc_ref_int(61): 1
jit_trace_append(62 <- 61): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(62): 1
jit_var_dec_ref_ext(61): 0
jit_trace_append(63): mov.$t0 $r0, 0d4020000000000000
jit_var_inc_ref_ext(63): 1
jit_var_inc_ref_int(62): 1
jit_var_inc_ref_int(63): 1
jit_trace_append(64 <- 62, 63): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(64): 1
jit_var_dec_ref_ext(63): 0
jit_var_dec_ref_ext(62): 0
jit_trace_append(65): mov.$t0 $r0, 0d3ff0000000000000
jit_var_inc_ref_ext(65): 1
jit_var_copy_ptr(66): <@>
jit_var_inc_ref_ext(66): 1
jit_var_inc_ref_int(60): 1
jit_var_inc_ref_int(66): 1
jit_trace_append(67 <- 60, 66): mul.wide.$t1 $r0, $r1, 8$nadd.$t0 $r0, $r0, $r2
jit_var_inc_ref_ext(67): 1
jit_var_inc_ref_int(67): 1
jit_var_inc_ref_int(65): 1
jit_var_inc_ref_int(64): 1
jit_trace_append(68 <- 67, 65, 64): @$r3 red.global.add.$t2 [$r1], $r2
jit_var_inc_ref_ext(68): 1
jit_var_inc_ref_ext(68): 2
jit_var_mark_side_effect(68)
jit_var_dec_ref_ext(67): 0
jit_var_dec_ref_ext(66): 0
jit_var_set_extra_dep(68, 59)
jit_var_inc_ref_ext(59): 2
jit_var_mark_dirty(59)
jit_var_dec_ref_ext(68): 1
jit_var_dec_ref_ext(65): 0
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 61
   - %d5 -> 62
   - %d6 -> 63 [scalar]
   - %p7 -> 64 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r8 -> 60 [in]
   - %rd9 -> 66 [scalar] [in]
   - %rd10 -> 67
   - %d11 -> 65 [scalar]
   - %u12 -> 68 [se]
jit_run(): launching kernel (n=16, in=2, out=1, ops=13) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<13>;
    .reg.b16 %w<13>;
    .reg.b32 %r<13>;
    .reg.b64 %rd<13>;
    .reg.f32 %f<13>;
    .reg.f64 %d<13>;
    .reg.pred %p<13>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %d5
    cvt.rn.f64.u32 %d5, %r4;

    // Evaluate %d6
    mov.f64 %d6, 0d4020000000000000;

    // Evaluate %p7
    setp.lt.f64 %p7, %d5, %d6;

    // Store %p7
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p7;
    st.global.cs.u8 [%rd0], %w0;

    // Load %r8
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Load %rd9
    ld.param.u64 %rd9, [arg2];

    // Evaluate %rd10
    mul.wide.u32 %rd10, %r8, 8;
    add.u64 %rd10, %rd10, %rd9;

    // Evaluate %d11
    mov.f64 %d11, 0d3ff0000000000000;

    // Evaluate %u12
    @%p7 red.global.add.f64 [%rd10], %d11;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(61): 0
jit_var_free(61)
jit_var_dec_ref_int(62): 0
jit_var_free(62)
jit_var_dec_ref_int(63): 0
jit_var_free(63)
jit_var_dec_ref_int(60): 0
jit_var_dec_ref_int(66): 0
jit_var_free(66)
jit_var_dec_ref_int(67): 0
jit_var_free(67)
jit_var_dec_ref_int(65): 0
jit_var_free(65)
jit_var_dec_ref_int(64): 0
jit_var_dec_ref_ext(59): 1
jit_var_dec_ref_ext(68): 0
jit_var_free(68)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(64): 0
jit_var_free(64)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(60): 0
jit_var_free(60)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(59): 0
jit_var_free(59)
jit_free(<@>, type=device, device=0, size=128)
jit_shutdown(): destroying streams ..
jit_free_flush(): scheduling 3 deallocations
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 320 B in 4 allocations
jit_shutdown(): done
