jit_set_device(device=0, stream=0): creating stream
jit_var_new_literal(1): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(1): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(2): <@>, size=15, free=1
jit_var_inc_ref_ext(2): 1
jit_var_copy_mem(2, size=15)
jit_var_new_literal(3): mov.$b0 $r0, 0x3f800000
jit_var_inc_ref_ext(3): 1
jit_var_new_literal(4): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(4): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(1): 2
jit_var_copy_ptr(5 <- 1): <@>
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(2): 1
jit_var_new(6 <- 5, 3, 2): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nred.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(6): 1
jit_var_mark_scatter(6, 1)
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(3): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %f4 -> 3 [scalar]
   - %r5 -> 2 [in]
   - %rd6 -> 5 [scalar] [direct_pointer]
   - %u7 -> 6 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=8):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %f4
    mov.b32 %f4, 0x3f800000;

    // Load %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Load %rd6
    ld.param.u64 %rd6, [arg1];
    mul.wide.u32 %rd3, %r5, 4;
    add.u64 %rd3, %rd3, %rd6;
    red.global.add.f32 [%rd3], %f4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_int(2): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(7): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(7): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(8): <@>, size=16, free=1
jit_var_inc_ref_ext(8): 1
jit_var_copy_mem(8, size=16)
jit_var_new_literal(9): mov.$b0 $r0, 0x3f800000
jit_var_inc_ref_ext(9): 1
jit_var_new_literal(10): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(10): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(7): 2
jit_var_copy_ptr(11 <- 7): <@>
jit_var_inc_ref_ext(11): 1
jit_var_inc_ref_int(11): 1
jit_var_inc_ref_int(9): 1
jit_var_inc_ref_int(8): 1
jit_var_new(12 <- 11, 9, 8): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nred.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(12): 1
jit_var_mark_scatter(12, 7)
jit_var_dec_ref_ext(11): 0
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_var_dec_ref_ext(9): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %f4 -> 9 [scalar]
   - %r5 -> 8 [in]
   - %rd6 -> 11 [scalar] [direct_pointer]
   - %u7 -> 12 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=8):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %f4
    mov.b32 %f4, 0x3f800000;

    // Load %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Load %rd6
    ld.param.u64 %rd6, [arg1];
    mul.wide.u32 %rd3, %r5, 4;
    add.u64 %rd3, %rd3, %rd6;
    red.global.add.f32 [%rd3], %f4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_ext(7): 1
jit_var_dec_ref_int(9): 0
jit_var_free(9)
jit_var_dec_ref_int(8): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(13): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(13): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(14): <@>, size=15, free=1
jit_var_inc_ref_ext(14): 1
jit_var_copy_mem(14, size=15)
jit_var_new_literal(15): mov.$b0 $r0, 0x3ff0000000000000
jit_var_inc_ref_ext(15): 1
jit_var_new_literal(16): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(16): 1
jit_malloc(type=device, device=0, size=128): <@> (new allocation)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(13): 2
jit_var_copy_ptr(17 <- 13): <@>
jit_var_inc_ref_ext(17): 1
jit_var_inc_ref_int(17): 1
jit_var_inc_ref_int(15): 1
jit_var_inc_ref_int(14): 1
jit_var_new(18 <- 17, 15, 14): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nred.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(18): 1
jit_var_mark_scatter(18, 13)
jit_var_dec_ref_ext(17): 0
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_var_dec_ref_ext(15): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %d4 -> 15 [scalar]
   - %r5 -> 14 [in]
   - %rd6 -> 17 [scalar] [direct_pointer]
   - %u7 -> 18 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=8):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %d4
    mov.b64 %d4, 0x3ff0000000000000;

    // Load %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Load %rd6
    ld.param.u64 %rd6, [arg1];
    mul.wide.u32 %rd3, %r5, 8;
    add.u64 %rd3, %rd3, %rd6;
    red.global.add.f64 [%rd3], %d4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_var_dec_ref_int(17): 0
jit_var_free(17)
jit_var_dec_ref_ext(13): 1
jit_var_dec_ref_int(15): 0
jit_var_free(15)
jit_var_dec_ref_int(14): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_free(<@>, type=device, device=0, size=128)
jit_var_new_literal(19): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(19): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(20): <@>, size=16, free=1
jit_var_inc_ref_ext(20): 1
jit_var_copy_mem(20, size=16)
jit_var_new_literal(21): mov.$b0 $r0, 0x3ff0000000000000
jit_var_inc_ref_ext(21): 1
jit_var_new_literal(22): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(22): 1
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(19): 2
jit_var_copy_ptr(23 <- 19): <@>
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_int(23): 1
jit_var_inc_ref_int(21): 1
jit_var_inc_ref_int(20): 1
jit_var_new(24 <- 23, 21, 20): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nred.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(24): 1
jit_var_mark_scatter(24, 19)
jit_var_dec_ref_ext(23): 0
jit_var_dec_ref_ext(22): 0
jit_var_free(22)
jit_var_dec_ref_ext(21): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %d4 -> 21 [scalar]
   - %r5 -> 20 [in]
   - %rd6 -> 23 [scalar] [direct_pointer]
   - %u7 -> 24 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=8):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %d4
    mov.b64 %d4, 0x3ff0000000000000;

    // Load %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Load %rd6
    ld.param.u64 %rd6, [arg1];
    mul.wide.u32 %rd3, %r5, 8;
    add.u64 %rd3, %rd3, %rd6;
    red.global.add.f64 [%rd3], %d4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(24): 0
jit_var_free(24)
jit_var_dec_ref_int(23): 0
jit_var_free(23)
jit_var_dec_ref_ext(19): 1
jit_var_dec_ref_int(21): 0
jit_var_free(21)
jit_var_dec_ref_int(20): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(19): 0
jit_var_free(19)
jit_free(<@>, type=device, device=0, size=128)
jit_var_new_literal(25): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(25): 1
jit_var_new(26): mov.u32 $r0, $i
jit_var_inc_ref_ext(26): 1
jit_var_inc_ref_int(26): 1
jit_var_new(27 <- 26): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(27): 1
jit_var_dec_ref_ext(26): 0
jit_var_new_literal(28): mov.$b0 $r0, 0x41000000
jit_var_inc_ref_ext(28): 1
jit_var_inc_ref_int(27): 1
jit_var_inc_ref_int(28): 1
jit_var_new(29 <- 27, 28): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(29): 1
jit_var_dec_ref_ext(28): 0
jit_var_dec_ref_ext(27): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(30): <@>, size=15, free=1
jit_var_inc_ref_ext(30): 1
jit_var_copy_mem(30, size=15)
jit_var_new_literal(31): mov.$b0 $r0, 0x3f800000
jit_var_inc_ref_ext(31): 1
jit_malloc(type=device, device=0, size=64): <@> (reused global)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(25): 2
jit_var_copy_ptr(32 <- 25): <@>
jit_var_inc_ref_ext(32): 1
jit_var_inc_ref_int(32): 1
jit_var_inc_ref_int(31): 1
jit_var_inc_ref_int(30): 1
jit_var_inc_ref_int(29): 1
jit_var_new(33 <- 32, 31, 30, 29): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$n@$r4 red.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(33): 1
jit_var_mark_scatter(33, 25)
jit_var_dec_ref_ext(32): 0
jit_var_dec_ref_ext(31): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r4 -> 26
   - %f5 -> 27
   - %f6 -> 28 [scalar]
   - %p7 -> 29
   - %r8 -> 30 [in]
   - %f9 -> 31 [scalar]
   - %rd10 -> 32 [scalar] [direct_pointer]
   - %u11 -> 33 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=12):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<12>;
    .reg.b16 %w<12>;
    .reg.b32 %r<12>;
    .reg.b64 %rd<12>;
    .reg.f32 %f<12>;
    .reg.f64 %d<12>;
    .reg.pred %p<12>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %f5
    cvt.rn.f32.u32 %f5, %r4;

    // Evaluate %f6
    mov.b32 %f6, 0x41000000;

    // Evaluate %p7
    setp.lt.f32 %p7, %f5, %f6;

    // Load %r8
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Evaluate %f9
    mov.b32 %f9, 0x3f800000;

    // Load %rd10
    ld.param.u64 %rd10, [arg1];
    mul.wide.u32 %rd3, %r8, 4;
    add.u64 %rd3, %rd3, %rd10;
    @%p7 red.global.add.f32 [%rd3], %f9;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(33): 0
jit_var_free(33)
jit_var_dec_ref_int(32): 0
jit_var_free(32)
jit_var_dec_ref_ext(25): 1
jit_var_dec_ref_int(31): 0
jit_var_free(31)
jit_var_dec_ref_int(30): 0
jit_var_dec_ref_int(29): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(30): 0
jit_var_free(30)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(29): 0
jit_var_free(29)
jit_var_dec_ref_int(27): 0
jit_var_free(27)
jit_var_dec_ref_int(26): 0
jit_var_free(26)
jit_var_dec_ref_int(28): 0
jit_var_free(28)
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(34): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(34): 1
jit_var_new(35): mov.u32 $r0, $i
jit_var_inc_ref_ext(35): 1
jit_var_inc_ref_int(35): 1
jit_var_new(36 <- 35): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(36): 1
jit_var_dec_ref_ext(35): 0
jit_var_new_literal(37): mov.$b0 $r0, 0x41000000
jit_var_inc_ref_ext(37): 1
jit_var_inc_ref_int(36): 1
jit_var_inc_ref_int(37): 1
jit_var_new(38 <- 36, 37): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(38): 1
jit_var_dec_ref_ext(37): 0
jit_var_dec_ref_ext(36): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(39): <@>, size=16, free=1
jit_var_inc_ref_ext(39): 1
jit_var_copy_mem(39, size=16)
jit_var_new_literal(40): mov.$b0 $r0, 0x3f800000
jit_var_inc_ref_ext(40): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(34): 2
jit_var_copy_ptr(41 <- 34): <@>
jit_var_inc_ref_ext(41): 1
jit_var_inc_ref_int(41): 1
jit_var_inc_ref_int(40): 1
jit_var_inc_ref_int(39): 1
jit_var_inc_ref_int(38): 1
jit_var_new(42 <- 41, 40, 39, 38): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$n@$r4 red.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(42): 1
jit_var_mark_scatter(42, 34)
jit_var_dec_ref_ext(41): 0
jit_var_dec_ref_ext(40): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r4 -> 35
   - %f5 -> 36
   - %f6 -> 37 [scalar]
   - %p7 -> 38
   - %r8 -> 39 [in]
   - %f9 -> 40 [scalar]
   - %rd10 -> 41 [scalar] [direct_pointer]
   - %u11 -> 42 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=12):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<12>;
    .reg.b16 %w<12>;
    .reg.b32 %r<12>;
    .reg.b64 %rd<12>;
    .reg.f32 %f<12>;
    .reg.f64 %d<12>;
    .reg.pred %p<12>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %f5
    cvt.rn.f32.u32 %f5, %r4;

    // Evaluate %f6
    mov.b32 %f6, 0x41000000;

    // Evaluate %p7
    setp.lt.f32 %p7, %f5, %f6;

    // Load %r8
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Evaluate %f9
    mov.b32 %f9, 0x3f800000;

    // Load %rd10
    ld.param.u64 %rd10, [arg1];
    mul.wide.u32 %rd3, %r8, 4;
    add.u64 %rd3, %rd3, %rd10;
    @%p7 red.global.add.f32 [%rd3], %f9;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(42): 0
jit_var_free(42)
jit_var_dec_ref_int(41): 0
jit_var_free(41)
jit_var_dec_ref_ext(34): 1
jit_var_dec_ref_int(40): 0
jit_var_free(40)
jit_var_dec_ref_int(39): 0
jit_var_dec_ref_int(38): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(39): 0
jit_var_free(39)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(38): 0
jit_var_free(38)
jit_var_dec_ref_int(36): 0
jit_var_free(36)
jit_var_dec_ref_int(35): 0
jit_var_free(35)
jit_var_dec_ref_int(37): 0
jit_var_free(37)
jit_var_dec_ref_ext(34): 0
jit_var_free(34)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(43): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(43): 1
jit_var_new(44): mov.u32 $r0, $i
jit_var_inc_ref_ext(44): 1
jit_var_inc_ref_int(44): 1
jit_var_new(45 <- 44): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(45): 1
jit_var_dec_ref_ext(44): 0
jit_var_new_literal(46): mov.$b0 $r0, 0x4020000000000000
jit_var_inc_ref_ext(46): 1
jit_var_inc_ref_int(45): 1
jit_var_inc_ref_int(46): 1
jit_var_new(47 <- 45, 46): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(47): 1
jit_var_dec_ref_ext(46): 0
jit_var_dec_ref_ext(45): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(48): <@>, size=15, free=1
jit_var_inc_ref_ext(48): 1
jit_var_copy_mem(48, size=15)
jit_var_new_literal(49): mov.$b0 $r0, 0x3ff0000000000000
jit_var_inc_ref_ext(49): 1
jit_malloc(type=device, device=0, size=128): <@> (reused global)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(43): 2
jit_var_copy_ptr(50 <- 43): <@>
jit_var_inc_ref_ext(50): 1
jit_var_inc_ref_int(50): 1
jit_var_inc_ref_int(49): 1
jit_var_inc_ref_int(48): 1
jit_var_inc_ref_int(47): 1
jit_var_new(51 <- 50, 49, 48, 47): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$n@$r4 red.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(51): 1
jit_var_mark_scatter(51, 43)
jit_var_dec_ref_ext(50): 0
jit_var_dec_ref_ext(49): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r4 -> 44
   - %d5 -> 45
   - %d6 -> 46 [scalar]
   - %p7 -> 47
   - %r8 -> 48 [in]
   - %d9 -> 49 [scalar]
   - %rd10 -> 50 [scalar] [direct_pointer]
   - %u11 -> 51 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=12):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<12>;
    .reg.b16 %w<12>;
    .reg.b32 %r<12>;
    .reg.b64 %rd<12>;
    .reg.f32 %f<12>;
    .reg.f64 %d<12>;
    .reg.pred %p<12>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %d5
    cvt.rn.f64.u32 %d5, %r4;

    // Evaluate %d6
    mov.b64 %d6, 0x4020000000000000;

    // Evaluate %p7
    setp.lt.f64 %p7, %d5, %d6;

    // Load %r8
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Evaluate %d9
    mov.b64 %d9, 0x3ff0000000000000;

    // Load %rd10
    ld.param.u64 %rd10, [arg1];
    mul.wide.u32 %rd3, %r8, 8;
    add.u64 %rd3, %rd3, %rd10;
    @%p7 red.global.add.f64 [%rd3], %d9;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(51): 0
jit_var_free(51)
jit_var_dec_ref_int(50): 0
jit_var_free(50)
jit_var_dec_ref_ext(43): 1
jit_var_dec_ref_int(49): 0
jit_var_free(49)
jit_var_dec_ref_int(48): 0
jit_var_dec_ref_int(47): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(48): 0
jit_var_free(48)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(47): 0
jit_var_free(47)
jit_var_dec_ref_int(45): 0
jit_var_free(45)
jit_var_dec_ref_int(44): 0
jit_var_free(44)
jit_var_dec_ref_int(46): 0
jit_var_free(46)
jit_var_dec_ref_ext(43): 0
jit_var_free(43)
jit_free(<@>, type=device, device=0, size=128)
jit_var_new_literal(52): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(52): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(53): <@>, size=16, free=1
jit_var_inc_ref_ext(53): 1
jit_var_copy_mem(53, size=16)
jit_var_new(54): mov.u32 $r0, $i
jit_var_inc_ref_ext(54): 1
jit_var_inc_ref_int(54): 1
jit_var_new(55 <- 54): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(55): 1
jit_var_dec_ref_ext(54): 0
jit_var_new_literal(56): mov.$b0 $r0, 0x4020000000000000
jit_var_inc_ref_ext(56): 1
jit_var_inc_ref_int(55): 1
jit_var_inc_ref_int(56): 1
jit_var_new(57 <- 55, 56): setp.lt.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(57): 1
jit_var_dec_ref_ext(56): 0
jit_var_dec_ref_ext(55): 0
jit_var_new_literal(58): mov.$b0 $r0, 0x3ff0000000000000
jit_var_inc_ref_ext(58): 1
jit_malloc(type=device, device=0, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(52): 2
jit_var_copy_ptr(59 <- 52): <@>
jit_var_inc_ref_ext(59): 1
jit_var_inc_ref_int(59): 1
jit_var_inc_ref_int(58): 1
jit_var_inc_ref_int(53): 1
jit_var_inc_ref_int(57): 1
jit_var_new(60 <- 59, 58, 53, 57): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$n@$r4 red.global.add.$t2 [%rd3], $r2
jit_var_inc_ref_ext(60): 1
jit_var_mark_scatter(60, 52)
jit_var_dec_ref_ext(59): 0
jit_var_dec_ref_ext(58): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r4 -> 54
   - %d5 -> 55
   - %d6 -> 56 [scalar]
   - %p7 -> 57
   - %r8 -> 53 [in]
   - %d9 -> 58 [scalar]
   - %rd10 -> 59 [scalar] [direct_pointer]
   - %u11 -> 60 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=12):
.version 6.3
.address_size 64
.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<12>;
    .reg.b16 %w<12>;
    .reg.b32 %r<12>;
    .reg.b64 %rd<12>;
    .reg.f32 %f<12>;
    .reg.f64 %d<12>;
    .reg.pred %p<12>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %d5
    cvt.rn.f64.u32 %d5, %r4;

    // Evaluate %d6
    mov.b64 %d6, 0x4020000000000000;

    // Evaluate %p7
    setp.lt.f64 %p7, %d5, %d6;

    // Load %r8
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r8, [%rd0];

    // Evaluate %d9
    mov.b64 %d9, 0x3ff0000000000000;

    // Load %rd10
    ld.param.u64 %rd10, [arg1];
    mul.wide.u32 %rd3, %r8, 8;
    add.u64 %rd3, %rd3, %rd10;
    @%p7 red.global.add.f64 [%rd3], %d9;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(60): 0
jit_var_free(60)
jit_var_dec_ref_int(59): 0
jit_var_free(59)
jit_var_dec_ref_ext(52): 1
jit_var_dec_ref_int(58): 0
jit_var_free(58)
jit_var_dec_ref_int(53): 0
jit_var_dec_ref_int(57): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(57): 0
jit_var_free(57)
jit_var_dec_ref_int(55): 0
jit_var_free(55)
jit_var_dec_ref_int(54): 0
jit_var_free(54)
jit_var_dec_ref_int(56): 0
jit_var_free(56)
jit_var_dec_ref_ext(53): 0
jit_var_free(53)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(52): 0
jit_var_free(52)
jit_free(<@>, type=device, device=0, size=128)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 2 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 256 B in 3 allocations
jit_shutdown(): done
