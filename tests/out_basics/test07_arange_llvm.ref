jit_trace_append(1): $r0_0 = trunc i64 %index to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> zeroinitializer$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(1): 1
jit_var_set_size(1): 1024
jit_var_inc_ref_ext(1): 2
jit_var_dec_ref_ext(1): 1
jit_trace_append(2): $r0_0 = trunc i64 %index to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> zeroinitializer$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(2): 1
jit_var_set_size(2): 73
jit_var_inc_ref_ext(2): 2
jit_trace_append(3): $r0_0 = insertelement <$w x $t0> undef, $t0 7, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> zeroinitializer
jit_var_inc_ref_ext(3): 1
jit_trace_append(4): $r0_0 = insertelement <$w x $t0> undef, $t0 3, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> zeroinitializer
jit_var_inc_ref_ext(4): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(3): 1
jit_trace_append(5 <- 2, 3): $r0 = mul <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(4): 1
jit_trace_append(6 <- 5, 4): $r0 = add <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(6): 1
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_dec_ref_ext(3): 0
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_ext(2): 0
jit_eval(): begin.
jit_assemble(size=1024): register map:
   - %r0 -> 1 [out]
jit_malloc(type=host, size=4096): <@> (new allocation)
jit_run(): launching kernel (n=1024, in=0, out=1, ops=1) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) norecurse nounwind alignstack(32) "target-cpu"="skylake" {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Store %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i64 %index
    %r0_p = bitcast i32* %r0_i to <8 x i32>*
    store <8 x i32> %r0, <8 x i32>* %r0_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}
}

!0 = !{!0}
!1 = !{!1, !0}

jit_assemble(size=73): register map:
   - %r0 -> 2
   - %r1 -> 3 [scalar]
   - %r2 -> 5
   - %r3 -> 4 [scalar]
   - %r4 -> 6 [out]
jit_malloc(type=host, size=512): <@> (new allocation)
jit_run(): launching kernel (n=73, in=0, out=1, ops=5) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) norecurse nounwind alignstack(32) "target-cpu"="skylake" {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %r1
    %r1_0 = insertelement <8 x i32> undef, i32 7, i32 0
    %r1 = shufflevector <8 x i32> %r1_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Evaluate %r2
    %r2 = mul <8 x i32> %r0, %r1

    ; Evaluate %r3
    %r3_0 = insertelement <8 x i32> undef, i32 3, i32 0
    %r3 = shufflevector <8 x i32> %r3_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Evaluate %r4
    %r4 = add <8 x i32> %r2, %r3

    ; Store %r4
    %r4_i = getelementptr inbounds i32, i32* %a0, i64 %index
    %r4_p = bitcast i32* %r4_i to <8 x i32>*
    store <8 x i32> %r4, <8 x i32>* %r4_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}
}

!0 = !{!0}
!1 = !{!1, !0}

jit_eval(): cleaning up..
jit_var_dec_ref_int(2): 0
jit_var_free(2)
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_int(4): 0
jit_var_free(4)
jit_eval(): done.
value=[0, 1, 2, 3, 4, .. 1014 skipped .., 1019, 1020, 1021, 1022, 1023]
value=[3, 10, 17, 24, 31, .. 63 skipped .., 479, 486, 493, 500, 507]
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=host, size=512)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host, size=4096)
jit_malloc_trim(): freed
 - host memory: 4.5 KiB in 2 allocations
jit_shutdown(): done
