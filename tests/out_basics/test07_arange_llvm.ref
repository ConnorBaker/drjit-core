jit_set_device(device=-1, stream=0): creating stream
jit_var_new(1): $r0_0 = trunc i64 $i to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_ext(1): 2
jit_var_dec_ref_ext(1): 1
jit_var_new(2): $r0_0 = trunc i64 $i to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_ext(2): 2
jit_var_new(3): $r0_0 = insertelement <$w x $t0> undef, $t0 7, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(3): 1
jit_var_new(4): $r0_0 = insertelement <$w x $t0> undef, $t0 3, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(4): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(3): 1
jit_var_new(5 <- 2, 3): $r0 = mul <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(4): 1
jit_var_new(6 <- 5, 4): $r0 = add <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(6): 1
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_dec_ref_ext(3): 0
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_ext(2): 0
jit_eval(): begin.
jit_assemble(size=1024): register map:
   - %r0 -> 1 [out]
jit_malloc(type=host-async, size=4096): <@> (new allocation)
jit_run(): launching kernel (n=1024, in=0, out=1, ops=1) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Store %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i64 %index
    %r0_p = bitcast i32* %r0_i to <8 x i32>*
    store <8 x i32> %r0, <8 x i32>* %r0_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): processing 128 packets and 0 scalar entries
jit_assemble(size=73): register map:
   - %r0 -> 2
   - %r1 -> 3 [scalar]
   - %r2 -> 5
   - %r3 -> 4 [scalar]
   - %r4 -> 6 [out]
jit_malloc(type=host-async, size=512): <@> (new allocation)
jit_run(): launching kernel (n=73, in=0, out=1, ops=5) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %r1
    %r1_0 = insertelement <8 x i32> undef, i32 7, i32 0
    %r1 = shufflevector <8 x i32> %r1_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Evaluate %r2
    %r2 = mul <8 x i32> %r0, %r1

    ; Evaluate %r3
    %r3_0 = insertelement <8 x i32> undef, i32 3, i32 0
    %r3 = shufflevector <8 x i32> %r3_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Evaluate %r4
    %r4 = add <8 x i32> %r2, %r3

    ; Store %r4
    %r4_i = getelementptr inbounds i32, i32* %a0, i64 %index
    %r4_p = bitcast i32* %r4_i to <8 x i32>*
    store <8 x i32> %r4, <8 x i32>* %r4_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): processing 10 packets and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_int(2): 0
jit_var_free(2)
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_int(4): 0
jit_var_free(4)
jit_eval(): done.
value=[0, 1, 2, 3, 4, .. 1014 skipped .., 1019, 1020, 1021, 1022, 1023]
value=[3, 10, 17, 24, 31, .. 63 skipped .., 479, 486, 493, 500, 507]
jit_var_new(7): $r0_0 = trunc i64 $i to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_int(7): 1
jit_var_new(8 <- 7): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(8): 1
jit_var_dec_ref_ext(7): 0
jit_var_new(9): $r0_0 = trunc i64 $i to $t0$n$r0_1 = insertelement <$w x $t0> undef, $t0 $r0_0, i32 0$n$r0_2 = shufflevector <$w x $t0> $r0_1, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_2, $l0
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_int(9): 1
jit_var_new(10 <- 9): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(10): 1
jit_var_new(11): $r0_0 = insertelement <$w x $t0> undef, $t0 7, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(11): 1
jit_var_new(12): $r0_0 = insertelement <$w x $t0> undef, $t0 18446744073709551613, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(12): 1
jit_var_inc_ref_int(10): 1
jit_var_inc_ref_int(11): 1
jit_var_new(13 <- 10, 11): $r0 = mul <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(12): 1
jit_var_new(14 <- 13, 12): $r0 = add <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(14): 1
jit_var_dec_ref_ext(13): 0
jit_var_dec_ref_ext(12): 0
jit_var_dec_ref_ext(11): 0
jit_var_dec_ref_ext(10): 0
jit_var_dec_ref_ext(9): 0
jit_eval(): begin.
jit_assemble(size=1024): register map:
   - %r0 -> 7
   - %rd1 -> 8 [out]
jit_malloc(type=host-async, size=8192): <@> (new allocation)
jit_run(): launching kernel (n=1024, in=0, out=1, ops=2) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %rd1
    %rd1 = zext <8 x i32> %r0 to <8 x i64>

    ; Store %rd1
    %rd1_i = getelementptr inbounds i64, i64* %a0, i64 %index
    %rd1_p = bitcast i64* %rd1_i to <8 x i64>*
    store <8 x i64> %rd1, <8 x i64>* %rd1_p, align 64, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): processing 128 packets and 0 scalar entries
jit_assemble(size=73): register map:
   - %r0 -> 9
   - %rd1 -> 10
   - %rd2 -> 11 [scalar]
   - %rd3 -> 13
   - %rd4 -> 12 [scalar]
   - %rd5 -> 14 [out]
jit_malloc(type=host-async, size=1024): <@> (new allocation)
jit_run(): launching kernel (n=73, in=0, out=1, ops=6) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = trunc i64 %index to i32
    %r0_1 = insertelement <8 x i32> undef, i32 %r0_0, i32 0
    %r0_2 = shufflevector <8 x i32> %r0_1, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_2, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %rd1
    %rd1 = zext <8 x i32> %r0 to <8 x i64>

    ; Evaluate %rd2
    %rd2_0 = insertelement <8 x i64> undef, i64 7, i32 0
    %rd2 = shufflevector <8 x i64> %rd2_0, <8 x i64> undef, <8 x i32> zeroinitializer

    ; Evaluate %rd3
    %rd3 = mul <8 x i64> %rd1, %rd2

    ; Evaluate %rd4
    %rd4_0 = insertelement <8 x i64> undef, i64 18446744073709551613, i32 0
    %rd4 = shufflevector <8 x i64> %rd4_0, <8 x i64> undef, <8 x i32> zeroinitializer

    ; Evaluate %rd5
    %rd5 = add <8 x i64> %rd3, %rd4

    ; Store %rd5
    %rd5_i = getelementptr inbounds i64, i64* %a0, i64 %index
    %rd5_p = bitcast i64* %rd5_i to <8 x i64>*
    store <8 x i64> %rd5, <8 x i64>* %rd5_p, align 64, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" "stack-probe-size"="1073741824" }
jit_run(): processing 10 packets and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(7): 0
jit_var_free(7)
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_int(10): 0
jit_var_free(10)
jit_var_dec_ref_int(9): 0
jit_var_free(9)
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(12): 0
jit_var_free(12)
jit_eval(): done.
value=[0, 1, 2, 3, 4, .. 1014 skipped .., 1019, 1020, 1021, 1022, 1023]
value=[-3, 4, 11, 18, 25, .. 63 skipped .., 473, 480, 487, 494, 501]
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=host-async, size=1024)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=host-async, size=8192)
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=host-async, size=512)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host-async, size=4096)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 4 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-async memory: 13.5 KiB in 4 allocations
jit_shutdown(): done
