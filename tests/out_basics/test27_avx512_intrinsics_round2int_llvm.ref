jit_set_device(device=-1, stream=0): creating stream
jit_malloc(type=host, size=256): <@> (new allocation)
jit_var_map_mem(1): <@>, size=9, free=1
jit_var_inc_ref_ext(1): 1
jit_var_copy_mem(1, size=9)
jit_var_inc_ref_int(1): 1
jit_var_new(2 <- 1): $r0 = fpext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_int(1): 2
jit_var_new(3 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(3): 1
jit_var_inc_ref_int(1): 3
jit_var_new(4 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(4): 1
jit_var_inc_ref_int(1): 4
jit_var_new(5 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(1): 5
jit_var_new(6 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(2): 1
jit_var_new(7 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_int(2): 2
jit_var_new(8 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(8): 1
jit_var_inc_ref_int(2): 3
jit_var_new(9 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_int(2): 4
jit_var_new(10 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 10)
jit_var_inc_ref_ext(10): 1
jit_var_schedule(3)
jit_var_schedule(4)
jit_var_schedule(5)
jit_var_schedule(6)
jit_var_schedule(7)
jit_var_schedule(8)
jit_var_schedule(9)
jit_var_schedule(10)
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f0 -> 1 [in]
   - %r1 -> 3 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %r2 -> 4 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %rd3 -> 5 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %rd4 -> 6 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %d5 -> 2
   - %r6 -> 7 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %r7 -> 8 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %rd8 -> 9 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
   - %rd9 -> 10 [out]
jit_malloc(type=host-async, size=256): <@> (new allocation)
jit_run(): launching kernel (n=9, in=1, out=8, ops=10) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(128) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*

    ; Prepare argument 3
    %a3_i = getelementptr inbounds i8*, i8** %ptrs, i32 3
    %a3_p = load i8*, i8** %a3_i, align 8, !alias.scope !1
    %a3 = bitcast i8* %a3_p to i64*

    ; Prepare argument 4
    %a4_i = getelementptr inbounds i8*, i8** %ptrs, i32 4
    %a4_p = load i8*, i8** %a4_i, align 8, !alias.scope !1
    %a4 = bitcast i8* %a4_p to i64*

    ; Prepare argument 5
    %a5_i = getelementptr inbounds i8*, i8** %ptrs, i32 5
    %a5_p = load i8*, i8** %a5_i, align 8, !alias.scope !1
    %a5 = bitcast i8* %a5_p to i32*

    ; Prepare argument 6
    %a6_i = getelementptr inbounds i8*, i8** %ptrs, i32 6
    %a6_p = load i8*, i8** %a6_i, align 8, !alias.scope !1
    %a6 = bitcast i8* %a6_p to i32*

    ; Prepare argument 7
    %a7_i = getelementptr inbounds i8*, i8** %ptrs, i32 7
    %a7_p = load i8*, i8** %a7_i, align 8, !alias.scope !1
    %a7 = bitcast i8* %a7_p to i64*

    ; Prepare argument 8
    %a8_i = getelementptr inbounds i8*, i8** %ptrs, i32 8
    %a8_p = load i8*, i8** %a8_i, align 8, !alias.scope !1
    %a8 = bitcast i8* %a8_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %f0
    %f0_i = getelementptr inbounds float, float* %a0, i64 %index
    %f0_p = bitcast float* %f0_i to <32 x float>*
    %f0 = load <32 x float>, <32 x float>* %f0_p, align 128, !alias.scope !1

    ; Evaluate %r1
    %f0_unroll_r1_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r1_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r1_unroll_r1_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_0, <16 x i32> zeroinitializer, i16 -1, i32 10)
    %r1_unroll_r1_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_1, <16 x i32> zeroinitializer, i16 -1, i32 10)

    %r1 = shufflevector <16 x i32> %r1_unroll_r1_0_0, <16 x i32> %r1_unroll_r1_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a1, i64 %index
    %r1_p = bitcast i32* %r1_i to <32 x i32>*
    store <32 x i32> %r1, <32 x i32>* %r1_p, align 128, !noalias !1

    ; Evaluate %r2
    %f0_unroll_r2_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r2_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r2_unroll_r2_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_0, <16 x i32> zeroinitializer, i16 -1, i32 10)
    %r2_unroll_r2_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_1, <16 x i32> zeroinitializer, i16 -1, i32 10)

    %r2 = shufflevector <16 x i32> %r2_unroll_r2_0_0, <16 x i32> %r2_unroll_r2_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r2
    %r2_i = getelementptr inbounds i32, i32* %a2, i64 %index
    %r2_p = bitcast i32* %r2_i to <32 x i32>*
    store <32 x i32> %r2, <32 x i32>* %r2_p, align 128, !noalias !1

    ; Evaluate %rd3
    %f0_unroll_rd3_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd3_1_0 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_1 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_1_2 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_3 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3_unroll_rd3_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_0, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd3_unroll_rd3_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_1, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd3_unroll_rd3_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_2, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd3_unroll_rd3_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_3, <8 x i64> zeroinitializer, i8 -1, i32 10)

    %rd3_unroll_rd3_0_0 = shufflevector <8 x i64> %rd3_unroll_rd3_1_0, <8 x i64> %rd3_unroll_rd3_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd3_unroll_rd3_0_1 = shufflevector <8 x i64> %rd3_unroll_rd3_1_2, <8 x i64> %rd3_unroll_rd3_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3 = shufflevector <16 x i64> %rd3_unroll_rd3_0_0, <16 x i64> %rd3_unroll_rd3_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd3
    %rd3_i = getelementptr inbounds i64, i64* %a3, i64 %index
    %rd3_p = bitcast i64* %rd3_i to <32 x i64>*
    store <32 x i64> %rd3, <32 x i64>* %rd3_p, align 256, !noalias !1

    ; Evaluate %rd4
    %f0_unroll_rd4_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd4_1_0 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_1 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_1_2 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_3 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4_unroll_rd4_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_0, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd4_unroll_rd4_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_1, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd4_unroll_rd4_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_2, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd4_unroll_rd4_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_3, <8 x i64> zeroinitializer, i8 -1, i32 10)

    %rd4_unroll_rd4_0_0 = shufflevector <8 x i64> %rd4_unroll_rd4_1_0, <8 x i64> %rd4_unroll_rd4_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd4_unroll_rd4_0_1 = shufflevector <8 x i64> %rd4_unroll_rd4_1_2, <8 x i64> %rd4_unroll_rd4_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4 = shufflevector <16 x i64> %rd4_unroll_rd4_0_0, <16 x i64> %rd4_unroll_rd4_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd4
    %rd4_i = getelementptr inbounds i64, i64* %a4, i64 %index
    %rd4_p = bitcast i64* %rd4_i to <32 x i64>*
    store <32 x i64> %rd4, <32 x i64>* %rd4_p, align 256, !noalias !1

    ; Evaluate %d5
    %d5 = fpext <32 x float> %f0 to <32 x double>

    ; Evaluate %r6
    %d5_unroll_r6_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r6_1_0 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_1 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_1_2 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_3 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6_unroll_r6_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_0, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r6_unroll_r6_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_1, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r6_unroll_r6_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_2, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r6_unroll_r6_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_3, <8 x i32> zeroinitializer, i8 -1, i32 10)

    %r6_unroll_r6_0_0 = shufflevector <8 x i32> %r6_unroll_r6_1_0, <8 x i32> %r6_unroll_r6_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r6_unroll_r6_0_1 = shufflevector <8 x i32> %r6_unroll_r6_1_2, <8 x i32> %r6_unroll_r6_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6 = shufflevector <16 x i32> %r6_unroll_r6_0_0, <16 x i32> %r6_unroll_r6_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a5, i64 %index
    %r6_p = bitcast i32* %r6_i to <32 x i32>*
    store <32 x i32> %r6, <32 x i32>* %r6_p, align 128, !noalias !1

    ; Evaluate %r7
    %d5_unroll_r7_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r7_1_0 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_1 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_1_2 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_3 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_r7_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_0, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r7_unroll_r7_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_1, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r7_unroll_r7_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_2, <8 x i32> zeroinitializer, i8 -1, i32 10)
    %r7_unroll_r7_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_3, <8 x i32> zeroinitializer, i8 -1, i32 10)

    %r7_unroll_r7_0_0 = shufflevector <8 x i32> %r7_unroll_r7_1_0, <8 x i32> %r7_unroll_r7_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r7_unroll_r7_0_1 = shufflevector <8 x i32> %r7_unroll_r7_1_2, <8 x i32> %r7_unroll_r7_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7 = shufflevector <16 x i32> %r7_unroll_r7_0_0, <16 x i32> %r7_unroll_r7_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r7
    %r7_i = getelementptr inbounds i32, i32* %a6, i64 %index
    %r7_p = bitcast i32* %r7_i to <32 x i32>*
    store <32 x i32> %r7, <32 x i32>* %r7_p, align 128, !noalias !1

    ; Evaluate %rd8
    %d5_unroll_rd8_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd8_1_0 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_1 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_1_2 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_3 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_rd8_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_0, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd8_unroll_rd8_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_1, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd8_unroll_rd8_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_2, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd8_unroll_rd8_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_3, <8 x i64> zeroinitializer, i8 -1, i32 10)

    %rd8_unroll_rd8_0_0 = shufflevector <8 x i64> %rd8_unroll_rd8_1_0, <8 x i64> %rd8_unroll_rd8_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd8_unroll_rd8_0_1 = shufflevector <8 x i64> %rd8_unroll_rd8_1_2, <8 x i64> %rd8_unroll_rd8_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8 = shufflevector <16 x i64> %rd8_unroll_rd8_0_0, <16 x i64> %rd8_unroll_rd8_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd8
    %rd8_i = getelementptr inbounds i64, i64* %a7, i64 %index
    %rd8_p = bitcast i64* %rd8_i to <32 x i64>*
    store <32 x i64> %rd8, <32 x i64>* %rd8_p, align 256, !noalias !1

    ; Evaluate %rd9
    %d5_unroll_rd9_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd9_1_0 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_1 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_1_2 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_3 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9_unroll_rd9_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_0, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd9_unroll_rd9_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_1, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd9_unroll_rd9_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_2, <8 x i64> zeroinitializer, i8 -1, i32 10)
    %rd9_unroll_rd9_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_3, <8 x i64> zeroinitializer, i8 -1, i32 10)

    %rd9_unroll_rd9_0_0 = shufflevector <8 x i64> %rd9_unroll_rd9_1_0, <8 x i64> %rd9_unroll_rd9_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd9_unroll_rd9_0_1 = shufflevector <8 x i64> %rd9_unroll_rd9_1_2, <8 x i64> %rd9_unroll_rd9_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9 = shufflevector <16 x i64> %rd9_unroll_rd9_0_0, <16 x i64> %rd9_unroll_rd9_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd9
    %rd9_i = getelementptr inbounds i64, i64* %a8, i64 %index
    %rd9_p = bitcast i64* %rd9_i to <32 x i64>*
    store <32 x i64> %rd9, <32 x i64>* %rd9_p, align 256, !noalias !1

    %index_next = add i64 %index, 32
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

declare <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float>, <16 x i32>, i16, i32)
declare <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float>, <16 x i32>, i16, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double>, <8 x i64>, i8, i32)

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
ceil_f_i32=[-1, 0, 0, 0, 1, 1, 1, 2, -2147483648]
ceil_f_i64=[-1, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_d_i32=[-1, 0, 0, 0, 1, 1, 1, 2, -2147483648]
ceil_d_i64=[-1, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_f_u32=[4294967295, 0, 0, 0, 1, 1, 1, 2, 4294967295]
ceil_f_u64=[18446744073709551615, 0, 0, 0, 1, 1, 1, 2, 4294967296]
ceil_d_u32=[4294967295, 0, 0, 0, 1, 1, 1, 2, 4294967295]
ceil_d_u64=[18446744073709551615, 0, 0, 0, 1, 1, 1, 2, 4294967296]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=host-async, size=256)
jit_var_inc_ref_int(1): 2
jit_var_new(11 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(11): 1
jit_var_inc_ref_int(1): 3
jit_var_new(12 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(12): 1
jit_var_inc_ref_int(1): 4
jit_var_new(13 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_int(1): 5
jit_var_new(14 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_int(2): 1
jit_var_new(15 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(15): 1
jit_var_inc_ref_int(2): 2
jit_var_new(16 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(16): 1
jit_var_inc_ref_int(2): 3
jit_var_new(17 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(17): 1
jit_var_inc_ref_int(2): 4
jit_var_new(18 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 9)
jit_var_inc_ref_ext(18): 1
jit_var_schedule(11)
jit_var_schedule(12)
jit_var_schedule(13)
jit_var_schedule(14)
jit_var_schedule(15)
jit_var_schedule(16)
jit_var_schedule(17)
jit_var_schedule(18)
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f0 -> 1 [in]
   - %r1 -> 11 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r2 -> 12 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd3 -> 13 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd4 -> 14 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %d5 -> 2
   - %r6 -> 15 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r7 -> 16 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd8 -> 17 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd9 -> 18 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=10) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(128) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*

    ; Prepare argument 3
    %a3_i = getelementptr inbounds i8*, i8** %ptrs, i32 3
    %a3_p = load i8*, i8** %a3_i, align 8, !alias.scope !1
    %a3 = bitcast i8* %a3_p to i64*

    ; Prepare argument 4
    %a4_i = getelementptr inbounds i8*, i8** %ptrs, i32 4
    %a4_p = load i8*, i8** %a4_i, align 8, !alias.scope !1
    %a4 = bitcast i8* %a4_p to i64*

    ; Prepare argument 5
    %a5_i = getelementptr inbounds i8*, i8** %ptrs, i32 5
    %a5_p = load i8*, i8** %a5_i, align 8, !alias.scope !1
    %a5 = bitcast i8* %a5_p to i32*

    ; Prepare argument 6
    %a6_i = getelementptr inbounds i8*, i8** %ptrs, i32 6
    %a6_p = load i8*, i8** %a6_i, align 8, !alias.scope !1
    %a6 = bitcast i8* %a6_p to i32*

    ; Prepare argument 7
    %a7_i = getelementptr inbounds i8*, i8** %ptrs, i32 7
    %a7_p = load i8*, i8** %a7_i, align 8, !alias.scope !1
    %a7 = bitcast i8* %a7_p to i64*

    ; Prepare argument 8
    %a8_i = getelementptr inbounds i8*, i8** %ptrs, i32 8
    %a8_p = load i8*, i8** %a8_i, align 8, !alias.scope !1
    %a8 = bitcast i8* %a8_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %f0
    %f0_i = getelementptr inbounds float, float* %a0, i64 %index
    %f0_p = bitcast float* %f0_i to <32 x float>*
    %f0 = load <32 x float>, <32 x float>* %f0_p, align 128, !alias.scope !1

    ; Evaluate %r1
    %f0_unroll_r1_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r1_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r1_unroll_r1_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_0, <16 x i32> zeroinitializer, i16 -1, i32 9)
    %r1_unroll_r1_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_1, <16 x i32> zeroinitializer, i16 -1, i32 9)

    %r1 = shufflevector <16 x i32> %r1_unroll_r1_0_0, <16 x i32> %r1_unroll_r1_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a1, i64 %index
    %r1_p = bitcast i32* %r1_i to <32 x i32>*
    store <32 x i32> %r1, <32 x i32>* %r1_p, align 128, !noalias !1

    ; Evaluate %r2
    %f0_unroll_r2_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r2_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r2_unroll_r2_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_0, <16 x i32> zeroinitializer, i16 -1, i32 9)
    %r2_unroll_r2_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_1, <16 x i32> zeroinitializer, i16 -1, i32 9)

    %r2 = shufflevector <16 x i32> %r2_unroll_r2_0_0, <16 x i32> %r2_unroll_r2_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r2
    %r2_i = getelementptr inbounds i32, i32* %a2, i64 %index
    %r2_p = bitcast i32* %r2_i to <32 x i32>*
    store <32 x i32> %r2, <32 x i32>* %r2_p, align 128, !noalias !1

    ; Evaluate %rd3
    %f0_unroll_rd3_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd3_1_0 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_1 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_1_2 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_3 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3_unroll_rd3_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_0, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd3_unroll_rd3_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_1, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd3_unroll_rd3_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_2, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd3_unroll_rd3_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_3, <8 x i64> zeroinitializer, i8 -1, i32 9)

    %rd3_unroll_rd3_0_0 = shufflevector <8 x i64> %rd3_unroll_rd3_1_0, <8 x i64> %rd3_unroll_rd3_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd3_unroll_rd3_0_1 = shufflevector <8 x i64> %rd3_unroll_rd3_1_2, <8 x i64> %rd3_unroll_rd3_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3 = shufflevector <16 x i64> %rd3_unroll_rd3_0_0, <16 x i64> %rd3_unroll_rd3_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd3
    %rd3_i = getelementptr inbounds i64, i64* %a3, i64 %index
    %rd3_p = bitcast i64* %rd3_i to <32 x i64>*
    store <32 x i64> %rd3, <32 x i64>* %rd3_p, align 256, !noalias !1

    ; Evaluate %rd4
    %f0_unroll_rd4_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd4_1_0 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_1 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_1_2 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_3 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4_unroll_rd4_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_0, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd4_unroll_rd4_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_1, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd4_unroll_rd4_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_2, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd4_unroll_rd4_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_3, <8 x i64> zeroinitializer, i8 -1, i32 9)

    %rd4_unroll_rd4_0_0 = shufflevector <8 x i64> %rd4_unroll_rd4_1_0, <8 x i64> %rd4_unroll_rd4_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd4_unroll_rd4_0_1 = shufflevector <8 x i64> %rd4_unroll_rd4_1_2, <8 x i64> %rd4_unroll_rd4_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4 = shufflevector <16 x i64> %rd4_unroll_rd4_0_0, <16 x i64> %rd4_unroll_rd4_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd4
    %rd4_i = getelementptr inbounds i64, i64* %a4, i64 %index
    %rd4_p = bitcast i64* %rd4_i to <32 x i64>*
    store <32 x i64> %rd4, <32 x i64>* %rd4_p, align 256, !noalias !1

    ; Evaluate %d5
    %d5 = fpext <32 x float> %f0 to <32 x double>

    ; Evaluate %r6
    %d5_unroll_r6_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r6_1_0 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_1 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_1_2 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_3 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6_unroll_r6_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_0, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r6_unroll_r6_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_1, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r6_unroll_r6_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_2, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r6_unroll_r6_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_3, <8 x i32> zeroinitializer, i8 -1, i32 9)

    %r6_unroll_r6_0_0 = shufflevector <8 x i32> %r6_unroll_r6_1_0, <8 x i32> %r6_unroll_r6_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r6_unroll_r6_0_1 = shufflevector <8 x i32> %r6_unroll_r6_1_2, <8 x i32> %r6_unroll_r6_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6 = shufflevector <16 x i32> %r6_unroll_r6_0_0, <16 x i32> %r6_unroll_r6_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a5, i64 %index
    %r6_p = bitcast i32* %r6_i to <32 x i32>*
    store <32 x i32> %r6, <32 x i32>* %r6_p, align 128, !noalias !1

    ; Evaluate %r7
    %d5_unroll_r7_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r7_1_0 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_1 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_1_2 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_3 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_r7_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_0, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r7_unroll_r7_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_1, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r7_unroll_r7_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_2, <8 x i32> zeroinitializer, i8 -1, i32 9)
    %r7_unroll_r7_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_3, <8 x i32> zeroinitializer, i8 -1, i32 9)

    %r7_unroll_r7_0_0 = shufflevector <8 x i32> %r7_unroll_r7_1_0, <8 x i32> %r7_unroll_r7_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r7_unroll_r7_0_1 = shufflevector <8 x i32> %r7_unroll_r7_1_2, <8 x i32> %r7_unroll_r7_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7 = shufflevector <16 x i32> %r7_unroll_r7_0_0, <16 x i32> %r7_unroll_r7_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r7
    %r7_i = getelementptr inbounds i32, i32* %a6, i64 %index
    %r7_p = bitcast i32* %r7_i to <32 x i32>*
    store <32 x i32> %r7, <32 x i32>* %r7_p, align 128, !noalias !1

    ; Evaluate %rd8
    %d5_unroll_rd8_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd8_1_0 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_1 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_1_2 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_3 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_rd8_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_0, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd8_unroll_rd8_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_1, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd8_unroll_rd8_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_2, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd8_unroll_rd8_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_3, <8 x i64> zeroinitializer, i8 -1, i32 9)

    %rd8_unroll_rd8_0_0 = shufflevector <8 x i64> %rd8_unroll_rd8_1_0, <8 x i64> %rd8_unroll_rd8_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd8_unroll_rd8_0_1 = shufflevector <8 x i64> %rd8_unroll_rd8_1_2, <8 x i64> %rd8_unroll_rd8_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8 = shufflevector <16 x i64> %rd8_unroll_rd8_0_0, <16 x i64> %rd8_unroll_rd8_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd8
    %rd8_i = getelementptr inbounds i64, i64* %a7, i64 %index
    %rd8_p = bitcast i64* %rd8_i to <32 x i64>*
    store <32 x i64> %rd8, <32 x i64>* %rd8_p, align 256, !noalias !1

    ; Evaluate %rd9
    %d5_unroll_rd9_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd9_1_0 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_1 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_1_2 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_3 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9_unroll_rd9_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_0, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd9_unroll_rd9_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_1, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd9_unroll_rd9_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_2, <8 x i64> zeroinitializer, i8 -1, i32 9)
    %rd9_unroll_rd9_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_3, <8 x i64> zeroinitializer, i8 -1, i32 9)

    %rd9_unroll_rd9_0_0 = shufflevector <8 x i64> %rd9_unroll_rd9_1_0, <8 x i64> %rd9_unroll_rd9_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd9_unroll_rd9_0_1 = shufflevector <8 x i64> %rd9_unroll_rd9_1_2, <8 x i64> %rd9_unroll_rd9_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9 = shufflevector <16 x i64> %rd9_unroll_rd9_0_0, <16 x i64> %rd9_unroll_rd9_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd9
    %rd9_i = getelementptr inbounds i64, i64* %a8, i64 %index
    %rd9_p = bitcast i64* %rd9_i to <32 x i64>*
    store <32 x i64> %rd9, <32 x i64>* %rd9_p, align 256, !noalias !1

    %index_next = add i64 %index, 32
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

declare <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float>, <16 x i32>, i16, i32)
declare <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float>, <16 x i32>, i16, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double>, <8 x i64>, i8, i32)

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
floor_f_i32=[-2, -1, -1, -1, 0, 0, 0, 1, -2147483648]
floor_f_i64=[-2, -1, -1, -1, 0, 0, 0, 1, 4294967296]
floor_d_i32=[-2, -1, -1, -1, 0, 0, 0, 1, -2147483648]
floor_d_i64=[-2, -1, -1, -1, 0, 0, 0, 1, 4294967296]
floor_f_u32=[4294967295, 4294967295, 4294967295, 4294967295, 0, 0, 0, 1, 4294967295]
floor_f_u64=[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 0, 0, 0, 1, 4294967296]
floor_d_u32=[4294967295, 4294967295, 4294967295, 4294967295, 0, 0, 0, 1, 4294967295]
floor_d_u64=[18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 0, 0, 0, 1, 4294967296]
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(15): 0
jit_var_free(15)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_free(<@>, type=host-async, size=256)
jit_var_inc_ref_int(1): 2
jit_var_new(19 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(19): 1
jit_var_inc_ref_int(1): 3
jit_var_new(20 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(20): 1
jit_var_inc_ref_int(1): 4
jit_var_new(21 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(21): 1
jit_var_inc_ref_int(1): 5
jit_var_new(22 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(22): 1
jit_var_inc_ref_int(2): 1
jit_var_new(23 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_int(2): 2
jit_var_new(24 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(24): 1
jit_var_inc_ref_int(2): 3
jit_var_new(25 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(25): 1
jit_var_inc_ref_int(2): 4
jit_var_new(26 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 11)
jit_var_inc_ref_ext(26): 1
jit_var_schedule(19)
jit_var_schedule(20)
jit_var_schedule(21)
jit_var_schedule(22)
jit_var_schedule(23)
jit_var_schedule(24)
jit_var_schedule(25)
jit_var_schedule(26)
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f0 -> 1 [in]
   - %r1 -> 19 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r2 -> 20 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd3 -> 21 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd4 -> 22 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %d5 -> 2
   - %r6 -> 23 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r7 -> 24 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd8 -> 25 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd9 -> 26 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=10) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(128) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*

    ; Prepare argument 3
    %a3_i = getelementptr inbounds i8*, i8** %ptrs, i32 3
    %a3_p = load i8*, i8** %a3_i, align 8, !alias.scope !1
    %a3 = bitcast i8* %a3_p to i64*

    ; Prepare argument 4
    %a4_i = getelementptr inbounds i8*, i8** %ptrs, i32 4
    %a4_p = load i8*, i8** %a4_i, align 8, !alias.scope !1
    %a4 = bitcast i8* %a4_p to i64*

    ; Prepare argument 5
    %a5_i = getelementptr inbounds i8*, i8** %ptrs, i32 5
    %a5_p = load i8*, i8** %a5_i, align 8, !alias.scope !1
    %a5 = bitcast i8* %a5_p to i32*

    ; Prepare argument 6
    %a6_i = getelementptr inbounds i8*, i8** %ptrs, i32 6
    %a6_p = load i8*, i8** %a6_i, align 8, !alias.scope !1
    %a6 = bitcast i8* %a6_p to i32*

    ; Prepare argument 7
    %a7_i = getelementptr inbounds i8*, i8** %ptrs, i32 7
    %a7_p = load i8*, i8** %a7_i, align 8, !alias.scope !1
    %a7 = bitcast i8* %a7_p to i64*

    ; Prepare argument 8
    %a8_i = getelementptr inbounds i8*, i8** %ptrs, i32 8
    %a8_p = load i8*, i8** %a8_i, align 8, !alias.scope !1
    %a8 = bitcast i8* %a8_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %f0
    %f0_i = getelementptr inbounds float, float* %a0, i64 %index
    %f0_p = bitcast float* %f0_i to <32 x float>*
    %f0 = load <32 x float>, <32 x float>* %f0_p, align 128, !alias.scope !1

    ; Evaluate %r1
    %f0_unroll_r1_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r1_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r1_unroll_r1_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_0, <16 x i32> zeroinitializer, i16 -1, i32 11)
    %r1_unroll_r1_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_1, <16 x i32> zeroinitializer, i16 -1, i32 11)

    %r1 = shufflevector <16 x i32> %r1_unroll_r1_0_0, <16 x i32> %r1_unroll_r1_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a1, i64 %index
    %r1_p = bitcast i32* %r1_i to <32 x i32>*
    store <32 x i32> %r1, <32 x i32>* %r1_p, align 128, !noalias !1

    ; Evaluate %r2
    %f0_unroll_r2_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r2_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r2_unroll_r2_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_0, <16 x i32> zeroinitializer, i16 -1, i32 11)
    %r2_unroll_r2_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_1, <16 x i32> zeroinitializer, i16 -1, i32 11)

    %r2 = shufflevector <16 x i32> %r2_unroll_r2_0_0, <16 x i32> %r2_unroll_r2_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r2
    %r2_i = getelementptr inbounds i32, i32* %a2, i64 %index
    %r2_p = bitcast i32* %r2_i to <32 x i32>*
    store <32 x i32> %r2, <32 x i32>* %r2_p, align 128, !noalias !1

    ; Evaluate %rd3
    %f0_unroll_rd3_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd3_1_0 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_1 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_1_2 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_3 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3_unroll_rd3_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_0, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd3_unroll_rd3_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_1, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd3_unroll_rd3_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_2, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd3_unroll_rd3_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_3, <8 x i64> zeroinitializer, i8 -1, i32 11)

    %rd3_unroll_rd3_0_0 = shufflevector <8 x i64> %rd3_unroll_rd3_1_0, <8 x i64> %rd3_unroll_rd3_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd3_unroll_rd3_0_1 = shufflevector <8 x i64> %rd3_unroll_rd3_1_2, <8 x i64> %rd3_unroll_rd3_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3 = shufflevector <16 x i64> %rd3_unroll_rd3_0_0, <16 x i64> %rd3_unroll_rd3_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd3
    %rd3_i = getelementptr inbounds i64, i64* %a3, i64 %index
    %rd3_p = bitcast i64* %rd3_i to <32 x i64>*
    store <32 x i64> %rd3, <32 x i64>* %rd3_p, align 256, !noalias !1

    ; Evaluate %rd4
    %f0_unroll_rd4_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd4_1_0 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_1 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_1_2 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_3 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4_unroll_rd4_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_0, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd4_unroll_rd4_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_1, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd4_unroll_rd4_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_2, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd4_unroll_rd4_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_3, <8 x i64> zeroinitializer, i8 -1, i32 11)

    %rd4_unroll_rd4_0_0 = shufflevector <8 x i64> %rd4_unroll_rd4_1_0, <8 x i64> %rd4_unroll_rd4_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd4_unroll_rd4_0_1 = shufflevector <8 x i64> %rd4_unroll_rd4_1_2, <8 x i64> %rd4_unroll_rd4_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4 = shufflevector <16 x i64> %rd4_unroll_rd4_0_0, <16 x i64> %rd4_unroll_rd4_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd4
    %rd4_i = getelementptr inbounds i64, i64* %a4, i64 %index
    %rd4_p = bitcast i64* %rd4_i to <32 x i64>*
    store <32 x i64> %rd4, <32 x i64>* %rd4_p, align 256, !noalias !1

    ; Evaluate %d5
    %d5 = fpext <32 x float> %f0 to <32 x double>

    ; Evaluate %r6
    %d5_unroll_r6_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r6_1_0 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_1 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_1_2 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_3 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6_unroll_r6_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_0, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r6_unroll_r6_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_1, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r6_unroll_r6_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_2, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r6_unroll_r6_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_3, <8 x i32> zeroinitializer, i8 -1, i32 11)

    %r6_unroll_r6_0_0 = shufflevector <8 x i32> %r6_unroll_r6_1_0, <8 x i32> %r6_unroll_r6_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r6_unroll_r6_0_1 = shufflevector <8 x i32> %r6_unroll_r6_1_2, <8 x i32> %r6_unroll_r6_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6 = shufflevector <16 x i32> %r6_unroll_r6_0_0, <16 x i32> %r6_unroll_r6_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a5, i64 %index
    %r6_p = bitcast i32* %r6_i to <32 x i32>*
    store <32 x i32> %r6, <32 x i32>* %r6_p, align 128, !noalias !1

    ; Evaluate %r7
    %d5_unroll_r7_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r7_1_0 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_1 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_1_2 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_3 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_r7_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_0, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r7_unroll_r7_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_1, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r7_unroll_r7_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_2, <8 x i32> zeroinitializer, i8 -1, i32 11)
    %r7_unroll_r7_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_3, <8 x i32> zeroinitializer, i8 -1, i32 11)

    %r7_unroll_r7_0_0 = shufflevector <8 x i32> %r7_unroll_r7_1_0, <8 x i32> %r7_unroll_r7_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r7_unroll_r7_0_1 = shufflevector <8 x i32> %r7_unroll_r7_1_2, <8 x i32> %r7_unroll_r7_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7 = shufflevector <16 x i32> %r7_unroll_r7_0_0, <16 x i32> %r7_unroll_r7_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r7
    %r7_i = getelementptr inbounds i32, i32* %a6, i64 %index
    %r7_p = bitcast i32* %r7_i to <32 x i32>*
    store <32 x i32> %r7, <32 x i32>* %r7_p, align 128, !noalias !1

    ; Evaluate %rd8
    %d5_unroll_rd8_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd8_1_0 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_1 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_1_2 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_3 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_rd8_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_0, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd8_unroll_rd8_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_1, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd8_unroll_rd8_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_2, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd8_unroll_rd8_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_3, <8 x i64> zeroinitializer, i8 -1, i32 11)

    %rd8_unroll_rd8_0_0 = shufflevector <8 x i64> %rd8_unroll_rd8_1_0, <8 x i64> %rd8_unroll_rd8_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd8_unroll_rd8_0_1 = shufflevector <8 x i64> %rd8_unroll_rd8_1_2, <8 x i64> %rd8_unroll_rd8_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8 = shufflevector <16 x i64> %rd8_unroll_rd8_0_0, <16 x i64> %rd8_unroll_rd8_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd8
    %rd8_i = getelementptr inbounds i64, i64* %a7, i64 %index
    %rd8_p = bitcast i64* %rd8_i to <32 x i64>*
    store <32 x i64> %rd8, <32 x i64>* %rd8_p, align 256, !noalias !1

    ; Evaluate %rd9
    %d5_unroll_rd9_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd9_1_0 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_1 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_1_2 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_3 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9_unroll_rd9_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_0, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd9_unroll_rd9_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_1, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd9_unroll_rd9_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_2, <8 x i64> zeroinitializer, i8 -1, i32 11)
    %rd9_unroll_rd9_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_3, <8 x i64> zeroinitializer, i8 -1, i32 11)

    %rd9_unroll_rd9_0_0 = shufflevector <8 x i64> %rd9_unroll_rd9_1_0, <8 x i64> %rd9_unroll_rd9_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd9_unroll_rd9_0_1 = shufflevector <8 x i64> %rd9_unroll_rd9_1_2, <8 x i64> %rd9_unroll_rd9_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9 = shufflevector <16 x i64> %rd9_unroll_rd9_0_0, <16 x i64> %rd9_unroll_rd9_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd9
    %rd9_i = getelementptr inbounds i64, i64* %a8, i64 %index
    %rd9_p = bitcast i64* %rd9_i to <32 x i64>*
    store <32 x i64> %rd9, <32 x i64>* %rd9_p, align 256, !noalias !1

    %index_next = add i64 %index, 32
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

declare <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float>, <16 x i32>, i16, i32)
declare <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float>, <16 x i32>, i16, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double>, <8 x i64>, i8, i32)

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
trunc_f_i32=[-1, 0, 0, 0, 0, 0, 0, 1, -2147483648]
trunc_f_i64=[-1, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_d_i32=[-1, 0, 0, 0, 0, 0, 0, 1, -2147483648]
trunc_d_i64=[-1, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_f_u32=[4294967295, 0, 0, 0, 0, 0, 0, 1, 4294967295]
trunc_f_u64=[18446744073709551615, 0, 0, 0, 0, 0, 0, 1, 4294967296]
trunc_d_u32=[4294967295, 0, 0, 0, 0, 0, 0, 1, 4294967295]
trunc_d_u64=[18446744073709551615, 0, 0, 0, 0, 0, 0, 1, 4294967296]
jit_var_dec_ref_ext(26): 0
jit_var_free(26)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(24): 0
jit_var_free(24)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(23): 0
jit_var_free(23)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(22): 0
jit_var_free(22)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(21): 0
jit_var_free(21)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(19): 0
jit_var_free(19)
jit_free(<@>, type=host-async, size=256)
jit_var_inc_ref_int(1): 2
jit_var_new(27 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(27): 1
jit_var_inc_ref_int(1): 3
jit_var_new(28 <- 1): $4$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(28): 1
jit_var_inc_ref_int(1): 4
jit_var_new(29 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(29): 1
jit_var_inc_ref_int(1): 5
jit_var_new(30 <- 1): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtps2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(30): 1
jit_var_inc_ref_int(2): 1
jit_var_new(31 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2dq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(31): 1
jit_var_inc_ref_int(2): 2
jit_var_new(32 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2udq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(32): 1
jit_var_inc_ref_int(2): 3
jit_var_new(33 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2qq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(33): 1
jit_var_inc_ref_int(2): 4
jit_var_new(34 <- 2): $3$r0 = call <$w x $t0> @llvm.x86.avx512.mask.cvtpd2uqq.512(<$w x $t1> $r1, <$w x $t0> $z, i$w$S -1, i32$S 8)
jit_var_inc_ref_ext(34): 1
jit_var_schedule(27)
jit_var_schedule(28)
jit_var_schedule(29)
jit_var_schedule(30)
jit_var_schedule(31)
jit_var_schedule(32)
jit_var_schedule(33)
jit_var_schedule(34)
input=[-1.1, -0.6, -0.5, -0.4, 0.4, 0.5, 0.6, 1.1, 4.29497e+09]
jit_eval(): begin.
jit_assemble(size=9): register map:
   - %f0 -> 1 [in]
   - %r1 -> 27 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r2 -> 28 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd3 -> 29 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd4 -> 30 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %d5 -> 2
   - %r6 -> 31 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %r7 -> 32 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd8 -> 33 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
   - %rd9 -> 34 [out]
jit_malloc(type=host-async, size=256): <@> (reused local)
jit_run(): launching kernel (n=9, in=1, out=8, ops=10) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(128) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*

    ; Prepare argument 3
    %a3_i = getelementptr inbounds i8*, i8** %ptrs, i32 3
    %a3_p = load i8*, i8** %a3_i, align 8, !alias.scope !1
    %a3 = bitcast i8* %a3_p to i64*

    ; Prepare argument 4
    %a4_i = getelementptr inbounds i8*, i8** %ptrs, i32 4
    %a4_p = load i8*, i8** %a4_i, align 8, !alias.scope !1
    %a4 = bitcast i8* %a4_p to i64*

    ; Prepare argument 5
    %a5_i = getelementptr inbounds i8*, i8** %ptrs, i32 5
    %a5_p = load i8*, i8** %a5_i, align 8, !alias.scope !1
    %a5 = bitcast i8* %a5_p to i32*

    ; Prepare argument 6
    %a6_i = getelementptr inbounds i8*, i8** %ptrs, i32 6
    %a6_p = load i8*, i8** %a6_i, align 8, !alias.scope !1
    %a6 = bitcast i8* %a6_p to i32*

    ; Prepare argument 7
    %a7_i = getelementptr inbounds i8*, i8** %ptrs, i32 7
    %a7_p = load i8*, i8** %a7_i, align 8, !alias.scope !1
    %a7 = bitcast i8* %a7_p to i64*

    ; Prepare argument 8
    %a8_i = getelementptr inbounds i8*, i8** %ptrs, i32 8
    %a8_p = load i8*, i8** %a8_i, align 8, !alias.scope !1
    %a8 = bitcast i8* %a8_p to i64*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %f0
    %f0_i = getelementptr inbounds float, float* %a0, i64 %index
    %f0_p = bitcast float* %f0_i to <32 x float>*
    %f0 = load <32 x float>, <32 x float>* %f0_p, align 128, !alias.scope !1

    ; Evaluate %r1
    %f0_unroll_r1_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r1_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r1_unroll_r1_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_0, <16 x i32> zeroinitializer, i16 -1, i32 8)
    %r1_unroll_r1_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float> %f0_unroll_r1_0_1, <16 x i32> zeroinitializer, i16 -1, i32 8)

    %r1 = shufflevector <16 x i32> %r1_unroll_r1_0_0, <16 x i32> %r1_unroll_r1_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a1, i64 %index
    %r1_p = bitcast i32* %r1_i to <32 x i32>*
    store <32 x i32> %r1, <32 x i32>* %r1_p, align 128, !noalias !1

    ; Evaluate %r2
    %f0_unroll_r2_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_r2_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %r2_unroll_r2_0_0 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_0, <16 x i32> zeroinitializer, i16 -1, i32 8)
    %r2_unroll_r2_0_1 = call <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float> %f0_unroll_r2_0_1, <16 x i32> zeroinitializer, i16 -1, i32 8)

    %r2 = shufflevector <16 x i32> %r2_unroll_r2_0_0, <16 x i32> %r2_unroll_r2_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r2
    %r2_i = getelementptr inbounds i32, i32* %a2, i64 %index
    %r2_p = bitcast i32* %r2_i to <32 x i32>*
    store <32 x i32> %r2, <32 x i32>* %r2_p, align 128, !noalias !1

    ; Evaluate %rd3
    %f0_unroll_rd3_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd3_1_0 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_1 = shufflevector <16 x float> %f0_unroll_rd3_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd3_1_2 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd3_1_3 = shufflevector <16 x float> %f0_unroll_rd3_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3_unroll_rd3_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_0, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd3_unroll_rd3_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_1, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd3_unroll_rd3_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_2, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd3_unroll_rd3_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float> %f0_unroll_rd3_1_3, <8 x i64> zeroinitializer, i8 -1, i32 8)

    %rd3_unroll_rd3_0_0 = shufflevector <8 x i64> %rd3_unroll_rd3_1_0, <8 x i64> %rd3_unroll_rd3_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd3_unroll_rd3_0_1 = shufflevector <8 x i64> %rd3_unroll_rd3_1_2, <8 x i64> %rd3_unroll_rd3_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd3 = shufflevector <16 x i64> %rd3_unroll_rd3_0_0, <16 x i64> %rd3_unroll_rd3_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd3
    %rd3_i = getelementptr inbounds i64, i64* %a3, i64 %index
    %rd3_p = bitcast i64* %rd3_i to <32 x i64>*
    store <32 x i64> %rd3, <32 x i64>* %rd3_p, align 256, !noalias !1

    ; Evaluate %rd4
    %f0_unroll_rd4_0_0 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_0_1 = shufflevector <32 x float> %f0, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %f0_unroll_rd4_1_0 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_1 = shufflevector <16 x float> %f0_unroll_rd4_0_0, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %f0_unroll_rd4_1_2 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f0_unroll_rd4_1_3 = shufflevector <16 x float> %f0_unroll_rd4_0_1, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4_unroll_rd4_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_0, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd4_unroll_rd4_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_1, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd4_unroll_rd4_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_2, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd4_unroll_rd4_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float> %f0_unroll_rd4_1_3, <8 x i64> zeroinitializer, i8 -1, i32 8)

    %rd4_unroll_rd4_0_0 = shufflevector <8 x i64> %rd4_unroll_rd4_1_0, <8 x i64> %rd4_unroll_rd4_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd4_unroll_rd4_0_1 = shufflevector <8 x i64> %rd4_unroll_rd4_1_2, <8 x i64> %rd4_unroll_rd4_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd4 = shufflevector <16 x i64> %rd4_unroll_rd4_0_0, <16 x i64> %rd4_unroll_rd4_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd4
    %rd4_i = getelementptr inbounds i64, i64* %a4, i64 %index
    %rd4_p = bitcast i64* %rd4_i to <32 x i64>*
    store <32 x i64> %rd4, <32 x i64>* %rd4_p, align 256, !noalias !1

    ; Evaluate %d5
    %d5 = fpext <32 x float> %f0 to <32 x double>

    ; Evaluate %r6
    %d5_unroll_r6_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r6_1_0 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_1 = shufflevector <16 x double> %d5_unroll_r6_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r6_1_2 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r6_1_3 = shufflevector <16 x double> %d5_unroll_r6_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6_unroll_r6_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_0, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r6_unroll_r6_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_1, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r6_unroll_r6_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_2, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r6_unroll_r6_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double> %d5_unroll_r6_1_3, <8 x i32> zeroinitializer, i8 -1, i32 8)

    %r6_unroll_r6_0_0 = shufflevector <8 x i32> %r6_unroll_r6_1_0, <8 x i32> %r6_unroll_r6_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r6_unroll_r6_0_1 = shufflevector <8 x i32> %r6_unroll_r6_1_2, <8 x i32> %r6_unroll_r6_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r6 = shufflevector <16 x i32> %r6_unroll_r6_0_0, <16 x i32> %r6_unroll_r6_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a5, i64 %index
    %r6_p = bitcast i32* %r6_i to <32 x i32>*
    store <32 x i32> %r6, <32 x i32>* %r6_p, align 128, !noalias !1

    ; Evaluate %r7
    %d5_unroll_r7_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_r7_1_0 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_1 = shufflevector <16 x double> %d5_unroll_r7_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_r7_1_2 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_r7_1_3 = shufflevector <16 x double> %d5_unroll_r7_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_r7_1_0 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_0, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r7_unroll_r7_1_1 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_1, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r7_unroll_r7_1_2 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_2, <8 x i32> zeroinitializer, i8 -1, i32 8)
    %r7_unroll_r7_1_3 = call <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double> %d5_unroll_r7_1_3, <8 x i32> zeroinitializer, i8 -1, i32 8)

    %r7_unroll_r7_0_0 = shufflevector <8 x i32> %r7_unroll_r7_1_0, <8 x i32> %r7_unroll_r7_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %r7_unroll_r7_0_1 = shufflevector <8 x i32> %r7_unroll_r7_1_2, <8 x i32> %r7_unroll_r7_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7 = shufflevector <16 x i32> %r7_unroll_r7_0_0, <16 x i32> %r7_unroll_r7_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %r7
    %r7_i = getelementptr inbounds i32, i32* %a6, i64 %index
    %r7_p = bitcast i32* %r7_i to <32 x i32>*
    store <32 x i32> %r7, <32 x i32>* %r7_p, align 128, !noalias !1

    ; Evaluate %rd8
    %d5_unroll_rd8_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd8_1_0 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_1 = shufflevector <16 x double> %d5_unroll_rd8_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd8_1_2 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd8_1_3 = shufflevector <16 x double> %d5_unroll_rd8_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_rd8_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_0, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd8_unroll_rd8_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_1, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd8_unroll_rd8_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_2, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd8_unroll_rd8_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double> %d5_unroll_rd8_1_3, <8 x i64> zeroinitializer, i8 -1, i32 8)

    %rd8_unroll_rd8_0_0 = shufflevector <8 x i64> %rd8_unroll_rd8_1_0, <8 x i64> %rd8_unroll_rd8_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd8_unroll_rd8_0_1 = shufflevector <8 x i64> %rd8_unroll_rd8_1_2, <8 x i64> %rd8_unroll_rd8_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8 = shufflevector <16 x i64> %rd8_unroll_rd8_0_0, <16 x i64> %rd8_unroll_rd8_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd8
    %rd8_i = getelementptr inbounds i64, i64* %a7, i64 %index
    %rd8_p = bitcast i64* %rd8_i to <32 x i64>*
    store <32 x i64> %rd8, <32 x i64>* %rd8_p, align 256, !noalias !1

    ; Evaluate %rd9
    %d5_unroll_rd9_0_0 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_0_1 = shufflevector <32 x double> %d5, <32 x double> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    %d5_unroll_rd9_1_0 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_1 = shufflevector <16 x double> %d5_unroll_rd9_0_0, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %d5_unroll_rd9_1_2 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d5_unroll_rd9_1_3 = shufflevector <16 x double> %d5_unroll_rd9_0_1, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9_unroll_rd9_1_0 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_0, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd9_unroll_rd9_1_1 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_1, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd9_unroll_rd9_1_2 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_2, <8 x i64> zeroinitializer, i8 -1, i32 8)
    %rd9_unroll_rd9_1_3 = call <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double> %d5_unroll_rd9_1_3, <8 x i64> zeroinitializer, i8 -1, i32 8)

    %rd9_unroll_rd9_0_0 = shufflevector <8 x i64> %rd9_unroll_rd9_1_0, <8 x i64> %rd9_unroll_rd9_1_1, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
    %rd9_unroll_rd9_0_1 = shufflevector <8 x i64> %rd9_unroll_rd9_1_2, <8 x i64> %rd9_unroll_rd9_1_3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd9 = shufflevector <16 x i64> %rd9_unroll_rd9_0_0, <16 x i64> %rd9_unroll_rd9_0_1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>

    ; Store %rd9
    %rd9_i = getelementptr inbounds i64, i64* %a8, i64 %index
    %rd9_p = bitcast i64* %rd9_i to <32 x i64>*
    store <32 x i64> %rd9, <32 x i64>* %rd9_p, align 256, !noalias !1

    %index_next = add i64 %index, 32
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

declare <16 x i32> @llvm.x86.avx512.mask.cvtps2dq.512(<16 x float>, <16 x i32>, i16, i32)
declare <16 x i32> @llvm.x86.avx512.mask.cvtps2udq.512(<16 x float>, <16 x i32>, i16, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2qq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtps2uqq.512(<8 x float>, <8 x i64>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2dq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i32> @llvm.x86.avx512.mask.cvtpd2udq.512(<8 x double>, <8 x i32>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2qq.512(<8 x double>, <8 x i64>, i8, i32)
declare <8 x i64> @llvm.x86.avx512.mask.cvtpd2uqq.512(<8 x double>, <8 x i64>, i8, i32)

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 4
jit_var_dec_ref_int(1): 3
jit_var_dec_ref_int(1): 2
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(2): 3
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(2): 0
jit_eval(): done.
round_f_i32=[-1, -1, 0, 0, 0, 0, 1, 1, -2147483648]
round_f_i64=[-1, -1, 0, 0, 0, 0, 1, 1, 4294967296]
round_d_i32=[-1, -1, 0, 0, 0, 0, 1, 1, -2147483648]
round_d_i64=[-1, -1, 0, 0, 0, 0, 1, 1, 4294967296]
round_f_u32=[4294967295, 4294967295, 0, 0, 0, 0, 1, 1, 4294967295]
round_f_u64=[18446744073709551615, 18446744073709551615, 0, 0, 0, 0, 1, 1, 4294967296]
round_d_u32=[4294967295, 4294967295, 0, 0, 0, 0, 1, 1, 4294967295]
round_d_u64=[18446744073709551615, 18446744073709551615, 0, 0, 0, 0, 1, 1, 4294967296]
jit_var_dec_ref_ext(34): 0
jit_var_free(34)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(33): 0
jit_var_free(33)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(32): 0
jit_var_free(32)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(31): 0
jit_var_free(31)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(30): 0
jit_var_free(30)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(29): 0
jit_var_free(29)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(28): 0
jit_var_free(28)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(27): 0
jit_var_free(27)
jit_free(<@>, type=host-async, size=256)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_var_dec_ref_int(1): 0
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host-async, size=256)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 9 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-async memory: 2.25 KiB in 9 allocations
jit_shutdown(): done
