jit_device_set(device=0, stream=0): creating stream
jit_registry_put(<@>, domain="MyKey"): 1 (new)
jit_registry_put(<@>, domain="MyKey"): 2 (new)
jit_registry_put(<@>, domain="MyKey"): 3 (new)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(1): <@>, size=10, free=1
jit_var_inc_ref_ext(1): 1
jit_var_copy(1, size=10)
jit_vcall(1, domain="MyKey")
jit_malloc(type=host-pinned, size=128): <@> (new allocation)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_mkperm(<@>, size=10, bucket_count=4, block_count=1, thread_count=32, size_per_block=32, variant=tiny, shared_size=16)
jit_scan(<@> -> <@>, size=4)
jit_free(<@>, type=device, device=0, size=64)
jit_free(<@>, type=device, device=0, size=64)
jit_var_map(2): <@>, size=10, free=1
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_ext(3): 1
jit_vcall(): registered variable 3: bucket 1 (0xa) of size 2.
jit_var_inc_ref_int(2): 2
jit_var_inc_ref_ext(4): 1
jit_vcall(): registered variable 4: bucket 2 (0xb) of size 4.
jit_var_inc_ref_int(2): 3
jit_var_inc_ref_ext(5): 1
jit_vcall(): registered variable 5: bucket 3 (0xc) of size 2.
jit_var_dec_ref_ext(2): 0
jit_var_inc_ref_ext(3): 2
jit_var_inc_ref_ext(4): 2
jit_var_inc_ref_ext(5): 2
jit_var_inc_ref_ext(3): 3
jit_var_inc_ref_ext(4): 3
jit_var_inc_ref_ext(5): 3
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(6): <@>, size=2, free=1
jit_var_inc_ref_ext(6): 1
jit_var_copy(6, size=2)
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(6): 1
jit_trace_append(7 <- 3, 6): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(7): 1
jit_eval(): begin.
jit_assemble(size=2): register map:
   - %r4 -> 3 [in]
   - %r5 -> 6 [in]
   - %p6 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=2, in=2, out=1, ops=7) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Evaluate %p6
    setp.eq.u32 %p6, %r4, %r5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(6): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
jit_all(<@>, size=2)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(8): <@>, size=4, free=1
jit_var_inc_ref_ext(8): 1
jit_var_copy(8, size=4)
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(8): 1
jit_trace_append(9 <- 4, 8): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(9): 1
jit_eval(): begin.
jit_assemble(size=4): register map:
   - %r4 -> 4 [in]
   - %r5 -> 8 [in]
   - %p6 -> 9 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=4, in=2, out=1, ops=7) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Evaluate %p6
    setp.eq.u32 %p6, %r4, %r5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(8): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
jit_all(<@>, size=4)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(10): <@>, size=2, free=1
jit_var_inc_ref_ext(10): 1
jit_var_copy(10, size=2)
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(10): 1
jit_trace_append(11 <- 5, 10): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(11): 1
jit_eval(): begin.
jit_assemble(size=2): register map:
   - %r4 -> 5 [in]
   - %r5 -> 10 [in]
   - %p6 -> 11 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=2, in=2, out=1, ops=7) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Evaluate %p6
    setp.eq.u32 %p6, %r4, %r5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(5): 0
jit_var_dec_ref_int(10): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
jit_all(<@>, size=2)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=device, device=0, size=64)
jit_registry_remove(<@>)
jit_registry_remove(<@>)
jit_registry_remove(<@>)
jit_var_dec_ref_ext(5): 2
jit_var_dec_ref_ext(4): 2
jit_var_dec_ref_ext(3): 2
jit_var_dec_ref_ext(5): 1
jit_var_dec_ref_ext(4): 1
jit_var_dec_ref_ext(3): 1
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_var_dec_ref_int(2): 2
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_var_dec_ref_int(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_free(<@>, type=host-pinned, size=128)
jit_shutdown(): destroying streams ..
jit_free_flush(): scheduling 6 deallocations
jit_registry_trim(): removed 4 / 4 entries.
jit_malloc_trim(): freed
 - host-pinned memory: 320 B in 4 allocations
 - device memory: 256 B in 4 allocations
jit_shutdown(): done
