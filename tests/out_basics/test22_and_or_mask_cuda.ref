jit_set_device(device=0, stream=0): creating stream
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(1): <@>, size=2, free=1
jit_var_inc_ref_ext(1): 1
jit_var_copy(1, size=2)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(2): <@>, size=2, free=1
jit_var_inc_ref_ext(2): 1
jit_var_copy(2, size=2)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(3): <@>, size=2, free=1
jit_var_inc_ref_ext(3): 1
jit_var_copy(3, size=2)
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(4): <@>, size=2, free=1
jit_var_inc_ref_ext(4): 1
jit_var_copy(4, size=2)
jit_var_inc_ref_int(1): 1
jit_var_inc_ref_int(4): 1
jit_var_new(5 <- 1, 4): selp.$b0 $r0, -1, $r1, $r2
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(1): 2
jit_var_inc_ref_int(4): 2
jit_var_new(6 <- 1, 4): selp.$b0 $r0, $r1, 0, $r2
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(4): 3
jit_var_new(7 <- 2, 4): selp.$b0 $r0, -1, $r1, $r2
jit_var_inc_ref_ext(7): 1
jit_var_inc_ref_int(2): 2
jit_var_inc_ref_int(4): 4
jit_var_new(8 <- 2, 4): selp.$b0 $r0, $r1, 0, $r2
jit_var_inc_ref_ext(8): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(4): 5
jit_var_new(9 <- 3, 4): selp.$b0 $r0, -1, $r1, $r2
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_int(3): 2
jit_var_inc_ref_int(4): 6
jit_var_new(10 <- 3, 4): selp.$b0 $r0, $r1, 0, $r2
jit_var_inc_ref_ext(10): 1
jit_var_inc_ref_int(9): 1
jit_var_new(11 <- 9): abs.ftz.$t0 $r0, $r1
jit_var_inc_ref_ext(11): 1
jit_var_dec_ref_ext(9): 0
jit_var_schedule(5)
jit_var_schedule(6)
jit_var_schedule(7)
jit_var_schedule(8)
jit_var_schedule(11)
jit_var_schedule(10)
jit_eval(): begin.
jit_assemble(size=2): register map:
   - %r4 -> 1 [in]
   - %p5 -> 4 [in]
   - %r6 -> 5 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r7 -> 6 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r8 -> 2 [in]
   - %r9 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %r10 -> 8 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %f11 -> 3 [in]
   - %f12 -> 9
   - %f13 -> 11 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
   - %f14 -> 10 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=2, in=4, out=6, ops=15) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2,
                              .param .u64 arg3,
                              .param .u64 arg4,
                              .param .u64 arg5,
                              .param .u64 arg6,
                              .param .u64 arg7,
                              .param .u64 arg8,
                              .param .u64 arg9) {
    .reg.b8 %b<15>;
    .reg.b16 %w<15>;
    .reg.b32 %r<15>;
    .reg.b64 %rd<15>;
    .reg.f32 %f<15>;
    .reg.f64 %d<15>;
    .reg.pred %p<15>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %p5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u8 %w0, [%rd0];
    setp.ne.u16 %p5, %w0, 0;

    // Evaluate %r6
    selp.b32 %r6, -1, %r4, %p5;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    // Evaluate %r7
    selp.b32 %r7, %r4, 0, %p5;

    // Store %r7
    ld.param.u64 %rd0, [arg3];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r7;

    // Load %r8
    ld.param.u64 %rd0, [arg4];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.s32 %r8, [%rd0];

    // Evaluate %r9
    selp.b32 %r9, -1, %r8, %p5;

    // Store %r9
    ld.param.u64 %rd0, [arg5];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r9;

    // Evaluate %r10
    selp.b32 %r10, %r8, 0, %p5;

    // Store %r10
    ld.param.u64 %rd0, [arg6];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r10;

    // Load %f11
    ld.param.u64 %rd0, [arg7];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f11, [%rd0];

    // Evaluate %f12
    selp.b32 %f12, -1, %f11, %p5;

    // Evaluate %f13
    abs.ftz.f32 %f13, %f12;

    // Store %f13
    ld.param.u64 %rd0, [arg8];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f13;

    // Evaluate %f14
    selp.b32 %f14, %f11, 0, %p5;

    // Store %f14
    ld.param.u64 %rd0, [arg9];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f14;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 1
jit_var_dec_ref_int(4): 5
jit_var_dec_ref_int(1): 0
jit_var_dec_ref_int(4): 4
jit_var_dec_ref_int(2): 1
jit_var_dec_ref_int(4): 3
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(4): 2
jit_var_dec_ref_int(9): 0
jit_var_free(9)
jit_var_dec_ref_int(3): 1
jit_var_dec_ref_int(4): 1
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(4): 0
jit_free_flush(): scheduling 4 deallocations
jit_eval(): done.
x_o : [4294967295, 1]
x_a : [0, 0]
y_o : [-1, 1]
y_a : [0, 0]
z_o : [nan, 1]
z_a : [0, 0]
jit_var_new_literal(12): mov.$t0 $r0, 1
jit_var_inc_ref_ext(12): 1
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(13): mov.$b0 $r0, 0xffffffff
jit_var_inc_ref_ext(13): 1
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_ext(1): 2
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(14): mov.$b0 $r0, 0xffffffff
jit_var_inc_ref_ext(14): 1
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_ext(2): 2
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(15): mov.$t0 $r0, 0fffffffff
jit_var_inc_ref_ext(15): 1
jit_var_dec_ref_ext(11): 0
jit_var_free(11)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_ext(3): 2
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(15): 1
jit_var_new(16 <- 15): abs.ftz.$t0 $r0, $r1
jit_var_inc_ref_ext(16): 1
jit_var_dec_ref_ext(15): 0
jit_var_schedule(13)
jit_var_schedule(14)
jit_var_schedule(16)
jit_eval(): begin.
jit_assemble(size=1): register map:
   - %r4 -> 13 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %r5 -> 14 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %f6 -> 15 [scalar]
   - %f7 -> 16 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_run(): launching kernel (n=1, in=0, out=3, ops=8) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0xffffffff;

    // Store %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r4;

    // Evaluate %r5
    mov.b32 %r5, 0xffffffff;

    // Store %r5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.s32 [%rd0], %r5;

    // Evaluate %f6
    mov.f32 %f6, 0fffffffff;

    // Evaluate %f7
    abs.ftz.f32 %f7, %f6;

    // Store %f7
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f7;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(15): 0
jit_var_free(15)
jit_free_flush(): scheduling 4 deallocations
jit_eval(): done.
x_o : [4294967295]
x_a : [0, 1]
y_o : [-1]
y_a : [0, 1]
z_o : [nan]
z_a : [0, 1]
jit_var_new_literal(17): mov.$t0 $r0, 0
jit_var_inc_ref_ext(17): 1
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_var_inc_ref_ext(1): 3
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(18): mov.$b0 $r0, 0x00000000
jit_var_inc_ref_ext(18): 1
jit_var_dec_ref_ext(1): 2
jit_var_inc_ref_ext(2): 3
jit_var_dec_ref_ext(14): 0
jit_var_free(14)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(19): mov.$b0 $r0, 0x00000000
jit_var_inc_ref_ext(19): 1
jit_var_dec_ref_ext(2): 2
jit_var_inc_ref_ext(3): 3
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_free(<@>, type=device, device=0, size=64)
jit_var_new_literal(20): mov.$t0 $r0, 0f00000000
jit_var_inc_ref_ext(20): 1
jit_var_dec_ref_ext(3): 2
jit_var_schedule(18)
jit_var_schedule(19)
jit_var_schedule(20)
x_o : [0, 1]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_memset_async(<@>, isize=4, size=1)
x_a : [0]
y_o : [0, 1]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_memset_async(<@>, isize=4, size=1)
y_a : [0]
z_o : [0, 1]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_memset_async(<@>, isize=4, size=1)
z_a : [0]
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 1
jit_var_dec_ref_ext(19): 0
jit_var_free(19)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 6 deallocations
jit_shutdown(): releasing 2 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 256 B in 4 allocations
 - device memory: 640 B in 10 allocations
jit_shutdown(): done
