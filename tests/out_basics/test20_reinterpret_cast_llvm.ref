jit_device_set(device=-1, stream=0): creating stream
jit_malloc(type=host, size=64): <@> (new allocation)
jit_var_map(1): <@>, size=3, free=1
jit_var_inc_ref_ext(1): 1
jit_var_copy(1, size=3)
jit_var_inc_ref_int(1): 1
jit_trace_append(2 <- 1): $r0 = bitcast <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_eval(): begin.
jit_assemble(size=3): register map:
   - %f0 -> 1 [in]
   - %r1 -> 2 [out]
jit_malloc(type=host, size=64): <@> (new allocation)
jit_run(): launching kernel (n=3, in=1, out=1, ops=2) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to float*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %f0
    %f0_i = getelementptr inbounds float, float* %a0, i64 %index
    %f0_p = bitcast float* %f0_i to <8 x float>*
    %f0 = load <8 x float>, <8 x float>* %f0_p, align 32, !alias.scope !1

    ; Evaluate %r1
    %r1 = bitcast <8 x float> %f0 to <8 x i32>

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a1, i64 %index
    %r1_p = bitcast i32* %r1_i to <8 x i32>*
    store <8 x i32> %r1, <8 x i32>* %r1_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_free(<@>, type=host, size=64)
jit_eval(): done.
As integer: [1065353216, 1073741824, 1077936128]
jit_var_inc_ref_int(2): 1
jit_trace_append(3 <- 2): $r0 = bitcast <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(3): 1
jit_eval(): begin.
jit_assemble(size=3): register map:
   - %r0 -> 2 [in]
   - %f1 -> 3 [out]
jit_malloc(type=host, size=64): <@> (reused global)
jit_run(): launching kernel (n=3, in=1, out=1, ops=2) ..
define void @enoki_@@@@@@@@@@@@@@@@(i64 %start, i64 %end, i8** %ptrs) #0 alignstack(32) {
entry:
    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to float*
    br label %loop

done:
    ret void

loop:
    %index = phi i64 [ %index_next, %loop ], [ %start, %entry ]

    ; Load %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i64 %index
    %r0_p = bitcast i32* %r0_i to <8 x i32>*
    %r0 = load <8 x i32>, <8 x i32>* %r0_p, align 32, !alias.scope !1

    ; Evaluate %f1
    %f1 = bitcast <8 x i32> %r0 to <8 x float>

    ; Store %f1
    %f1_i = getelementptr inbounds float, float* %a1, i64 %index
    %f1_p = bitcast float* %f1_i to <8 x float>*
    store <8 x float> %f1, <8 x float>* %f1_p, align 32, !noalias !1

    %index_next = add i64 %index, 8
    %cond = icmp uge i64 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake" }
jit_run(): processing 1 packet and 0 scalar entries
jit_eval(): cleaning up..
jit_var_dec_ref_int(2): 0
jit_eval(): done.
As float: [1, 2, 3]
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=host, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=host, size=64)
jit_shutdown(): destroying streams ..
jit_malloc_trim(): freed
 - host memory: 128 B in 2 allocations
jit_shutdown(): done
