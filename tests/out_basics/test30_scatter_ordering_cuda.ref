jit_device_set(device=0, stream=0): creating stream
jit_trace_append(1): mov.$b0 $r0, 0x00000000
jit_var_inc_ref_ext(1): 1
jit_trace_append(2): mov.$b0 $r0, 0x00000001
jit_var_inc_ref_ext(2): 1
jit_var_inc_ref_ext(2): 2
jit_var_dec_ref_ext(2): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map(3): <@>, size=3, free=1
jit_var_inc_ref_ext(3): 1
jit_var_copy(3, size=3)
jit_trace_append(2): mov.$b0 $r0, 0x00000001 (reused)
jit_var_inc_ref_ext(2): 2
jit_trace_append(4): mov.$t0 $r0, 1
jit_var_inc_ref_ext(4): 1
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 1 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=16, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0x00000000;

    // Store %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_var_inc_ref_ext(1): 2
jit_var_copy_ptr(5 <- 1): <@>
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(3): 1
jit_trace_append(6 <- 5, 2, 3): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nst.global.$t2 [%rd3], $r2
jit_var_inc_ref_ext(6): 1
jit_var_mark_scatter(6, 1)
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(2): 1
jit_trace_append(2): mov.$b0 $r0, 0x00000001 (reused)
jit_var_inc_ref_ext(2): 2
jit_eval(): begin.
jit_assemble(size=3): register map:
   - %r4 -> 2 [scalar]
   - %r5 -> 3 [in]
   - %rd6 -> 5 [scalar] [in]
   - %u7 -> 6 [scat]
jit_run(): launching kernel (n=3, in=2, out=0, ops=8) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8 %b<8>;
    .reg.b16 %w<8>;
    .reg.b32 %r<8>;
    .reg.b64 %rd<8>;
    .reg.f32 %f<8>;
    .reg.f64 %d<8>;
    .reg.pred %p<8>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0x00000001;

    // Load %r5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r5, [%rd0];

    // Load %rd6
    ld.param.u64 %rd6, [arg1];

    // Evaluate %u7
    mul.wide.u32 %rd3, %r5, 4;
    add.u64 %rd3, %rd3, %rd6;
    st.global.u32 [%rd3], %r4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_ext(6): 0
jit_var_free(6)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(3): 0
jit_eval(): done.
jit_var_inc_ref_int(1): 1
jit_var_inc_ref_int(2): 1
jit_trace_append(7 <- 1, 2): add.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(2): 1
x:[0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
jit_eval(): begin.
jit_assemble(size=1): register map:
   - %r4 -> 2 [scalar] [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=1, in=0, out=1, ops=5) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8 %b<5>;
    .reg.b16 %w<5>;
    .reg.b32 %r<5>;
    .reg.b64 %rd<5>;
    .reg.f32 %f<5>;
    .reg.f64 %d<5>;
    .reg.pred %p<5>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.b32 %r4, 0x00000001;

    // Store %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r4;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_eval(): done.
y:[1]
jit_eval(): begin.
jit_assemble(size=16): register map:
   - %r4 -> 1 [in]
   - %r5 -> 2 [scalar] [in]
   - %r6 -> 7 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_run(): launching kernel (n=16, in=2, out=1, ops=7) ..
.version 6.3
.address_size 64
.entry enoki_@@@@@@@@@@@@@@@@(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8 %b<7>;
    .reg.b16 %w<7>;
    .reg.b32 %r<7>;
    .reg.b64 %rd<7>;
    .reg.f32 %f<7>;
    .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %r4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.u32 %r4, [%rd0];

    // Load %r5
    ld.param.u64 %rd0, [arg1];
    ldu.global.u32 %r5, [%rd0];

    // Evaluate %r6
    add.u32 %r6, %r4, %r5;

    // Store %r6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.u32 [%rd0], %r6;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_dec_ref_int(2): 0
jit_eval(): done.
z:[1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=device, device=0, size=64)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 4 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-pinned memory: 64 B in 1 allocation
 - device memory: 256 B in 4 allocations
jit_shutdown(): done
