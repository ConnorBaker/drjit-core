jit_var_new_literal(1): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(1): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(2): <@>, size=15, free=1
jit_var_inc_ref_ext(2): 1
jit_var_copy_mem(2, size=15)
jit_var_new_literal(3): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(3): 1
jit_var_new_literal(4): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(4): 1
jit_malloc(type=host-async, size=128): <@> (new allocation)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(1): 2
jit_var_copy_ptr(5 <- 1): <@>
jit_var_inc_ref_ext(5): 1
jit_var_new(6): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(6): 1
jit_var_new(7 <- 6): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(6): 0
jit_var_inc_ref_ext(7): 2
jit_var_dec_ref_ext(7): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(7): 1
jit_var_new(8 <- 5, 3, 2, 7): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(8): 1
jit_var_mark_scatter(8, 1)
jit_var_dec_ref_ext(7): 0
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(3): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 6 [scalar]
   - %p1 -> 7 [scalar]
   - %r2 -> 2 [in]
   - %f3 -> 3 [scalar]
   - %rd4 -> 5 [scalar] [direct_pointer]
   - %u5 -> 8 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %f3
    %f3_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f3 = shufflevector <16 x float> %f3_0, <16 x float> undef, <16 x i32> zeroinitializer
    %f3_unroll_u5_0_0 = shufflevector <16 x float> %f3, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f3_unroll_u5_0_1 = shufflevector <16 x float> %f3, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %f3_unroll_u5_1_0 = shufflevector <8 x float> %f3_unroll_u5_0_0, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f3_unroll_u5_1_1 = shufflevector <8 x float> %f3_unroll_u5_0_0, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %f3_unroll_u5_1_2 = shufflevector <8 x float> %f3_unroll_u5_0_1, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f3_unroll_u5_1_3 = shufflevector <8 x float> %f3_unroll_u5_0_1, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %f3_unroll_u5_2_0 = shufflevector <4 x float> %f3_unroll_u5_1_0, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_1 = shufflevector <4 x float> %f3_unroll_u5_1_0, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_2 = shufflevector <4 x float> %f3_unroll_u5_1_1, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_3 = shufflevector <4 x float> %f3_unroll_u5_1_1, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_4 = shufflevector <4 x float> %f3_unroll_u5_1_2, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_5 = shufflevector <4 x float> %f3_unroll_u5_1_2, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_6 = shufflevector <4 x float> %f3_unroll_u5_1_3, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_7 = shufflevector <4 x float> %f3_unroll_u5_1_3, <4 x float> undef, <2 x i32> <i32 2, i32 3>

    %f3_unroll_u5_3_0 = shufflevector <2 x float> %f3_unroll_u5_2_0, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_1 = shufflevector <2 x float> %f3_unroll_u5_2_0, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_2 = shufflevector <2 x float> %f3_unroll_u5_2_1, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_3 = shufflevector <2 x float> %f3_unroll_u5_2_1, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_4 = shufflevector <2 x float> %f3_unroll_u5_2_2, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_5 = shufflevector <2 x float> %f3_unroll_u5_2_2, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_6 = shufflevector <2 x float> %f3_unroll_u5_2_3, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_7 = shufflevector <2 x float> %f3_unroll_u5_2_3, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_8 = shufflevector <2 x float> %f3_unroll_u5_2_4, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_9 = shufflevector <2 x float> %f3_unroll_u5_2_4, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_10 = shufflevector <2 x float> %f3_unroll_u5_2_5, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_11 = shufflevector <2 x float> %f3_unroll_u5_2_5, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_12 = shufflevector <2 x float> %f3_unroll_u5_2_6, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_13 = shufflevector <2 x float> %f3_unroll_u5_2_6, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_14 = shufflevector <2 x float> %f3_unroll_u5_2_7, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_15 = shufflevector <2 x float> %f3_unroll_u5_2_7, <2 x float> undef, <1 x i32> <i32 1>

    %r2_unroll_u5_0_0 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_0_1 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r2_unroll_u5_1_0 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_1 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_1_2 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_3 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r2_unroll_u5_2_0 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_1 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_2 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_3 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_4 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_5 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_6 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_7 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r2_unroll_u5_3_0 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_1 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_2 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_3 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_4 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_5 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_6 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_7 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_8 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_9 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_10 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_11 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_12 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_13 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_14 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_15 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p1_unroll_u5_0_0 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_0_1 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p1_unroll_u5_1_0 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_1 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_1_2 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_3 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p1_unroll_u5_2_0 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_1 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_2 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_3 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_4 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_5 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_6 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_7 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p1_unroll_u5_3_0 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_1 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_2 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_3 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_4 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_5 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_6 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_7 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_8 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_9 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_10 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_11 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_12 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_13 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_14 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_15 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_0, <1 x i32> %r2_unroll_u5_3_0, <1 x i1> %p1_unroll_u5_3_0)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_1, <1 x i32> %r2_unroll_u5_3_1, <1 x i1> %p1_unroll_u5_3_1)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_2, <1 x i32> %r2_unroll_u5_3_2, <1 x i1> %p1_unroll_u5_3_2)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_3, <1 x i32> %r2_unroll_u5_3_3, <1 x i1> %p1_unroll_u5_3_3)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_4, <1 x i32> %r2_unroll_u5_3_4, <1 x i1> %p1_unroll_u5_3_4)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_5, <1 x i32> %r2_unroll_u5_3_5, <1 x i1> %p1_unroll_u5_3_5)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_6, <1 x i32> %r2_unroll_u5_3_6, <1 x i1> %p1_unroll_u5_3_6)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_7, <1 x i32> %r2_unroll_u5_3_7, <1 x i1> %p1_unroll_u5_3_7)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_8, <1 x i32> %r2_unroll_u5_3_8, <1 x i1> %p1_unroll_u5_3_8)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_9, <1 x i32> %r2_unroll_u5_3_9, <1 x i1> %p1_unroll_u5_3_9)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_10, <1 x i32> %r2_unroll_u5_3_10, <1 x i1> %p1_unroll_u5_3_10)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_11, <1 x i32> %r2_unroll_u5_3_11, <1 x i1> %p1_unroll_u5_3_11)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_12, <1 x i32> %r2_unroll_u5_3_12, <1 x i1> %p1_unroll_u5_3_12)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_13, <1 x i32> %r2_unroll_u5_3_13, <1 x i1> %p1_unroll_u5_3_13)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_14, <1 x i32> %r2_unroll_u5_3_14, <1 x i1> %p1_unroll_u5_3_14)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_15, <1 x i32> %r2_unroll_u5_3_15, <1 x i1> %p1_unroll_u5_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(7): 0
jit_var_free(7)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(9): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(9): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(10): <@>, size=16, free=1
jit_var_inc_ref_ext(10): 1
jit_var_copy_mem(10, size=16)
jit_var_new_literal(11): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(11): 1
jit_var_new_literal(12): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(12): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(9): 2
jit_var_copy_ptr(13 <- 9): <@>
jit_var_inc_ref_ext(13): 1
jit_var_new(14): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_int(14): 1
jit_var_new(15 <- 14): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(15): 1
jit_var_dec_ref_ext(14): 0
jit_var_inc_ref_ext(15): 2
jit_var_dec_ref_ext(15): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(11): 1
jit_var_inc_ref_int(10): 1
jit_var_inc_ref_int(15): 1
jit_var_new(16 <- 13, 11, 10, 15): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(16): 1
jit_var_mark_scatter(16, 9)
jit_var_dec_ref_ext(15): 0
jit_var_dec_ref_ext(13): 0
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_var_dec_ref_ext(11): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 14 [scalar]
   - %p1 -> 15 [scalar]
   - %r2 -> 10 [in]
   - %f3 -> 11 [scalar]
   - %rd4 -> 13 [scalar] [direct_pointer]
   - %u5 -> 16 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %f3
    %f3_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f3 = shufflevector <16 x float> %f3_0, <16 x float> undef, <16 x i32> zeroinitializer
    %f3_unroll_u5_0_0 = shufflevector <16 x float> %f3, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f3_unroll_u5_0_1 = shufflevector <16 x float> %f3, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %f3_unroll_u5_1_0 = shufflevector <8 x float> %f3_unroll_u5_0_0, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f3_unroll_u5_1_1 = shufflevector <8 x float> %f3_unroll_u5_0_0, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %f3_unroll_u5_1_2 = shufflevector <8 x float> %f3_unroll_u5_0_1, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f3_unroll_u5_1_3 = shufflevector <8 x float> %f3_unroll_u5_0_1, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %f3_unroll_u5_2_0 = shufflevector <4 x float> %f3_unroll_u5_1_0, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_1 = shufflevector <4 x float> %f3_unroll_u5_1_0, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_2 = shufflevector <4 x float> %f3_unroll_u5_1_1, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_3 = shufflevector <4 x float> %f3_unroll_u5_1_1, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_4 = shufflevector <4 x float> %f3_unroll_u5_1_2, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_5 = shufflevector <4 x float> %f3_unroll_u5_1_2, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f3_unroll_u5_2_6 = shufflevector <4 x float> %f3_unroll_u5_1_3, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f3_unroll_u5_2_7 = shufflevector <4 x float> %f3_unroll_u5_1_3, <4 x float> undef, <2 x i32> <i32 2, i32 3>

    %f3_unroll_u5_3_0 = shufflevector <2 x float> %f3_unroll_u5_2_0, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_1 = shufflevector <2 x float> %f3_unroll_u5_2_0, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_2 = shufflevector <2 x float> %f3_unroll_u5_2_1, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_3 = shufflevector <2 x float> %f3_unroll_u5_2_1, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_4 = shufflevector <2 x float> %f3_unroll_u5_2_2, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_5 = shufflevector <2 x float> %f3_unroll_u5_2_2, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_6 = shufflevector <2 x float> %f3_unroll_u5_2_3, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_7 = shufflevector <2 x float> %f3_unroll_u5_2_3, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_8 = shufflevector <2 x float> %f3_unroll_u5_2_4, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_9 = shufflevector <2 x float> %f3_unroll_u5_2_4, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_10 = shufflevector <2 x float> %f3_unroll_u5_2_5, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_11 = shufflevector <2 x float> %f3_unroll_u5_2_5, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_12 = shufflevector <2 x float> %f3_unroll_u5_2_6, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_13 = shufflevector <2 x float> %f3_unroll_u5_2_6, <2 x float> undef, <1 x i32> <i32 1>
    %f3_unroll_u5_3_14 = shufflevector <2 x float> %f3_unroll_u5_2_7, <2 x float> undef, <1 x i32> <i32 0>
    %f3_unroll_u5_3_15 = shufflevector <2 x float> %f3_unroll_u5_2_7, <2 x float> undef, <1 x i32> <i32 1>

    %r2_unroll_u5_0_0 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_0_1 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r2_unroll_u5_1_0 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_1 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_1_2 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_3 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r2_unroll_u5_2_0 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_1 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_2 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_3 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_4 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_5 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_6 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_7 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r2_unroll_u5_3_0 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_1 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_2 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_3 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_4 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_5 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_6 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_7 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_8 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_9 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_10 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_11 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_12 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_13 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_14 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_15 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p1_unroll_u5_0_0 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_0_1 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p1_unroll_u5_1_0 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_1 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_1_2 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_3 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p1_unroll_u5_2_0 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_1 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_2 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_3 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_4 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_5 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_6 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_7 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p1_unroll_u5_3_0 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_1 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_2 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_3 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_4 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_5 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_6 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_7 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_8 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_9 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_10 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_11 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_12 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_13 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_14 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_15 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_0, <1 x i32> %r2_unroll_u5_3_0, <1 x i1> %p1_unroll_u5_3_0)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_1, <1 x i32> %r2_unroll_u5_3_1, <1 x i1> %p1_unroll_u5_3_1)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_2, <1 x i32> %r2_unroll_u5_3_2, <1 x i1> %p1_unroll_u5_3_2)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_3, <1 x i32> %r2_unroll_u5_3_3, <1 x i1> %p1_unroll_u5_3_3)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_4, <1 x i32> %r2_unroll_u5_3_4, <1 x i1> %p1_unroll_u5_3_4)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_5, <1 x i32> %r2_unroll_u5_3_5, <1 x i1> %p1_unroll_u5_3_5)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_6, <1 x i32> %r2_unroll_u5_3_6, <1 x i1> %p1_unroll_u5_3_6)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_7, <1 x i32> %r2_unroll_u5_3_7, <1 x i1> %p1_unroll_u5_3_7)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_8, <1 x i32> %r2_unroll_u5_3_8, <1 x i1> %p1_unroll_u5_3_8)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_9, <1 x i32> %r2_unroll_u5_3_9, <1 x i1> %p1_unroll_u5_3_9)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_10, <1 x i32> %r2_unroll_u5_3_10, <1 x i1> %p1_unroll_u5_3_10)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_11, <1 x i32> %r2_unroll_u5_3_11, <1 x i1> %p1_unroll_u5_3_11)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_12, <1 x i32> %r2_unroll_u5_3_12, <1 x i1> %p1_unroll_u5_3_12)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_13, <1 x i32> %r2_unroll_u5_3_13, <1 x i1> %p1_unroll_u5_3_13)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_14, <1 x i32> %r2_unroll_u5_3_14, <1 x i1> %p1_unroll_u5_3_14)
    call void @ek.scatter_add_f32(i8* %rd4, <1 x float> %f3_unroll_u5_3_15, <1 x i32> %r2_unroll_u5_3_15, <1 x i1> %p1_unroll_u5_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_ext(9): 1
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(10): 0
jit_var_dec_ref_int(15): 0
jit_var_free(15)
jit_var_dec_ref_int(14): 0
jit_var_free(14)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(17): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(17): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(18): <@>, size=15, free=1
jit_var_inc_ref_ext(18): 1
jit_var_copy_mem(18, size=15)
jit_var_new_literal(19): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(19): 1
jit_var_new_literal(20): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(20): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(17): 2
jit_var_copy_ptr(21 <- 17): <@>
jit_var_inc_ref_ext(21): 1
jit_var_new(22): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(22): 1
jit_var_inc_ref_int(22): 1
jit_var_new(23 <- 22): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(23): 1
jit_var_dec_ref_ext(22): 0
jit_var_inc_ref_ext(23): 2
jit_var_dec_ref_ext(23): 1
jit_var_inc_ref_int(21): 1
jit_var_inc_ref_int(19): 1
jit_var_inc_ref_int(18): 1
jit_var_inc_ref_int(23): 1
jit_var_new(24 <- 21, 19, 18, 23): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(24): 1
jit_var_mark_scatter(24, 17)
jit_var_dec_ref_ext(23): 0
jit_var_dec_ref_ext(21): 0
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_var_dec_ref_ext(19): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 22 [scalar]
   - %p1 -> 23 [scalar]
   - %r2 -> 18 [in]
   - %d3 -> 19 [scalar]
   - %rd4 -> 21 [scalar] [direct_pointer]
   - %u5 -> 24 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %d3
    %d3_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d3 = shufflevector <16 x double> %d3_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d3_unroll_u5_0_0 = shufflevector <16 x double> %d3, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d3_unroll_u5_0_1 = shufflevector <16 x double> %d3, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %d3_unroll_u5_1_0 = shufflevector <8 x double> %d3_unroll_u5_0_0, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d3_unroll_u5_1_1 = shufflevector <8 x double> %d3_unroll_u5_0_0, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %d3_unroll_u5_1_2 = shufflevector <8 x double> %d3_unroll_u5_0_1, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d3_unroll_u5_1_3 = shufflevector <8 x double> %d3_unroll_u5_0_1, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %d3_unroll_u5_2_0 = shufflevector <4 x double> %d3_unroll_u5_1_0, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_1 = shufflevector <4 x double> %d3_unroll_u5_1_0, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_2 = shufflevector <4 x double> %d3_unroll_u5_1_1, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_3 = shufflevector <4 x double> %d3_unroll_u5_1_1, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_4 = shufflevector <4 x double> %d3_unroll_u5_1_2, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_5 = shufflevector <4 x double> %d3_unroll_u5_1_2, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_6 = shufflevector <4 x double> %d3_unroll_u5_1_3, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_7 = shufflevector <4 x double> %d3_unroll_u5_1_3, <4 x double> undef, <2 x i32> <i32 2, i32 3>

    %d3_unroll_u5_3_0 = shufflevector <2 x double> %d3_unroll_u5_2_0, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_1 = shufflevector <2 x double> %d3_unroll_u5_2_0, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_2 = shufflevector <2 x double> %d3_unroll_u5_2_1, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_3 = shufflevector <2 x double> %d3_unroll_u5_2_1, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_4 = shufflevector <2 x double> %d3_unroll_u5_2_2, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_5 = shufflevector <2 x double> %d3_unroll_u5_2_2, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_6 = shufflevector <2 x double> %d3_unroll_u5_2_3, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_7 = shufflevector <2 x double> %d3_unroll_u5_2_3, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_8 = shufflevector <2 x double> %d3_unroll_u5_2_4, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_9 = shufflevector <2 x double> %d3_unroll_u5_2_4, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_10 = shufflevector <2 x double> %d3_unroll_u5_2_5, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_11 = shufflevector <2 x double> %d3_unroll_u5_2_5, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_12 = shufflevector <2 x double> %d3_unroll_u5_2_6, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_13 = shufflevector <2 x double> %d3_unroll_u5_2_6, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_14 = shufflevector <2 x double> %d3_unroll_u5_2_7, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_15 = shufflevector <2 x double> %d3_unroll_u5_2_7, <2 x double> undef, <1 x i32> <i32 1>

    %r2_unroll_u5_0_0 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_0_1 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r2_unroll_u5_1_0 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_1 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_1_2 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_3 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r2_unroll_u5_2_0 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_1 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_2 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_3 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_4 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_5 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_6 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_7 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r2_unroll_u5_3_0 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_1 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_2 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_3 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_4 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_5 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_6 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_7 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_8 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_9 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_10 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_11 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_12 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_13 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_14 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_15 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p1_unroll_u5_0_0 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_0_1 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p1_unroll_u5_1_0 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_1 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_1_2 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_3 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p1_unroll_u5_2_0 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_1 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_2 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_3 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_4 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_5 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_6 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_7 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p1_unroll_u5_3_0 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_1 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_2 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_3 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_4 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_5 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_6 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_7 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_8 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_9 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_10 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_11 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_12 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_13 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_14 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_15 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_0, <1 x i32> %r2_unroll_u5_3_0, <1 x i1> %p1_unroll_u5_3_0)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_1, <1 x i32> %r2_unroll_u5_3_1, <1 x i1> %p1_unroll_u5_3_1)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_2, <1 x i32> %r2_unroll_u5_3_2, <1 x i1> %p1_unroll_u5_3_2)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_3, <1 x i32> %r2_unroll_u5_3_3, <1 x i1> %p1_unroll_u5_3_3)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_4, <1 x i32> %r2_unroll_u5_3_4, <1 x i1> %p1_unroll_u5_3_4)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_5, <1 x i32> %r2_unroll_u5_3_5, <1 x i1> %p1_unroll_u5_3_5)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_6, <1 x i32> %r2_unroll_u5_3_6, <1 x i1> %p1_unroll_u5_3_6)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_7, <1 x i32> %r2_unroll_u5_3_7, <1 x i1> %p1_unroll_u5_3_7)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_8, <1 x i32> %r2_unroll_u5_3_8, <1 x i1> %p1_unroll_u5_3_8)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_9, <1 x i32> %r2_unroll_u5_3_9, <1 x i1> %p1_unroll_u5_3_9)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_10, <1 x i32> %r2_unroll_u5_3_10, <1 x i1> %p1_unroll_u5_3_10)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_11, <1 x i32> %r2_unroll_u5_3_11, <1 x i1> %p1_unroll_u5_3_11)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_12, <1 x i32> %r2_unroll_u5_3_12, <1 x i1> %p1_unroll_u5_3_12)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_13, <1 x i32> %r2_unroll_u5_3_13, <1 x i1> %p1_unroll_u5_3_13)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_14, <1 x i32> %r2_unroll_u5_3_14, <1 x i1> %p1_unroll_u5_3_14)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_15, <1 x i32> %r2_unroll_u5_3_15, <1 x i1> %p1_unroll_u5_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(24): 0
jit_var_free(24)
jit_var_dec_ref_int(21): 0
jit_var_free(21)
jit_var_dec_ref_ext(17): 1
jit_var_dec_ref_int(19): 0
jit_var_free(19)
jit_var_dec_ref_int(18): 0
jit_var_dec_ref_int(23): 0
jit_var_free(23)
jit_var_dec_ref_int(22): 0
jit_var_free(22)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(25): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(25): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(26): <@>, size=16, free=1
jit_var_inc_ref_ext(26): 1
jit_var_copy_mem(26, size=16)
jit_var_new_literal(27): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(27): 1
jit_var_new_literal(28): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(28): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(25): 2
jit_var_copy_ptr(29 <- 25): <@>
jit_var_inc_ref_ext(29): 1
jit_var_new(30): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(30): 1
jit_var_inc_ref_int(30): 1
jit_var_new(31 <- 30): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(31): 1
jit_var_dec_ref_ext(30): 0
jit_var_inc_ref_ext(31): 2
jit_var_dec_ref_ext(31): 1
jit_var_inc_ref_int(29): 1
jit_var_inc_ref_int(27): 1
jit_var_inc_ref_int(26): 1
jit_var_inc_ref_int(31): 1
jit_var_new(32 <- 29, 27, 26, 31): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(32): 1
jit_var_mark_scatter(32, 25)
jit_var_dec_ref_ext(31): 0
jit_var_dec_ref_ext(29): 0
jit_var_dec_ref_ext(28): 0
jit_var_free(28)
jit_var_dec_ref_ext(27): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 30 [scalar]
   - %p1 -> 31 [scalar]
   - %r2 -> 26 [in]
   - %d3 -> 27 [scalar]
   - %rd4 -> 29 [scalar] [direct_pointer]
   - %u5 -> 32 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %d3
    %d3_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d3 = shufflevector <16 x double> %d3_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d3_unroll_u5_0_0 = shufflevector <16 x double> %d3, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d3_unroll_u5_0_1 = shufflevector <16 x double> %d3, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %d3_unroll_u5_1_0 = shufflevector <8 x double> %d3_unroll_u5_0_0, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d3_unroll_u5_1_1 = shufflevector <8 x double> %d3_unroll_u5_0_0, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %d3_unroll_u5_1_2 = shufflevector <8 x double> %d3_unroll_u5_0_1, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d3_unroll_u5_1_3 = shufflevector <8 x double> %d3_unroll_u5_0_1, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %d3_unroll_u5_2_0 = shufflevector <4 x double> %d3_unroll_u5_1_0, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_1 = shufflevector <4 x double> %d3_unroll_u5_1_0, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_2 = shufflevector <4 x double> %d3_unroll_u5_1_1, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_3 = shufflevector <4 x double> %d3_unroll_u5_1_1, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_4 = shufflevector <4 x double> %d3_unroll_u5_1_2, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_5 = shufflevector <4 x double> %d3_unroll_u5_1_2, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d3_unroll_u5_2_6 = shufflevector <4 x double> %d3_unroll_u5_1_3, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d3_unroll_u5_2_7 = shufflevector <4 x double> %d3_unroll_u5_1_3, <4 x double> undef, <2 x i32> <i32 2, i32 3>

    %d3_unroll_u5_3_0 = shufflevector <2 x double> %d3_unroll_u5_2_0, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_1 = shufflevector <2 x double> %d3_unroll_u5_2_0, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_2 = shufflevector <2 x double> %d3_unroll_u5_2_1, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_3 = shufflevector <2 x double> %d3_unroll_u5_2_1, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_4 = shufflevector <2 x double> %d3_unroll_u5_2_2, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_5 = shufflevector <2 x double> %d3_unroll_u5_2_2, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_6 = shufflevector <2 x double> %d3_unroll_u5_2_3, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_7 = shufflevector <2 x double> %d3_unroll_u5_2_3, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_8 = shufflevector <2 x double> %d3_unroll_u5_2_4, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_9 = shufflevector <2 x double> %d3_unroll_u5_2_4, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_10 = shufflevector <2 x double> %d3_unroll_u5_2_5, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_11 = shufflevector <2 x double> %d3_unroll_u5_2_5, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_12 = shufflevector <2 x double> %d3_unroll_u5_2_6, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_13 = shufflevector <2 x double> %d3_unroll_u5_2_6, <2 x double> undef, <1 x i32> <i32 1>
    %d3_unroll_u5_3_14 = shufflevector <2 x double> %d3_unroll_u5_2_7, <2 x double> undef, <1 x i32> <i32 0>
    %d3_unroll_u5_3_15 = shufflevector <2 x double> %d3_unroll_u5_2_7, <2 x double> undef, <1 x i32> <i32 1>

    %r2_unroll_u5_0_0 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_0_1 = shufflevector <16 x i32> %r2, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r2_unroll_u5_1_0 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_1 = shufflevector <8 x i32> %r2_unroll_u5_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r2_unroll_u5_1_2 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r2_unroll_u5_1_3 = shufflevector <8 x i32> %r2_unroll_u5_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r2_unroll_u5_2_0 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_1 = shufflevector <4 x i32> %r2_unroll_u5_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_2 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_3 = shufflevector <4 x i32> %r2_unroll_u5_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_4 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_5 = shufflevector <4 x i32> %r2_unroll_u5_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r2_unroll_u5_2_6 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r2_unroll_u5_2_7 = shufflevector <4 x i32> %r2_unroll_u5_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r2_unroll_u5_3_0 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_1 = shufflevector <2 x i32> %r2_unroll_u5_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_2 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_3 = shufflevector <2 x i32> %r2_unroll_u5_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_4 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_5 = shufflevector <2 x i32> %r2_unroll_u5_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_6 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_7 = shufflevector <2 x i32> %r2_unroll_u5_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_8 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_9 = shufflevector <2 x i32> %r2_unroll_u5_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_10 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_11 = shufflevector <2 x i32> %r2_unroll_u5_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_12 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_13 = shufflevector <2 x i32> %r2_unroll_u5_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r2_unroll_u5_3_14 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r2_unroll_u5_3_15 = shufflevector <2 x i32> %r2_unroll_u5_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p1_unroll_u5_0_0 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_0_1 = shufflevector <16 x i1> %p1, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p1_unroll_u5_1_0 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_1 = shufflevector <8 x i1> %p1_unroll_u5_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p1_unroll_u5_1_2 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p1_unroll_u5_1_3 = shufflevector <8 x i1> %p1_unroll_u5_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p1_unroll_u5_2_0 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_1 = shufflevector <4 x i1> %p1_unroll_u5_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_2 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_3 = shufflevector <4 x i1> %p1_unroll_u5_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_4 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_5 = shufflevector <4 x i1> %p1_unroll_u5_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p1_unroll_u5_2_6 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p1_unroll_u5_2_7 = shufflevector <4 x i1> %p1_unroll_u5_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p1_unroll_u5_3_0 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_1 = shufflevector <2 x i1> %p1_unroll_u5_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_2 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_3 = shufflevector <2 x i1> %p1_unroll_u5_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_4 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_5 = shufflevector <2 x i1> %p1_unroll_u5_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_6 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_7 = shufflevector <2 x i1> %p1_unroll_u5_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_8 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_9 = shufflevector <2 x i1> %p1_unroll_u5_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_10 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_11 = shufflevector <2 x i1> %p1_unroll_u5_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_12 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_13 = shufflevector <2 x i1> %p1_unroll_u5_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p1_unroll_u5_3_14 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p1_unroll_u5_3_15 = shufflevector <2 x i1> %p1_unroll_u5_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_0, <1 x i32> %r2_unroll_u5_3_0, <1 x i1> %p1_unroll_u5_3_0)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_1, <1 x i32> %r2_unroll_u5_3_1, <1 x i1> %p1_unroll_u5_3_1)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_2, <1 x i32> %r2_unroll_u5_3_2, <1 x i1> %p1_unroll_u5_3_2)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_3, <1 x i32> %r2_unroll_u5_3_3, <1 x i1> %p1_unroll_u5_3_3)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_4, <1 x i32> %r2_unroll_u5_3_4, <1 x i1> %p1_unroll_u5_3_4)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_5, <1 x i32> %r2_unroll_u5_3_5, <1 x i1> %p1_unroll_u5_3_5)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_6, <1 x i32> %r2_unroll_u5_3_6, <1 x i1> %p1_unroll_u5_3_6)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_7, <1 x i32> %r2_unroll_u5_3_7, <1 x i1> %p1_unroll_u5_3_7)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_8, <1 x i32> %r2_unroll_u5_3_8, <1 x i1> %p1_unroll_u5_3_8)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_9, <1 x i32> %r2_unroll_u5_3_9, <1 x i1> %p1_unroll_u5_3_9)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_10, <1 x i32> %r2_unroll_u5_3_10, <1 x i1> %p1_unroll_u5_3_10)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_11, <1 x i32> %r2_unroll_u5_3_11, <1 x i1> %p1_unroll_u5_3_11)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_12, <1 x i32> %r2_unroll_u5_3_12, <1 x i1> %p1_unroll_u5_3_12)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_13, <1 x i32> %r2_unroll_u5_3_13, <1 x i1> %p1_unroll_u5_3_13)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_14, <1 x i32> %r2_unroll_u5_3_14, <1 x i1> %p1_unroll_u5_3_14)
    call void @ek.scatter_add_f64(i8* %rd4, <1 x double> %d3_unroll_u5_3_15, <1 x i32> %r2_unroll_u5_3_15, <1 x i1> %p1_unroll_u5_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(32): 0
jit_var_free(32)
jit_var_dec_ref_int(29): 0
jit_var_free(29)
jit_var_dec_ref_ext(25): 1
jit_var_dec_ref_int(27): 0
jit_var_free(27)
jit_var_dec_ref_int(26): 0
jit_var_dec_ref_int(31): 0
jit_var_free(31)
jit_var_dec_ref_int(30): 0
jit_var_free(30)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(26): 0
jit_var_free(26)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(33): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(33): 1
jit_var_new(34): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(34): 1
jit_var_inc_ref_int(34): 1
jit_var_new(35 <- 34): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(35): 1
jit_var_dec_ref_ext(34): 0
jit_var_new_literal(36): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(36): 1
jit_var_inc_ref_int(35): 1
jit_var_inc_ref_int(36): 1
jit_var_new(37 <- 35, 36): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(37): 1
jit_var_dec_ref_ext(36): 0
jit_var_dec_ref_ext(35): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(38): <@>, size=15, free=1
jit_var_inc_ref_ext(38): 1
jit_var_copy_mem(38, size=15)
jit_var_new_literal(39): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(39): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(33): 2
jit_var_copy_ptr(40 <- 33): <@>
jit_var_inc_ref_ext(40): 1
jit_var_new(41): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(41): 1
jit_var_inc_ref_int(41): 1
jit_var_new(42 <- 41): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(42): 1
jit_var_dec_ref_ext(41): 0
jit_var_inc_ref_int(37): 1
jit_var_inc_ref_int(42): 1
jit_var_new(43 <- 37, 42): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(43): 1
jit_var_dec_ref_ext(42): 0
jit_var_inc_ref_int(40): 1
jit_var_inc_ref_int(39): 1
jit_var_inc_ref_int(38): 1
jit_var_inc_ref_int(43): 1
jit_var_new(44 <- 40, 39, 38, 43): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(44): 1
jit_var_mark_scatter(44, 33)
jit_var_dec_ref_ext(43): 0
jit_var_dec_ref_ext(40): 0
jit_var_dec_ref_ext(39): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 34
   - %f1 -> 35
   - %f2 -> 36 [scalar]
   - %p3 -> 37
   - %r4 -> 41 [scalar]
   - %p5 -> 42 [scalar]
   - %p6 -> 43
   - %r7 -> 38 [in]
   - %f8 -> 39 [scalar]
   - %rd9 -> 40 [scalar] [direct_pointer]
   - %u10 -> 44 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %f1
    %f1 = uitofp <16 x i32> %r0 to <16 x float>

    ; Evaluate %f2
    %f2_0 = insertelement <16 x float> undef, float 0x4020000000000000, i32 0
    %f2 = shufflevector <16 x float> %f2_0, <16 x float> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x float> %f1, %f2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %f8
    %f8_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f8 = shufflevector <16 x float> %f8_0, <16 x float> undef, <16 x i32> zeroinitializer
    %f8_unroll_u10_0_0 = shufflevector <16 x float> %f8, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f8_unroll_u10_0_1 = shufflevector <16 x float> %f8, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %f8_unroll_u10_1_0 = shufflevector <8 x float> %f8_unroll_u10_0_0, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f8_unroll_u10_1_1 = shufflevector <8 x float> %f8_unroll_u10_0_0, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %f8_unroll_u10_1_2 = shufflevector <8 x float> %f8_unroll_u10_0_1, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f8_unroll_u10_1_3 = shufflevector <8 x float> %f8_unroll_u10_0_1, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %f8_unroll_u10_2_0 = shufflevector <4 x float> %f8_unroll_u10_1_0, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_1 = shufflevector <4 x float> %f8_unroll_u10_1_0, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_2 = shufflevector <4 x float> %f8_unroll_u10_1_1, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_3 = shufflevector <4 x float> %f8_unroll_u10_1_1, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_4 = shufflevector <4 x float> %f8_unroll_u10_1_2, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_5 = shufflevector <4 x float> %f8_unroll_u10_1_2, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_6 = shufflevector <4 x float> %f8_unroll_u10_1_3, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_7 = shufflevector <4 x float> %f8_unroll_u10_1_3, <4 x float> undef, <2 x i32> <i32 2, i32 3>

    %f8_unroll_u10_3_0 = shufflevector <2 x float> %f8_unroll_u10_2_0, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_1 = shufflevector <2 x float> %f8_unroll_u10_2_0, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_2 = shufflevector <2 x float> %f8_unroll_u10_2_1, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_3 = shufflevector <2 x float> %f8_unroll_u10_2_1, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_4 = shufflevector <2 x float> %f8_unroll_u10_2_2, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_5 = shufflevector <2 x float> %f8_unroll_u10_2_2, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_6 = shufflevector <2 x float> %f8_unroll_u10_2_3, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_7 = shufflevector <2 x float> %f8_unroll_u10_2_3, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_8 = shufflevector <2 x float> %f8_unroll_u10_2_4, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_9 = shufflevector <2 x float> %f8_unroll_u10_2_4, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_10 = shufflevector <2 x float> %f8_unroll_u10_2_5, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_11 = shufflevector <2 x float> %f8_unroll_u10_2_5, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_12 = shufflevector <2 x float> %f8_unroll_u10_2_6, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_13 = shufflevector <2 x float> %f8_unroll_u10_2_6, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_14 = shufflevector <2 x float> %f8_unroll_u10_2_7, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_15 = shufflevector <2 x float> %f8_unroll_u10_2_7, <2 x float> undef, <1 x i32> <i32 1>

    %r7_unroll_u10_0_0 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_0_1 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_u10_1_0 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_1 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_1_2 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_3 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r7_unroll_u10_2_0 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_1 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_2 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_3 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_4 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_5 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_6 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_7 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r7_unroll_u10_3_0 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_1 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_2 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_3 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_4 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_5 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_6 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_7 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_8 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_9 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_10 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_11 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_12 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_13 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_14 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_15 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p6_unroll_u10_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u10_1_0 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_1 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_1_2 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_3 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p6_unroll_u10_2_0 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_1 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_2 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_3 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_4 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_5 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_6 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_7 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p6_unroll_u10_3_0 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_1 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_2 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_3 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_4 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_5 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_6 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_7 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_8 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_9 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_10 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_11 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_12 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_13 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_14 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_15 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_0, <1 x i32> %r7_unroll_u10_3_0, <1 x i1> %p6_unroll_u10_3_0)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_1, <1 x i32> %r7_unroll_u10_3_1, <1 x i1> %p6_unroll_u10_3_1)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_2, <1 x i32> %r7_unroll_u10_3_2, <1 x i1> %p6_unroll_u10_3_2)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_3, <1 x i32> %r7_unroll_u10_3_3, <1 x i1> %p6_unroll_u10_3_3)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_4, <1 x i32> %r7_unroll_u10_3_4, <1 x i1> %p6_unroll_u10_3_4)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_5, <1 x i32> %r7_unroll_u10_3_5, <1 x i1> %p6_unroll_u10_3_5)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_6, <1 x i32> %r7_unroll_u10_3_6, <1 x i1> %p6_unroll_u10_3_6)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_7, <1 x i32> %r7_unroll_u10_3_7, <1 x i1> %p6_unroll_u10_3_7)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_8, <1 x i32> %r7_unroll_u10_3_8, <1 x i1> %p6_unroll_u10_3_8)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_9, <1 x i32> %r7_unroll_u10_3_9, <1 x i1> %p6_unroll_u10_3_9)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_10, <1 x i32> %r7_unroll_u10_3_10, <1 x i1> %p6_unroll_u10_3_10)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_11, <1 x i32> %r7_unroll_u10_3_11, <1 x i1> %p6_unroll_u10_3_11)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_12, <1 x i32> %r7_unroll_u10_3_12, <1 x i1> %p6_unroll_u10_3_12)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_13, <1 x i32> %r7_unroll_u10_3_13, <1 x i1> %p6_unroll_u10_3_13)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_14, <1 x i32> %r7_unroll_u10_3_14, <1 x i1> %p6_unroll_u10_3_14)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_15, <1 x i32> %r7_unroll_u10_3_15, <1 x i1> %p6_unroll_u10_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(44): 0
jit_var_free(44)
jit_var_dec_ref_int(40): 0
jit_var_free(40)
jit_var_dec_ref_ext(33): 1
jit_var_dec_ref_int(39): 0
jit_var_free(39)
jit_var_dec_ref_int(38): 0
jit_var_dec_ref_int(43): 0
jit_var_free(43)
jit_var_dec_ref_int(37): 0
jit_var_dec_ref_int(42): 0
jit_var_free(42)
jit_var_dec_ref_int(41): 0
jit_var_free(41)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(38): 0
jit_var_free(38)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(37): 0
jit_var_free(37)
jit_var_dec_ref_int(35): 0
jit_var_free(35)
jit_var_dec_ref_int(34): 0
jit_var_free(34)
jit_var_dec_ref_int(36): 0
jit_var_free(36)
jit_var_dec_ref_ext(33): 0
jit_var_free(33)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(45): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(45): 1
jit_var_new(46): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(46): 1
jit_var_inc_ref_int(46): 1
jit_var_new(47 <- 46): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(47): 1
jit_var_dec_ref_ext(46): 0
jit_var_new_literal(48): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(48): 1
jit_var_inc_ref_int(47): 1
jit_var_inc_ref_int(48): 1
jit_var_new(49 <- 47, 48): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(49): 1
jit_var_dec_ref_ext(48): 0
jit_var_dec_ref_ext(47): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(50): <@>, size=16, free=1
jit_var_inc_ref_ext(50): 1
jit_var_copy_mem(50, size=16)
jit_var_new_literal(51): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(51): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(45): 2
jit_var_copy_ptr(52 <- 45): <@>
jit_var_inc_ref_ext(52): 1
jit_var_new(53): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(53): 1
jit_var_inc_ref_int(53): 1
jit_var_new(54 <- 53): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(54): 1
jit_var_dec_ref_ext(53): 0
jit_var_inc_ref_int(49): 1
jit_var_inc_ref_int(54): 1
jit_var_new(55 <- 49, 54): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(55): 1
jit_var_dec_ref_ext(54): 0
jit_var_inc_ref_int(52): 1
jit_var_inc_ref_int(51): 1
jit_var_inc_ref_int(50): 1
jit_var_inc_ref_int(55): 1
jit_var_new(56 <- 52, 51, 50, 55): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(56): 1
jit_var_mark_scatter(56, 45)
jit_var_dec_ref_ext(55): 0
jit_var_dec_ref_ext(52): 0
jit_var_dec_ref_ext(51): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 46
   - %f1 -> 47
   - %f2 -> 48 [scalar]
   - %p3 -> 49
   - %r4 -> 53 [scalar]
   - %p5 -> 54 [scalar]
   - %p6 -> 55
   - %r7 -> 50 [in]
   - %f8 -> 51 [scalar]
   - %rd9 -> 52 [scalar] [direct_pointer]
   - %u10 -> 56 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %f1
    %f1 = uitofp <16 x i32> %r0 to <16 x float>

    ; Evaluate %f2
    %f2_0 = insertelement <16 x float> undef, float 0x4020000000000000, i32 0
    %f2 = shufflevector <16 x float> %f2_0, <16 x float> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x float> %f1, %f2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %f8
    %f8_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f8 = shufflevector <16 x float> %f8_0, <16 x float> undef, <16 x i32> zeroinitializer
    %f8_unroll_u10_0_0 = shufflevector <16 x float> %f8, <16 x float> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %f8_unroll_u10_0_1 = shufflevector <16 x float> %f8, <16 x float> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %f8_unroll_u10_1_0 = shufflevector <8 x float> %f8_unroll_u10_0_0, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f8_unroll_u10_1_1 = shufflevector <8 x float> %f8_unroll_u10_0_0, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %f8_unroll_u10_1_2 = shufflevector <8 x float> %f8_unroll_u10_0_1, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %f8_unroll_u10_1_3 = shufflevector <8 x float> %f8_unroll_u10_0_1, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %f8_unroll_u10_2_0 = shufflevector <4 x float> %f8_unroll_u10_1_0, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_1 = shufflevector <4 x float> %f8_unroll_u10_1_0, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_2 = shufflevector <4 x float> %f8_unroll_u10_1_1, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_3 = shufflevector <4 x float> %f8_unroll_u10_1_1, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_4 = shufflevector <4 x float> %f8_unroll_u10_1_2, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_5 = shufflevector <4 x float> %f8_unroll_u10_1_2, <4 x float> undef, <2 x i32> <i32 2, i32 3>
    %f8_unroll_u10_2_6 = shufflevector <4 x float> %f8_unroll_u10_1_3, <4 x float> undef, <2 x i32> <i32 0, i32 1>
    %f8_unroll_u10_2_7 = shufflevector <4 x float> %f8_unroll_u10_1_3, <4 x float> undef, <2 x i32> <i32 2, i32 3>

    %f8_unroll_u10_3_0 = shufflevector <2 x float> %f8_unroll_u10_2_0, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_1 = shufflevector <2 x float> %f8_unroll_u10_2_0, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_2 = shufflevector <2 x float> %f8_unroll_u10_2_1, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_3 = shufflevector <2 x float> %f8_unroll_u10_2_1, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_4 = shufflevector <2 x float> %f8_unroll_u10_2_2, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_5 = shufflevector <2 x float> %f8_unroll_u10_2_2, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_6 = shufflevector <2 x float> %f8_unroll_u10_2_3, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_7 = shufflevector <2 x float> %f8_unroll_u10_2_3, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_8 = shufflevector <2 x float> %f8_unroll_u10_2_4, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_9 = shufflevector <2 x float> %f8_unroll_u10_2_4, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_10 = shufflevector <2 x float> %f8_unroll_u10_2_5, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_11 = shufflevector <2 x float> %f8_unroll_u10_2_5, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_12 = shufflevector <2 x float> %f8_unroll_u10_2_6, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_13 = shufflevector <2 x float> %f8_unroll_u10_2_6, <2 x float> undef, <1 x i32> <i32 1>
    %f8_unroll_u10_3_14 = shufflevector <2 x float> %f8_unroll_u10_2_7, <2 x float> undef, <1 x i32> <i32 0>
    %f8_unroll_u10_3_15 = shufflevector <2 x float> %f8_unroll_u10_2_7, <2 x float> undef, <1 x i32> <i32 1>

    %r7_unroll_u10_0_0 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_0_1 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_u10_1_0 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_1 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_1_2 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_3 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r7_unroll_u10_2_0 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_1 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_2 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_3 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_4 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_5 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_6 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_7 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r7_unroll_u10_3_0 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_1 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_2 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_3 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_4 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_5 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_6 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_7 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_8 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_9 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_10 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_11 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_12 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_13 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_14 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_15 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p6_unroll_u10_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u10_1_0 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_1 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_1_2 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_3 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p6_unroll_u10_2_0 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_1 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_2 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_3 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_4 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_5 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_6 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_7 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p6_unroll_u10_3_0 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_1 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_2 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_3 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_4 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_5 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_6 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_7 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_8 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_9 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_10 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_11 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_12 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_13 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_14 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_15 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_0, <1 x i32> %r7_unroll_u10_3_0, <1 x i1> %p6_unroll_u10_3_0)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_1, <1 x i32> %r7_unroll_u10_3_1, <1 x i1> %p6_unroll_u10_3_1)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_2, <1 x i32> %r7_unroll_u10_3_2, <1 x i1> %p6_unroll_u10_3_2)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_3, <1 x i32> %r7_unroll_u10_3_3, <1 x i1> %p6_unroll_u10_3_3)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_4, <1 x i32> %r7_unroll_u10_3_4, <1 x i1> %p6_unroll_u10_3_4)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_5, <1 x i32> %r7_unroll_u10_3_5, <1 x i1> %p6_unroll_u10_3_5)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_6, <1 x i32> %r7_unroll_u10_3_6, <1 x i1> %p6_unroll_u10_3_6)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_7, <1 x i32> %r7_unroll_u10_3_7, <1 x i1> %p6_unroll_u10_3_7)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_8, <1 x i32> %r7_unroll_u10_3_8, <1 x i1> %p6_unroll_u10_3_8)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_9, <1 x i32> %r7_unroll_u10_3_9, <1 x i1> %p6_unroll_u10_3_9)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_10, <1 x i32> %r7_unroll_u10_3_10, <1 x i1> %p6_unroll_u10_3_10)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_11, <1 x i32> %r7_unroll_u10_3_11, <1 x i1> %p6_unroll_u10_3_11)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_12, <1 x i32> %r7_unroll_u10_3_12, <1 x i1> %p6_unroll_u10_3_12)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_13, <1 x i32> %r7_unroll_u10_3_13, <1 x i1> %p6_unroll_u10_3_13)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_14, <1 x i32> %r7_unroll_u10_3_14, <1 x i1> %p6_unroll_u10_3_14)
    call void @ek.scatter_add_f32(i8* %rd9, <1 x float> %f8_unroll_u10_3_15, <1 x i32> %r7_unroll_u10_3_15, <1 x i1> %p6_unroll_u10_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(56): 0
jit_var_free(56)
jit_var_dec_ref_int(52): 0
jit_var_free(52)
jit_var_dec_ref_ext(45): 1
jit_var_dec_ref_int(51): 0
jit_var_free(51)
jit_var_dec_ref_int(50): 0
jit_var_dec_ref_int(55): 0
jit_var_free(55)
jit_var_dec_ref_int(49): 0
jit_var_dec_ref_int(54): 0
jit_var_free(54)
jit_var_dec_ref_int(53): 0
jit_var_free(53)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(50): 0
jit_var_free(50)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(49): 0
jit_var_free(49)
jit_var_dec_ref_int(47): 0
jit_var_free(47)
jit_var_dec_ref_int(46): 0
jit_var_free(46)
jit_var_dec_ref_int(48): 0
jit_var_free(48)
jit_var_dec_ref_ext(45): 0
jit_var_free(45)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(57): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(57): 1
jit_var_new(58): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(58): 1
jit_var_inc_ref_int(58): 1
jit_var_new(59 <- 58): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(59): 1
jit_var_dec_ref_ext(58): 0
jit_var_new_literal(60): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(60): 1
jit_var_inc_ref_int(59): 1
jit_var_inc_ref_int(60): 1
jit_var_new(61 <- 59, 60): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(61): 1
jit_var_dec_ref_ext(60): 0
jit_var_dec_ref_ext(59): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(62): <@>, size=15, free=1
jit_var_inc_ref_ext(62): 1
jit_var_copy_mem(62, size=15)
jit_var_new_literal(63): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(63): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(57): 2
jit_var_copy_ptr(64 <- 57): <@>
jit_var_inc_ref_ext(64): 1
jit_var_new(65): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(65): 1
jit_var_inc_ref_int(65): 1
jit_var_new(66 <- 65): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(66): 1
jit_var_dec_ref_ext(65): 0
jit_var_inc_ref_int(61): 1
jit_var_inc_ref_int(66): 1
jit_var_new(67 <- 61, 66): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(67): 1
jit_var_dec_ref_ext(66): 0
jit_var_inc_ref_int(64): 1
jit_var_inc_ref_int(63): 1
jit_var_inc_ref_int(62): 1
jit_var_inc_ref_int(67): 1
jit_var_new(68 <- 64, 63, 62, 67): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(68): 1
jit_var_mark_scatter(68, 57)
jit_var_dec_ref_ext(67): 0
jit_var_dec_ref_ext(64): 0
jit_var_dec_ref_ext(63): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 58
   - %d1 -> 59
   - %d2 -> 60 [scalar]
   - %p3 -> 61
   - %r4 -> 65 [scalar]
   - %p5 -> 66 [scalar]
   - %p6 -> 67
   - %r7 -> 62 [in]
   - %d8 -> 63 [scalar]
   - %rd9 -> 64 [scalar] [direct_pointer]
   - %u10 -> 68 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %d1
    %d1 = uitofp <16 x i32> %r0 to <16 x double>

    ; Evaluate %d2
    %d2_0 = insertelement <16 x double> undef, double 0x4020000000000000, i32 0
    %d2 = shufflevector <16 x double> %d2_0, <16 x double> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x double> %d1, %d2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %d8
    %d8_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d8 = shufflevector <16 x double> %d8_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d8_unroll_u10_0_0 = shufflevector <16 x double> %d8, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d8_unroll_u10_0_1 = shufflevector <16 x double> %d8, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %d8_unroll_u10_1_0 = shufflevector <8 x double> %d8_unroll_u10_0_0, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d8_unroll_u10_1_1 = shufflevector <8 x double> %d8_unroll_u10_0_0, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %d8_unroll_u10_1_2 = shufflevector <8 x double> %d8_unroll_u10_0_1, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d8_unroll_u10_1_3 = shufflevector <8 x double> %d8_unroll_u10_0_1, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %d8_unroll_u10_2_0 = shufflevector <4 x double> %d8_unroll_u10_1_0, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_1 = shufflevector <4 x double> %d8_unroll_u10_1_0, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_2 = shufflevector <4 x double> %d8_unroll_u10_1_1, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_3 = shufflevector <4 x double> %d8_unroll_u10_1_1, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_4 = shufflevector <4 x double> %d8_unroll_u10_1_2, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_5 = shufflevector <4 x double> %d8_unroll_u10_1_2, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_6 = shufflevector <4 x double> %d8_unroll_u10_1_3, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_7 = shufflevector <4 x double> %d8_unroll_u10_1_3, <4 x double> undef, <2 x i32> <i32 2, i32 3>

    %d8_unroll_u10_3_0 = shufflevector <2 x double> %d8_unroll_u10_2_0, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_1 = shufflevector <2 x double> %d8_unroll_u10_2_0, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_2 = shufflevector <2 x double> %d8_unroll_u10_2_1, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_3 = shufflevector <2 x double> %d8_unroll_u10_2_1, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_4 = shufflevector <2 x double> %d8_unroll_u10_2_2, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_5 = shufflevector <2 x double> %d8_unroll_u10_2_2, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_6 = shufflevector <2 x double> %d8_unroll_u10_2_3, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_7 = shufflevector <2 x double> %d8_unroll_u10_2_3, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_8 = shufflevector <2 x double> %d8_unroll_u10_2_4, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_9 = shufflevector <2 x double> %d8_unroll_u10_2_4, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_10 = shufflevector <2 x double> %d8_unroll_u10_2_5, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_11 = shufflevector <2 x double> %d8_unroll_u10_2_5, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_12 = shufflevector <2 x double> %d8_unroll_u10_2_6, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_13 = shufflevector <2 x double> %d8_unroll_u10_2_6, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_14 = shufflevector <2 x double> %d8_unroll_u10_2_7, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_15 = shufflevector <2 x double> %d8_unroll_u10_2_7, <2 x double> undef, <1 x i32> <i32 1>

    %r7_unroll_u10_0_0 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_0_1 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_u10_1_0 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_1 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_1_2 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_3 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r7_unroll_u10_2_0 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_1 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_2 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_3 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_4 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_5 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_6 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_7 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r7_unroll_u10_3_0 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_1 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_2 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_3 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_4 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_5 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_6 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_7 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_8 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_9 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_10 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_11 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_12 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_13 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_14 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_15 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p6_unroll_u10_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u10_1_0 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_1 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_1_2 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_3 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p6_unroll_u10_2_0 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_1 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_2 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_3 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_4 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_5 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_6 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_7 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p6_unroll_u10_3_0 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_1 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_2 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_3 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_4 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_5 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_6 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_7 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_8 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_9 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_10 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_11 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_12 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_13 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_14 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_15 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_0, <1 x i32> %r7_unroll_u10_3_0, <1 x i1> %p6_unroll_u10_3_0)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_1, <1 x i32> %r7_unroll_u10_3_1, <1 x i1> %p6_unroll_u10_3_1)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_2, <1 x i32> %r7_unroll_u10_3_2, <1 x i1> %p6_unroll_u10_3_2)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_3, <1 x i32> %r7_unroll_u10_3_3, <1 x i1> %p6_unroll_u10_3_3)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_4, <1 x i32> %r7_unroll_u10_3_4, <1 x i1> %p6_unroll_u10_3_4)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_5, <1 x i32> %r7_unroll_u10_3_5, <1 x i1> %p6_unroll_u10_3_5)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_6, <1 x i32> %r7_unroll_u10_3_6, <1 x i1> %p6_unroll_u10_3_6)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_7, <1 x i32> %r7_unroll_u10_3_7, <1 x i1> %p6_unroll_u10_3_7)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_8, <1 x i32> %r7_unroll_u10_3_8, <1 x i1> %p6_unroll_u10_3_8)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_9, <1 x i32> %r7_unroll_u10_3_9, <1 x i1> %p6_unroll_u10_3_9)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_10, <1 x i32> %r7_unroll_u10_3_10, <1 x i1> %p6_unroll_u10_3_10)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_11, <1 x i32> %r7_unroll_u10_3_11, <1 x i1> %p6_unroll_u10_3_11)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_12, <1 x i32> %r7_unroll_u10_3_12, <1 x i1> %p6_unroll_u10_3_12)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_13, <1 x i32> %r7_unroll_u10_3_13, <1 x i1> %p6_unroll_u10_3_13)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_14, <1 x i32> %r7_unroll_u10_3_14, <1 x i1> %p6_unroll_u10_3_14)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_15, <1 x i32> %r7_unroll_u10_3_15, <1 x i1> %p6_unroll_u10_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(68): 0
jit_var_free(68)
jit_var_dec_ref_int(64): 0
jit_var_free(64)
jit_var_dec_ref_ext(57): 1
jit_var_dec_ref_int(63): 0
jit_var_free(63)
jit_var_dec_ref_int(62): 0
jit_var_dec_ref_int(67): 0
jit_var_free(67)
jit_var_dec_ref_int(61): 0
jit_var_dec_ref_int(66): 0
jit_var_free(66)
jit_var_dec_ref_int(65): 0
jit_var_free(65)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(62): 0
jit_var_free(62)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(61): 0
jit_var_free(61)
jit_var_dec_ref_int(59): 0
jit_var_free(59)
jit_var_dec_ref_int(58): 0
jit_var_free(58)
jit_var_dec_ref_int(60): 0
jit_var_free(60)
jit_var_dec_ref_ext(57): 0
jit_var_free(57)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(69): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(69): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(70): <@>, size=16, free=1
jit_var_inc_ref_ext(70): 1
jit_var_copy_mem(70, size=16)
jit_var_new(71): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(71): 1
jit_var_inc_ref_int(71): 1
jit_var_new(72 <- 71): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(72): 1
jit_var_dec_ref_ext(71): 0
jit_var_new_literal(73): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(73): 1
jit_var_inc_ref_int(72): 1
jit_var_inc_ref_int(73): 1
jit_var_new(74 <- 72, 73): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(74): 1
jit_var_dec_ref_ext(73): 0
jit_var_dec_ref_ext(72): 0
jit_var_new_literal(75): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(75): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(69): 2
jit_var_copy_ptr(76 <- 69): <@>
jit_var_inc_ref_ext(76): 1
jit_var_new(77): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(77): 1
jit_var_inc_ref_int(77): 1
jit_var_new(78 <- 77): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(78): 1
jit_var_dec_ref_ext(77): 0
jit_var_inc_ref_int(74): 1
jit_var_inc_ref_int(78): 1
jit_var_new(79 <- 74, 78): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(79): 1
jit_var_dec_ref_ext(78): 0
jit_var_inc_ref_int(76): 1
jit_var_inc_ref_int(75): 1
jit_var_inc_ref_int(70): 1
jit_var_inc_ref_int(79): 1
jit_var_new(80 <- 76, 75, 70, 79): $0call void @ek.scatter_add_$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(80): 1
jit_var_mark_scatter(80, 69)
jit_var_dec_ref_ext(79): 0
jit_var_dec_ref_ext(76): 0
jit_var_dec_ref_ext(75): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 71
   - %d1 -> 72
   - %d2 -> 73 [scalar]
   - %p3 -> 74
   - %r4 -> 77 [scalar]
   - %p5 -> 78 [scalar]
   - %p6 -> 79
   - %r7 -> 70 [in]
   - %d8 -> 75 [scalar]
   - %rd9 -> 76 [scalar] [direct_pointer]
   - %u10 -> 80 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %d1
    %d1 = uitofp <16 x i32> %r0 to <16 x double>

    ; Evaluate %d2
    %d2_0 = insertelement <16 x double> undef, double 0x4020000000000000, i32 0
    %d2 = shufflevector <16 x double> %d2_0, <16 x double> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x double> %d1, %d2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %d8
    %d8_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d8 = shufflevector <16 x double> %d8_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d8_unroll_u10_0_0 = shufflevector <16 x double> %d8, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d8_unroll_u10_0_1 = shufflevector <16 x double> %d8, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %d8_unroll_u10_1_0 = shufflevector <8 x double> %d8_unroll_u10_0_0, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d8_unroll_u10_1_1 = shufflevector <8 x double> %d8_unroll_u10_0_0, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %d8_unroll_u10_1_2 = shufflevector <8 x double> %d8_unroll_u10_0_1, <8 x double> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %d8_unroll_u10_1_3 = shufflevector <8 x double> %d8_unroll_u10_0_1, <8 x double> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %d8_unroll_u10_2_0 = shufflevector <4 x double> %d8_unroll_u10_1_0, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_1 = shufflevector <4 x double> %d8_unroll_u10_1_0, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_2 = shufflevector <4 x double> %d8_unroll_u10_1_1, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_3 = shufflevector <4 x double> %d8_unroll_u10_1_1, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_4 = shufflevector <4 x double> %d8_unroll_u10_1_2, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_5 = shufflevector <4 x double> %d8_unroll_u10_1_2, <4 x double> undef, <2 x i32> <i32 2, i32 3>
    %d8_unroll_u10_2_6 = shufflevector <4 x double> %d8_unroll_u10_1_3, <4 x double> undef, <2 x i32> <i32 0, i32 1>
    %d8_unroll_u10_2_7 = shufflevector <4 x double> %d8_unroll_u10_1_3, <4 x double> undef, <2 x i32> <i32 2, i32 3>

    %d8_unroll_u10_3_0 = shufflevector <2 x double> %d8_unroll_u10_2_0, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_1 = shufflevector <2 x double> %d8_unroll_u10_2_0, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_2 = shufflevector <2 x double> %d8_unroll_u10_2_1, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_3 = shufflevector <2 x double> %d8_unroll_u10_2_1, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_4 = shufflevector <2 x double> %d8_unroll_u10_2_2, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_5 = shufflevector <2 x double> %d8_unroll_u10_2_2, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_6 = shufflevector <2 x double> %d8_unroll_u10_2_3, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_7 = shufflevector <2 x double> %d8_unroll_u10_2_3, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_8 = shufflevector <2 x double> %d8_unroll_u10_2_4, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_9 = shufflevector <2 x double> %d8_unroll_u10_2_4, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_10 = shufflevector <2 x double> %d8_unroll_u10_2_5, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_11 = shufflevector <2 x double> %d8_unroll_u10_2_5, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_12 = shufflevector <2 x double> %d8_unroll_u10_2_6, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_13 = shufflevector <2 x double> %d8_unroll_u10_2_6, <2 x double> undef, <1 x i32> <i32 1>
    %d8_unroll_u10_3_14 = shufflevector <2 x double> %d8_unroll_u10_2_7, <2 x double> undef, <1 x i32> <i32 0>
    %d8_unroll_u10_3_15 = shufflevector <2 x double> %d8_unroll_u10_2_7, <2 x double> undef, <1 x i32> <i32 1>

    %r7_unroll_u10_0_0 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_0_1 = shufflevector <16 x i32> %r7, <16 x i32> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %r7_unroll_u10_1_0 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_1 = shufflevector <8 x i32> %r7_unroll_u10_0_0, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %r7_unroll_u10_1_2 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %r7_unroll_u10_1_3 = shufflevector <8 x i32> %r7_unroll_u10_0_1, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %r7_unroll_u10_2_0 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_1 = shufflevector <4 x i32> %r7_unroll_u10_1_0, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_2 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_3 = shufflevector <4 x i32> %r7_unroll_u10_1_1, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_4 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_5 = shufflevector <4 x i32> %r7_unroll_u10_1_2, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
    %r7_unroll_u10_2_6 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
    %r7_unroll_u10_2_7 = shufflevector <4 x i32> %r7_unroll_u10_1_3, <4 x i32> undef, <2 x i32> <i32 2, i32 3>

    %r7_unroll_u10_3_0 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_1 = shufflevector <2 x i32> %r7_unroll_u10_2_0, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_2 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_3 = shufflevector <2 x i32> %r7_unroll_u10_2_1, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_4 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_5 = shufflevector <2 x i32> %r7_unroll_u10_2_2, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_6 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_7 = shufflevector <2 x i32> %r7_unroll_u10_2_3, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_8 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_9 = shufflevector <2 x i32> %r7_unroll_u10_2_4, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_10 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_11 = shufflevector <2 x i32> %r7_unroll_u10_2_5, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_12 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_13 = shufflevector <2 x i32> %r7_unroll_u10_2_6, <2 x i32> undef, <1 x i32> <i32 1>
    %r7_unroll_u10_3_14 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 0>
    %r7_unroll_u10_3_15 = shufflevector <2 x i32> %r7_unroll_u10_2_7, <2 x i32> undef, <1 x i32> <i32 1>

    %p6_unroll_u10_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u10_1_0 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_1 = shufflevector <8 x i1> %p6_unroll_u10_0_0, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u10_1_2 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
    %p6_unroll_u10_1_3 = shufflevector <8 x i1> %p6_unroll_u10_0_1, <8 x i1> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>

    %p6_unroll_u10_2_0 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_1 = shufflevector <4 x i1> %p6_unroll_u10_1_0, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_2 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_3 = shufflevector <4 x i1> %p6_unroll_u10_1_1, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_4 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_5 = shufflevector <4 x i1> %p6_unroll_u10_1_2, <4 x i1> undef, <2 x i32> <i32 2, i32 3>
    %p6_unroll_u10_2_6 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 0, i32 1>
    %p6_unroll_u10_2_7 = shufflevector <4 x i1> %p6_unroll_u10_1_3, <4 x i1> undef, <2 x i32> <i32 2, i32 3>

    %p6_unroll_u10_3_0 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_1 = shufflevector <2 x i1> %p6_unroll_u10_2_0, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_2 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_3 = shufflevector <2 x i1> %p6_unroll_u10_2_1, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_4 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_5 = shufflevector <2 x i1> %p6_unroll_u10_2_2, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_6 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_7 = shufflevector <2 x i1> %p6_unroll_u10_2_3, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_8 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_9 = shufflevector <2 x i1> %p6_unroll_u10_2_4, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_10 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_11 = shufflevector <2 x i1> %p6_unroll_u10_2_5, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_12 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_13 = shufflevector <2 x i1> %p6_unroll_u10_2_6, <2 x i1> undef, <1 x i32> <i32 1>
    %p6_unroll_u10_3_14 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 0>
    %p6_unroll_u10_3_15 = shufflevector <2 x i1> %p6_unroll_u10_2_7, <2 x i1> undef, <1 x i32> <i32 1>

    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_0, <1 x i32> %r7_unroll_u10_3_0, <1 x i1> %p6_unroll_u10_3_0)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_1, <1 x i32> %r7_unroll_u10_3_1, <1 x i1> %p6_unroll_u10_3_1)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_2, <1 x i32> %r7_unroll_u10_3_2, <1 x i1> %p6_unroll_u10_3_2)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_3, <1 x i32> %r7_unroll_u10_3_3, <1 x i1> %p6_unroll_u10_3_3)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_4, <1 x i32> %r7_unroll_u10_3_4, <1 x i1> %p6_unroll_u10_3_4)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_5, <1 x i32> %r7_unroll_u10_3_5, <1 x i1> %p6_unroll_u10_3_5)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_6, <1 x i32> %r7_unroll_u10_3_6, <1 x i1> %p6_unroll_u10_3_6)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_7, <1 x i32> %r7_unroll_u10_3_7, <1 x i1> %p6_unroll_u10_3_7)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_8, <1 x i32> %r7_unroll_u10_3_8, <1 x i1> %p6_unroll_u10_3_8)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_9, <1 x i32> %r7_unroll_u10_3_9, <1 x i1> %p6_unroll_u10_3_9)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_10, <1 x i32> %r7_unroll_u10_3_10, <1 x i1> %p6_unroll_u10_3_10)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_11, <1 x i32> %r7_unroll_u10_3_11, <1 x i1> %p6_unroll_u10_3_11)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_12, <1 x i32> %r7_unroll_u10_3_12, <1 x i1> %p6_unroll_u10_3_12)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_13, <1 x i32> %r7_unroll_u10_3_13, <1 x i1> %p6_unroll_u10_3_13)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_14, <1 x i32> %r7_unroll_u10_3_14, <1 x i1> %p6_unroll_u10_3_14)
    call void @ek.scatter_add_f64(i8* %rd9, <1 x double> %d8_unroll_u10_3_15, <1 x i32> %r7_unroll_u10_3_15, <1 x i1> %p6_unroll_u10_3_15)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(80): 0
jit_var_free(80)
jit_var_dec_ref_int(76): 0
jit_var_free(76)
jit_var_dec_ref_ext(69): 1
jit_var_dec_ref_int(75): 0
jit_var_free(75)
jit_var_dec_ref_int(70): 0
jit_var_dec_ref_int(79): 0
jit_var_free(79)
jit_var_dec_ref_int(74): 0
jit_var_dec_ref_int(78): 0
jit_var_free(78)
jit_var_dec_ref_int(77): 0
jit_var_free(77)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(74): 0
jit_var_free(74)
jit_var_dec_ref_int(72): 0
jit_var_free(72)
jit_var_dec_ref_int(71): 0
jit_var_free(71)
jit_var_dec_ref_int(73): 0
jit_var_free(73)
jit_var_dec_ref_ext(70): 0
jit_var_free(70)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(69): 0
jit_var_free(69)
jit_free(<@>, type=host-async, size=128)
jit_free_flush(): scheduling 2 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_shutdown(): releasing 1 thread state ..
jit_malloc_trim(): freed
 - host-async memory: 1.12 KiB in 9 allocations
jit_shutdown(): done
