jit_set_device(device=-1, stream=0): creating stream
jit_var_new_literal(1): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(1): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(2): <@>, size=15, free=1
jit_var_inc_ref_ext(2): 1
jit_var_copy_mem(2, size=15)
jit_var_new_literal(3): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(3): 1
jit_var_new_literal(4): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(4): 1
jit_malloc(type=host-async, size=128): <@> (new allocation)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(1): 2
jit_var_copy_ptr(5 <- 1): <@>
jit_var_inc_ref_ext(5): 1
jit_var_new(6): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(6): 1
jit_var_new(7 <- 6): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(6): 0
jit_var_inc_ref_ext(7): 2
jit_var_dec_ref_ext(7): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(7): 1
jit_var_new(8 <- 5, 3, 2, 7): $4call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(8): 1
jit_var_mark_scatter(8, 1)
jit_var_dec_ref_ext(7): 0
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(3): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 6 [scalar]
   - %p1 -> 7 [scalar]
   - %r2 -> 2 [in]
   - %f3 -> 3 [scalar]
   - %rd4 -> 5 [scalar] [direct_pointer]
   - %u5 -> 8 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %f3
    %f3_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f3 = shufflevector <16 x float> %f3_0, <16 x float> undef, <16 x i32> zeroinitializer
    call void @ek.masked_scatter_add_v16f32(i8* %rd4, <16 x float> %f3, <16 x i32> %r2, <16 x i1> %p1)

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (new allocation)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(1): 1
jit_var_dec_ref_int(3): 0
jit_var_free(3)
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(7): 0
jit_var_free(7)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(1): 0
jit_var_free(1)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(9): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(9): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(10): <@>, size=16, free=1
jit_var_inc_ref_ext(10): 1
jit_var_copy_mem(10, size=16)
jit_var_new_literal(11): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(11): 1
jit_var_new_literal(12): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(12): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(9): 2
jit_var_copy_ptr(13 <- 9): <@>
jit_var_inc_ref_ext(13): 1
jit_var_new(14): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(14): 1
jit_var_inc_ref_int(14): 1
jit_var_new(15 <- 14): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(15): 1
jit_var_dec_ref_ext(14): 0
jit_var_inc_ref_ext(15): 2
jit_var_dec_ref_ext(15): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(11): 1
jit_var_inc_ref_int(10): 1
jit_var_inc_ref_int(15): 1
jit_var_new(16 <- 13, 11, 10, 15): $4call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(16): 1
jit_var_mark_scatter(16, 9)
jit_var_dec_ref_ext(15): 0
jit_var_dec_ref_ext(13): 0
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_var_dec_ref_ext(11): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 14 [scalar]
   - %p1 -> 15 [scalar]
   - %r2 -> 10 [in]
   - %f3 -> 11 [scalar]
   - %rd4 -> 13 [scalar] [direct_pointer]
   - %u5 -> 16 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=6):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd4 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p1
    %p1_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p1_1 = shufflevector <16 x i32> %p1_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p1 = icmp ult <16 x i32> %r0, %p1_1

    ; Load %r2
    %r2_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r2_p = bitcast i32* %r2_i to <16 x i32>*
    %r2 = load <16 x i32>, <16 x i32>* %r2_p, align 64, !alias.scope !1

    ; Evaluate %f3
    %f3_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f3 = shufflevector <16 x float> %f3_0, <16 x float> undef, <16 x i32> zeroinitializer
    call void @ek.masked_scatter_add_v16f32(i8* %rd4, <16 x float> %f3, <16 x i32> %r2, <16 x i1> %p1)

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(16): 0
jit_var_free(16)
jit_var_dec_ref_int(13): 0
jit_var_free(13)
jit_var_dec_ref_ext(9): 1
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(10): 0
jit_var_dec_ref_int(15): 0
jit_var_free(15)
jit_var_dec_ref_int(14): 0
jit_var_free(14)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(17): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(17): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(18): <@>, size=15, free=1
jit_var_inc_ref_ext(18): 1
jit_var_copy_mem(18, size=15)
jit_var_new_literal(19): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(19): 1
jit_var_new_literal(20): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(20): 1
jit_var_inc_ref_int(18): 1
jit_var_new(21 <- 18): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(21): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(17): 2
jit_var_copy_ptr(22 <- 17): <@>
jit_var_inc_ref_ext(22): 1
jit_var_new(23): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_int(23): 1
jit_var_new(24 <- 23): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(24): 1
jit_var_dec_ref_ext(23): 0
jit_var_inc_ref_ext(24): 2
jit_var_dec_ref_ext(24): 1
jit_var_inc_ref_int(22): 1
jit_var_inc_ref_int(19): 1
jit_var_inc_ref_int(21): 1
jit_var_inc_ref_int(24): 1
jit_var_new(25 <- 22, 19, 21, 24): $3call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(25): 1
jit_var_mark_scatter(25, 17)
jit_var_dec_ref_ext(24): 0
jit_var_dec_ref_ext(22): 0
jit_var_dec_ref_ext(21): 0
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_var_dec_ref_ext(19): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 18 [in]
   - %rd1 -> 21
   - %r2 -> 23 [scalar]
   - %p3 -> 24 [scalar]
   - %d4 -> 19 [scalar]
   - %rd5 -> 22 [scalar] [direct_pointer]
   - %u6 -> 25 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=7):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd5 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Load %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r0_p = bitcast i32* %r0_i to <16 x i32>*
    %r0 = load <16 x i32>, <16 x i32>* %r0_p, align 64, !alias.scope !1

    ; Evaluate %rd1
    %rd1 = zext <16 x i32> %r0 to <16 x i64>

    ; Evaluate %r2
    %r2_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r2_1 = shufflevector <16 x i32> %r2_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r2 = add <16 x i32> %r2_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p3
    %p3_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p3_1 = shufflevector <16 x i32> %p3_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p3 = icmp ult <16 x i32> %r2, %p3_1

    ; Evaluate %d4
    %d4_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d4 = shufflevector <16 x double> %d4_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d4_unroll_u6_0_0 = shufflevector <16 x double> %d4, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d4_unroll_u6_0_1 = shufflevector <16 x double> %d4, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd1_unroll_u6_0_0 = shufflevector <16 x i64> %rd1, <16 x i64> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %rd1_unroll_u6_0_1 = shufflevector <16 x i64> %rd1, <16 x i64> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p3_unroll_u6_0_0 = shufflevector <16 x i1> %p3, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p3_unroll_u6_0_1 = shufflevector <16 x i1> %p3, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    call void @ek.masked_scatter_add_v8f64(i8* %rd5, <8 x double> %d4_unroll_u6_0_0, <8 x i64> %rd1_unroll_u6_0_0, <8 x i1> %p3_unroll_u6_0_0)
    call void @ek.masked_scatter_add_v8f64(i8* %rd5, <8 x double> %d4_unroll_u6_0_1, <8 x i64> %rd1_unroll_u6_0_1, <8 x i1> %p3_unroll_u6_0_1)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_var_dec_ref_int(22): 0
jit_var_free(22)
jit_var_dec_ref_ext(17): 1
jit_var_dec_ref_int(19): 0
jit_var_free(19)
jit_var_dec_ref_int(21): 0
jit_var_free(21)
jit_var_dec_ref_int(18): 0
jit_var_dec_ref_int(24): 0
jit_var_free(24)
jit_var_dec_ref_int(23): 0
jit_var_free(23)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(26): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(26): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(27): <@>, size=16, free=1
jit_var_inc_ref_ext(27): 1
jit_var_copy_mem(27, size=16)
jit_var_new_literal(28): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(28): 1
jit_var_new_literal(29): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(29): 1
jit_var_inc_ref_int(27): 1
jit_var_new(30 <- 27): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(30): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(26): 2
jit_var_copy_ptr(31 <- 26): <@>
jit_var_inc_ref_ext(31): 1
jit_var_new(32): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(32): 1
jit_var_inc_ref_int(32): 1
jit_var_new(33 <- 32): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(33): 1
jit_var_dec_ref_ext(32): 0
jit_var_inc_ref_ext(33): 2
jit_var_dec_ref_ext(33): 1
jit_var_inc_ref_int(31): 1
jit_var_inc_ref_int(28): 1
jit_var_inc_ref_int(30): 1
jit_var_inc_ref_int(33): 1
jit_var_new(34 <- 31, 28, 30, 33): $3call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(34): 1
jit_var_mark_scatter(34, 26)
jit_var_dec_ref_ext(33): 0
jit_var_dec_ref_ext(31): 0
jit_var_dec_ref_ext(30): 0
jit_var_dec_ref_ext(29): 0
jit_var_free(29)
jit_var_dec_ref_ext(28): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 27 [in]
   - %rd1 -> 30
   - %r2 -> 32 [scalar]
   - %p3 -> 33 [scalar]
   - %d4 -> 28 [scalar]
   - %rd5 -> 31 [scalar] [direct_pointer]
   - %u6 -> 34 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=7):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd5 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Load %r0
    %r0_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r0_p = bitcast i32* %r0_i to <16 x i32>*
    %r0 = load <16 x i32>, <16 x i32>* %r0_p, align 64, !alias.scope !1

    ; Evaluate %rd1
    %rd1 = zext <16 x i32> %r0 to <16 x i64>

    ; Evaluate %r2
    %r2_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r2_1 = shufflevector <16 x i32> %r2_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r2 = add <16 x i32> %r2_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p3
    %p3_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p3_1 = shufflevector <16 x i32> %p3_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p3 = icmp ult <16 x i32> %r2, %p3_1

    ; Evaluate %d4
    %d4_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d4 = shufflevector <16 x double> %d4_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d4_unroll_u6_0_0 = shufflevector <16 x double> %d4, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d4_unroll_u6_0_1 = shufflevector <16 x double> %d4, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd1_unroll_u6_0_0 = shufflevector <16 x i64> %rd1, <16 x i64> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %rd1_unroll_u6_0_1 = shufflevector <16 x i64> %rd1, <16 x i64> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p3_unroll_u6_0_0 = shufflevector <16 x i1> %p3, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p3_unroll_u6_0_1 = shufflevector <16 x i1> %p3, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    call void @ek.masked_scatter_add_v8f64(i8* %rd5, <8 x double> %d4_unroll_u6_0_0, <8 x i64> %rd1_unroll_u6_0_0, <8 x i1> %p3_unroll_u6_0_0)
    call void @ek.masked_scatter_add_v8f64(i8* %rd5, <8 x double> %d4_unroll_u6_0_1, <8 x i64> %rd1_unroll_u6_0_1, <8 x i1> %p3_unroll_u6_0_1)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(34): 0
jit_var_free(34)
jit_var_dec_ref_int(31): 0
jit_var_free(31)
jit_var_dec_ref_ext(26): 1
jit_var_dec_ref_int(28): 0
jit_var_free(28)
jit_var_dec_ref_int(30): 0
jit_var_free(30)
jit_var_dec_ref_int(27): 0
jit_var_dec_ref_int(33): 0
jit_var_free(33)
jit_var_dec_ref_int(32): 0
jit_var_free(32)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(27): 0
jit_var_free(27)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(26): 0
jit_var_free(26)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(35): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(35): 1
jit_var_new(36): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(36): 1
jit_var_inc_ref_int(36): 1
jit_var_new(37 <- 36): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(37): 1
jit_var_dec_ref_ext(36): 0
jit_var_new_literal(38): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(38): 1
jit_var_inc_ref_int(37): 1
jit_var_inc_ref_int(38): 1
jit_var_new(39 <- 37, 38): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(39): 1
jit_var_dec_ref_ext(38): 0
jit_var_dec_ref_ext(37): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(40): <@>, size=15, free=1
jit_var_inc_ref_ext(40): 1
jit_var_copy_mem(40, size=15)
jit_var_new_literal(41): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(41): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(35): 2
jit_var_copy_ptr(42 <- 35): <@>
jit_var_inc_ref_ext(42): 1
jit_var_new(43): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(43): 1
jit_var_inc_ref_int(43): 1
jit_var_new(44 <- 43): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(44): 1
jit_var_dec_ref_ext(43): 0
jit_var_inc_ref_int(39): 1
jit_var_inc_ref_int(44): 1
jit_var_new(45 <- 39, 44): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(45): 1
jit_var_dec_ref_ext(44): 0
jit_var_inc_ref_int(42): 1
jit_var_inc_ref_int(41): 1
jit_var_inc_ref_int(40): 1
jit_var_inc_ref_int(45): 1
jit_var_new(46 <- 42, 41, 40, 45): $4call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(46): 1
jit_var_mark_scatter(46, 35)
jit_var_dec_ref_ext(45): 0
jit_var_dec_ref_ext(42): 0
jit_var_dec_ref_ext(41): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 36
   - %f1 -> 37
   - %f2 -> 38 [scalar]
   - %p3 -> 39
   - %r4 -> 43 [scalar]
   - %p5 -> 44 [scalar]
   - %p6 -> 45
   - %r7 -> 40 [in]
   - %f8 -> 41 [scalar]
   - %rd9 -> 42 [scalar] [direct_pointer]
   - %u10 -> 46 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %f1
    %f1 = uitofp <16 x i32> %r0 to <16 x float>

    ; Evaluate %f2
    %f2_0 = insertelement <16 x float> undef, float 0x4020000000000000, i32 0
    %f2 = shufflevector <16 x float> %f2_0, <16 x float> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x float> %f1, %f2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %f8
    %f8_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f8 = shufflevector <16 x float> %f8_0, <16 x float> undef, <16 x i32> zeroinitializer
    call void @ek.masked_scatter_add_v16f32(i8* %rd9, <16 x float> %f8, <16 x i32> %r7, <16 x i1> %p6)

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(46): 0
jit_var_free(46)
jit_var_dec_ref_int(42): 0
jit_var_free(42)
jit_var_dec_ref_ext(35): 1
jit_var_dec_ref_int(41): 0
jit_var_free(41)
jit_var_dec_ref_int(40): 0
jit_var_dec_ref_int(45): 0
jit_var_free(45)
jit_var_dec_ref_int(39): 0
jit_var_dec_ref_int(44): 0
jit_var_free(44)
jit_var_dec_ref_int(43): 0
jit_var_free(43)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(40): 0
jit_var_free(40)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(39): 0
jit_var_free(39)
jit_var_dec_ref_int(37): 0
jit_var_free(37)
jit_var_dec_ref_int(36): 0
jit_var_free(36)
jit_var_dec_ref_int(38): 0
jit_var_free(38)
jit_var_dec_ref_ext(35): 0
jit_var_free(35)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(47): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(47): 1
jit_var_new(48): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(48): 1
jit_var_inc_ref_int(48): 1
jit_var_new(49 <- 48): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(49): 1
jit_var_dec_ref_ext(48): 0
jit_var_new_literal(50): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(50): 1
jit_var_inc_ref_int(49): 1
jit_var_inc_ref_int(50): 1
jit_var_new(51 <- 49, 50): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(51): 1
jit_var_dec_ref_ext(50): 0
jit_var_dec_ref_ext(49): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(52): <@>, size=16, free=1
jit_var_inc_ref_ext(52): 1
jit_var_copy_mem(52, size=16)
jit_var_new_literal(53): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(53): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=4, size=16)
jit_var_inc_ref_ext(47): 2
jit_var_copy_ptr(54 <- 47): <@>
jit_var_inc_ref_ext(54): 1
jit_var_new(55): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(55): 1
jit_var_inc_ref_int(55): 1
jit_var_new(56 <- 55): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(56): 1
jit_var_dec_ref_ext(55): 0
jit_var_inc_ref_int(51): 1
jit_var_inc_ref_int(56): 1
jit_var_new(57 <- 51, 56): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(57): 1
jit_var_dec_ref_ext(56): 0
jit_var_inc_ref_int(54): 1
jit_var_inc_ref_int(53): 1
jit_var_inc_ref_int(52): 1
jit_var_inc_ref_int(57): 1
jit_var_new(58 <- 54, 53, 52, 57): $4call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(58): 1
jit_var_mark_scatter(58, 47)
jit_var_dec_ref_ext(57): 0
jit_var_dec_ref_ext(54): 0
jit_var_dec_ref_ext(53): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 48
   - %f1 -> 49
   - %f2 -> 50 [scalar]
   - %p3 -> 51
   - %r4 -> 55 [scalar]
   - %p5 -> 56 [scalar]
   - %p6 -> 57
   - %r7 -> 52 [in]
   - %f8 -> 53 [scalar]
   - %rd9 -> 54 [scalar] [direct_pointer]
   - %u10 -> 58 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=11):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd9 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %f1
    %f1 = uitofp <16 x i32> %r0 to <16 x float>

    ; Evaluate %f2
    %f2_0 = insertelement <16 x float> undef, float 0x4020000000000000, i32 0
    %f2 = shufflevector <16 x float> %f2_0, <16 x float> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x float> %f1, %f2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %f8
    %f8_0 = insertelement <16 x float> undef, float 0x3ff0000000000000, i32 0
    %f8 = shufflevector <16 x float> %f8_0, <16 x float> undef, <16 x i32> zeroinitializer
    call void @ek.masked_scatter_add_v16f32(i8* %rd9, <16 x float> %f8, <16 x i32> %r7, <16 x i1> %p6)

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(58): 0
jit_var_free(58)
jit_var_dec_ref_int(54): 0
jit_var_free(54)
jit_var_dec_ref_ext(47): 1
jit_var_dec_ref_int(53): 0
jit_var_free(53)
jit_var_dec_ref_int(52): 0
jit_var_dec_ref_int(57): 0
jit_var_free(57)
jit_var_dec_ref_int(51): 0
jit_var_dec_ref_int(56): 0
jit_var_free(56)
jit_var_dec_ref_int(55): 0
jit_var_free(55)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(52): 0
jit_var_free(52)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(51): 0
jit_var_free(51)
jit_var_dec_ref_int(49): 0
jit_var_free(49)
jit_var_dec_ref_int(48): 0
jit_var_free(48)
jit_var_dec_ref_int(50): 0
jit_var_free(50)
jit_var_dec_ref_ext(47): 0
jit_var_free(47)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(59): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(59): 1
jit_var_new(60): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(60): 1
jit_var_inc_ref_int(60): 1
jit_var_new(61 <- 60): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(61): 1
jit_var_dec_ref_ext(60): 0
jit_var_new_literal(62): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(62): 1
jit_var_inc_ref_int(61): 1
jit_var_inc_ref_int(62): 1
jit_var_new(63 <- 61, 62): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(63): 1
jit_var_dec_ref_ext(62): 0
jit_var_dec_ref_ext(61): 0
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(64): <@>, size=15, free=1
jit_var_inc_ref_ext(64): 1
jit_var_copy_mem(64, size=15)
jit_var_new_literal(65): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(65): 1
jit_var_inc_ref_int(64): 1
jit_var_new(66 <- 64): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(66): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(59): 2
jit_var_copy_ptr(67 <- 59): <@>
jit_var_inc_ref_ext(67): 1
jit_var_new(68): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(68): 1
jit_var_inc_ref_int(68): 1
jit_var_new(69 <- 68): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(69): 1
jit_var_dec_ref_ext(68): 0
jit_var_inc_ref_int(63): 1
jit_var_inc_ref_int(69): 1
jit_var_new(70 <- 63, 69): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(70): 1
jit_var_dec_ref_ext(69): 0
jit_var_inc_ref_int(67): 1
jit_var_inc_ref_int(65): 1
jit_var_inc_ref_int(66): 1
jit_var_inc_ref_int(70): 1
jit_var_new(71 <- 67, 65, 66, 70): $3call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(71): 1
jit_var_mark_scatter(71, 59)
jit_var_dec_ref_ext(70): 0
jit_var_dec_ref_ext(67): 0
jit_var_dec_ref_ext(66): 0
jit_var_dec_ref_ext(65): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=15): register map:
   - %r0 -> 60
   - %d1 -> 61
   - %d2 -> 62 [scalar]
   - %p3 -> 63
   - %r4 -> 68 [scalar]
   - %p5 -> 69 [scalar]
   - %p6 -> 70
   - %r7 -> 64 [in]
   - %rd8 -> 66
   - %d9 -> 65 [scalar]
   - %rd10 -> 67 [scalar] [direct_pointer]
   - %u11 -> 71 [scat]
  -> launching <@> (n=15, in=2, out=1, ops=12):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd10 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %d1
    %d1 = uitofp <16 x i32> %r0 to <16 x double>

    ; Evaluate %d2
    %d2_0 = insertelement <16 x double> undef, double 0x4020000000000000, i32 0
    %d2 = shufflevector <16 x double> %d2_0, <16 x double> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x double> %d1, %d2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %rd8
    %rd8 = zext <16 x i32> %r7 to <16 x i64>

    ; Evaluate %d9
    %d9_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d9 = shufflevector <16 x double> %d9_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d9_unroll_u11_0_0 = shufflevector <16 x double> %d9, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d9_unroll_u11_0_1 = shufflevector <16 x double> %d9, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_u11_0_0 = shufflevector <16 x i64> %rd8, <16 x i64> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %rd8_unroll_u11_0_1 = shufflevector <16 x i64> %rd8, <16 x i64> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u11_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u11_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    call void @ek.masked_scatter_add_v8f64(i8* %rd10, <8 x double> %d9_unroll_u11_0_0, <8 x i64> %rd8_unroll_u11_0_0, <8 x i1> %p6_unroll_u11_0_0)
    call void @ek.masked_scatter_add_v8f64(i8* %rd10, <8 x double> %d9_unroll_u11_0_1, <8 x i64> %rd8_unroll_u11_0_1, <8 x i1> %p6_unroll_u11_0_1)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(71): 0
jit_var_free(71)
jit_var_dec_ref_int(67): 0
jit_var_free(67)
jit_var_dec_ref_ext(59): 1
jit_var_dec_ref_int(65): 0
jit_var_free(65)
jit_var_dec_ref_int(66): 0
jit_var_free(66)
jit_var_dec_ref_int(64): 0
jit_var_dec_ref_int(70): 0
jit_var_free(70)
jit_var_dec_ref_int(63): 0
jit_var_dec_ref_int(69): 0
jit_var_free(69)
jit_var_dec_ref_int(68): 0
jit_var_free(68)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(64): 0
jit_var_free(64)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(63): 0
jit_var_free(63)
jit_var_dec_ref_int(61): 0
jit_var_free(61)
jit_var_dec_ref_int(60): 0
jit_var_free(60)
jit_var_dec_ref_int(62): 0
jit_var_free(62)
jit_var_dec_ref_ext(59): 0
jit_var_free(59)
jit_free(<@>, type=host-async, size=128)
jit_var_new_literal(72): $r0_0 = insertelement <$w x $t0> undef, $t0 0x0, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(72): 1
jit_malloc(type=host, size=128): <@> (new allocation)
jit_var_map_mem(73): <@>, size=16, free=1
jit_var_inc_ref_ext(73): 1
jit_var_copy_mem(73, size=16)
jit_var_new(74): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(74): 1
jit_var_inc_ref_int(74): 1
jit_var_new(75 <- 74): $r0 = uitofp <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(75): 1
jit_var_dec_ref_ext(74): 0
jit_var_new_literal(76): $r0_0 = insertelement <$w x $t0> undef, $t0 0x4020000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(76): 1
jit_var_inc_ref_int(75): 1
jit_var_inc_ref_int(76): 1
jit_var_new(77 <- 75, 76): $r0 = fcmp olt <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(77): 1
jit_var_dec_ref_ext(76): 0
jit_var_dec_ref_ext(75): 0
jit_var_new_literal(78): $r0_0 = insertelement <$w x $t0> undef, $t0 0x3ff0000000000000, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(78): 1
jit_var_inc_ref_int(73): 1
jit_var_new(79 <- 73): $r0 = zext <$w x $t1> $r1 to <$w x $t0>
jit_var_inc_ref_ext(79): 1
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_memset_async(<@>, isize=8, size=16)
jit_var_inc_ref_ext(72): 2
jit_var_copy_ptr(80 <- 72): <@>
jit_var_inc_ref_ext(80): 1
jit_var_new(81): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(81): 1
jit_var_inc_ref_int(81): 1
jit_var_new(82 <- 81): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(82): 1
jit_var_dec_ref_ext(81): 0
jit_var_inc_ref_int(77): 1
jit_var_inc_ref_int(82): 1
jit_var_new(83 <- 77, 82): $r0 = and <$w x $t1> $r1, $r2
jit_var_inc_ref_ext(83): 1
jit_var_dec_ref_ext(82): 0
jit_var_inc_ref_int(80): 1
jit_var_inc_ref_int(78): 1
jit_var_inc_ref_int(79): 1
jit_var_inc_ref_int(83): 1
jit_var_new(84 <- 80, 78, 79, 83): $3call void @ek.masked_scatter_add_v$w$a2($t1 $r1, <$w x $t2> $r2, <$w x $t3> $r3, <$w x $t4> $r4)
jit_var_inc_ref_ext(84): 1
jit_var_mark_scatter(84, 72)
jit_var_dec_ref_ext(83): 0
jit_var_dec_ref_ext(80): 0
jit_var_dec_ref_ext(79): 0
jit_var_dec_ref_ext(78): 0
jit_eval(): launching 1 kernel.
jit_assemble(size=16): register map:
   - %r0 -> 74
   - %d1 -> 75
   - %d2 -> 76 [scalar]
   - %p3 -> 77
   - %r4 -> 81 [scalar]
   - %p5 -> 82 [scalar]
   - %p6 -> 83
   - %r7 -> 73 [in]
   - %rd8 -> 79
   - %d9 -> 78 [scalar]
   - %rd10 -> 80 [scalar] [direct_pointer]
   - %u11 -> 84 [scat]
  -> launching <@> (n=16, in=2, out=1, ops=12):
define void @enoki_<@>(i32 %start, i32 %end, i8** %ptrs) #0 alignstack(64) {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd10 = load i8*, i8** %a1_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <16 x i32> %r0_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r0 = add <16 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %d1
    %d1 = uitofp <16 x i32> %r0 to <16 x double>

    ; Evaluate %d2
    %d2_0 = insertelement <16 x double> undef, double 0x4020000000000000, i32 0
    %d2 = shufflevector <16 x double> %d2_0, <16 x double> undef, <16 x i32> zeroinitializer

    ; Evaluate %p3
    %p3 = fcmp olt <16 x double> %d1, %d2

    ; Evaluate %r4
    %r4_0 = insertelement <16 x i32> undef, i32 %index, i32 0
    %r4_1 = shufflevector <16 x i32> %r4_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %r4 = add <16 x i32> %r4_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    ; Evaluate %p5
    %p5_0 = insertelement <16 x i32> undef, i32 %end, i32 0
    %p5_1 = shufflevector <16 x i32> %p5_0, <16 x i32> undef, <16 x i32> zeroinitializer
    %p5 = icmp ult <16 x i32> %r4, %p5_1

    ; Evaluate %p6
    %p6 = and <16 x i1> %p3, %p5

    ; Load %r7
    %r7_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r7_p = bitcast i32* %r7_i to <16 x i32>*
    %r7 = load <16 x i32>, <16 x i32>* %r7_p, align 64, !alias.scope !1

    ; Evaluate %rd8
    %rd8 = zext <16 x i32> %r7 to <16 x i64>

    ; Evaluate %d9
    %d9_0 = insertelement <16 x double> undef, double 0x3ff0000000000000, i32 0
    %d9 = shufflevector <16 x double> %d9_0, <16 x double> undef, <16 x i32> zeroinitializer
    %d9_unroll_u11_0_0 = shufflevector <16 x double> %d9, <16 x double> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %d9_unroll_u11_0_1 = shufflevector <16 x double> %d9, <16 x double> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %rd8_unroll_u11_0_0 = shufflevector <16 x i64> %rd8, <16 x i64> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %rd8_unroll_u11_0_1 = shufflevector <16 x i64> %rd8, <16 x i64> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    %p6_unroll_u11_0_0 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
    %p6_unroll_u11_0_1 = shufflevector <16 x i1> %p6, <16 x i1> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>

    call void @ek.masked_scatter_add_v8f64(i8* %rd10, <8 x double> %d9_unroll_u11_0_0, <8 x i64> %rd8_unroll_u11_0_0, <8 x i1> %p6_unroll_u11_0_0)
    call void @ek.masked_scatter_add_v8f64(i8* %rd10, <8 x double> %d9_unroll_u11_0_1, <8 x i64> %rd8_unroll_u11_0_1, <8 x i1> %p6_unroll_u11_0_1)


    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 16
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind "target-cpu"="skylake-avx512" "stack-probe-size"="1073741824" "target-features"="+avx512f,+avx512dq,+avx512vl,+avx512cd" }
jit_run(): scheduling 1 packet
jit_malloc(type=host-async, size=128): <@> (reused local)
jit_eval(): cleaning up..
jit_var_dec_ref_ext(84): 0
jit_var_free(84)
jit_var_dec_ref_int(80): 0
jit_var_free(80)
jit_var_dec_ref_ext(72): 1
jit_var_dec_ref_int(78): 0
jit_var_free(78)
jit_var_dec_ref_int(79): 0
jit_var_free(79)
jit_var_dec_ref_int(73): 0
jit_var_dec_ref_int(83): 0
jit_var_free(83)
jit_var_dec_ref_int(77): 0
jit_var_dec_ref_int(82): 0
jit_var_free(82)
jit_var_dec_ref_int(81): 0
jit_var_free(81)
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_free(<@>, type=host-async, size=128)
target=[2, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
jit_var_dec_ref_ext(77): 0
jit_var_free(77)
jit_var_dec_ref_int(75): 0
jit_var_free(75)
jit_var_dec_ref_int(74): 0
jit_var_free(74)
jit_var_dec_ref_int(76): 0
jit_var_free(76)
jit_var_dec_ref_ext(73): 0
jit_var_free(73)
jit_free(<@>, type=host-async, size=128)
jit_var_dec_ref_ext(72): 0
jit_var_free(72)
jit_free(<@>, type=host-async, size=128)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 3 deallocations
jit_shutdown(): releasing 4 kernels ..
jit_malloc_trim(): freed
 - host-async memory: 1.25 KiB in 10 allocations
jit_shutdown(): done
