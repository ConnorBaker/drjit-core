jit_var_new(1): mov.u32 $r0, $i
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_int(1): 1
jit_var_new(2 <- 1): cvt.rn.$t0.$t1 $r0, $r1
jit_var_inc_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_var_schedule(2)
jit_eval(): launching 1 kernel.
jit_assemble(size=10): register map:
   - %r4 -> 1
   - %f5 -> 2 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
  -> launching <@> (n=10, in=0, out=1, ops=6):
.version 6.3
.address_size 64

.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0) {
    .reg.b8   %b <6>; .reg.b16 %w<6>; .reg.b32 %r<6>;
    .reg.b64  %rd<6>; .reg.f32 %f<6>; .reg.f64 %d<6>;
    .reg.pred %p<6>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r4
    mov.u32 %r4, %r0;

    // Evaluate %f5
    cvt.rn.f32.u32 %f5, %r4;

    // Store %f5
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f5;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_eval(): done.
jit_registry_put(<@>, domain="Base"): 1 (new)
jit_registry_put(<@>, domain="Base"): 2 (new)
jit_var_new_literal(3): mov.$b0 $r0, 0x3f800000
jit_var_inc_ref_ext(3): 1
jit_var_new_literal(4): mov.$b0 $r0, 0x40000000
jit_var_inc_ref_ext(4): 1
jit_var_new(5): mov.u32 $r0, $i
jit_var_inc_ref_ext(5): 1
jit_var_inc_ref_ext(5): 2
jit_var_dec_ref_ext(5): 1
jit_var_inc_ref_ext(5): 2
jit_var_new(6): 
jit_var_inc_ref_ext(6): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_var_map_mem(7): <@>, size=1, free=1
jit_var_inc_ref_ext(7): 1
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_var_map_mem(8): <@>, size=1, free=1
jit_var_inc_ref_ext(8): 1
jit_var_new_literal(9): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(9): 1
jit_var_new_literal(9): mov.$b0 $r0, 0x0 (reused)
jit_var_inc_ref_ext(9): 2
jit_var_new(10): .func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <5>; .reg.b16 %w<5>; .reg.b32 %r<5>;
    .reg.b64  %rd<5>; .reg.f32 %f<5>; .reg.f64 %d<5>;
    .reg.pred %p<5>;


    // Evaluate %f4
    mov.b32 %f4, 0x0;
    st.param.f32 [out+0], %f4;
    st.param.f32 [out+4], %f4;
    ret;
}

jit_var_inc_ref_ext(10): 1
jit_var_dec_ref_ext(9): 1
jit_var_dec_ref_ext(9): 0
jit_var_free(9)
jit_var_dec_ref_ext(8): 0
jit_var_free(8)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(7): 0
jit_var_free(7)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(6): 1
jit_var_inc_ref_int(10): 1
jit_var_new(11 <- 6, 10): 
jit_var_inc_ref_ext(11): 1
jit_var_dec_ref_ext(10): 0
jit_var_dec_ref_ext(6): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_var_map_mem(12): <@>, size=1, free=1
jit_var_inc_ref_ext(12): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_var_map_mem(13): <@>, size=1, free=1
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_ext(12): 2
jit_var_inc_ref_ext(13): 2
jit_var_new_literal(14): mov.$b0 $r0, 0x5
jit_var_inc_ref_ext(14): 1
jit_var_new_literal(15): mov.$b0 $r0, 0x1
jit_var_inc_ref_ext(15): 1
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(16 <- 2): <@>
jit_var_inc_ref_ext(16): 1
jit_var_inc_ref_int(16): 1
jit_var_inc_ref_int(13): 1
jit_var_inc_ref_int(14): 1
jit_var_new(17 <- 16, 13, 14): mul.wide.$t3 %rd3, $r3, $s2$nadd.$t1 %rd3, %rd3, $r1$nst.global.$t2 [%rd3], $r2
jit_var_inc_ref_ext(17): 1
jit_var_mark_scatter(17, 2)
jit_var_dec_ref_ext(16): 0
jit_var_dec_ref_ext(15): 0
jit_var_free(15)
jit_var_dec_ref_ext(14): 0
jit_var_inc_ref_int(12): 1
jit_var_inc_ref_int(13): 2
jit_var_new(18 <- 12, 13): add.ftz.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(18): 1
jit_var_inc_ref_int(12): 2
jit_var_inc_ref_int(13): 3
jit_var_inc_ref_int(13): 4
jit_var_new(19 <- 12, 13, 13): fma.rn.ftz.$t0 $r0, $r1, $r2, $r3
jit_var_inc_ref_ext(19): 1
jit_var_dec_ref_ext(13): 1
jit_var_dec_ref_ext(12): 1
jit_var_dec_ref_ext(17): 0
jit_var_free(17)
jit_var_dec_ref_int(16): 0
jit_var_free(16)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(13): 3
jit_var_dec_ref_int(14): 0
jit_var_free(14)
jit_var_new(20): .func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <11>; .reg.b16 %w<11>; .reg.b32 %r<11>;
    .reg.b64  %rd<11>; .reg.f32 %f<11>; .reg.f64 %d<11>;
    .reg.pred %p<11>;


    // Load %f4
    ld.param.f32 %f4, [in+0];

    // Load %f5
    ld.param.f32 %f5, [in+4];

    // Evaluate %f6
    add.ftz.f32 %f6, %f4, %f5;

    // Evaluate %f7
    fma.rn.ftz.f32 %f7, %f4, %f5, %f5;

    // Evaluate %r8
    mov.b32 %r8, 0x5;

    // Evaluate %rd9
    mov.b64 %rd9, <@>;
    mul.wide.u32 %rd3, %r8, 4;
    add.u64 %rd3, %rd3, %rd9;
    st.global.f32 [%rd3], %f5;
    st.param.f32 [out+0], %f6;
    st.param.f32 [out+4], %f7;
    ret;
}

jit_var_inc_ref_ext(20): 1
jit_var_dec_ref_ext(19): 0
jit_var_free(19)
jit_var_dec_ref_int(12): 1
jit_var_dec_ref_int(13): 2
jit_var_dec_ref_int(13): 1
jit_var_dec_ref_ext(18): 0
jit_var_free(18)
jit_var_dec_ref_int(12): 0
jit_var_dec_ref_int(13): 0
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(12): 0
jit_var_free(12)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(11): 1
jit_var_inc_ref_int(20): 1
jit_var_new(21 <- 11, 20): 
jit_var_inc_ref_ext(21): 1
jit_var_dec_ref_ext(20): 0
jit_var_dec_ref_ext(11): 0
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_var_map_mem(22): <@>, size=1, free=1
jit_var_inc_ref_ext(22): 1
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_var_map_mem(23): <@>, size=1, free=1
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_ext(22): 2
jit_var_inc_ref_ext(23): 2
jit_var_inc_ref_int(22): 1
jit_var_inc_ref_int(23): 1
jit_var_new(24 <- 22, 23): mul.ftz.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(24): 1
jit_var_inc_ref_int(22): 2
jit_var_inc_ref_int(23): 2
jit_var_new(25 <- 22, 23): sub.ftz.$t0 $r0, $r1, $r2
jit_var_inc_ref_ext(25): 1
jit_var_dec_ref_ext(23): 1
jit_var_dec_ref_ext(22): 1
jit_var_new(26): .func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <8>; .reg.b16 %w<8>; .reg.b32 %r<8>;
    .reg.b64  %rd<8>; .reg.f32 %f<8>; .reg.f64 %d<8>;
    .reg.pred %p<8>;


    // Load %f4
    ld.param.f32 %f4, [in+0];

    // Load %f5
    ld.param.f32 %f5, [in+4];

    // Evaluate %f6
    mul.ftz.f32 %f6, %f4, %f5;

    // Evaluate %f7
    sub.ftz.f32 %f7, %f4, %f5;
    st.param.f32 [out+0], %f6;
    st.param.f32 [out+4], %f7;
    ret;
}

jit_var_inc_ref_ext(26): 1
jit_var_dec_ref_ext(25): 0
jit_var_free(25)
jit_var_dec_ref_int(22): 1
jit_var_dec_ref_int(23): 1
jit_var_dec_ref_ext(24): 0
jit_var_free(24)
jit_var_dec_ref_int(22): 0
jit_var_dec_ref_int(23): 0
jit_var_dec_ref_ext(23): 0
jit_var_free(23)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(22): 0
jit_var_free(22)
jit_free(<@>, type=device, device=0, size=64)
jit_var_inc_ref_int(21): 1
jit_var_inc_ref_int(26): 1
jit_var_new(27 <- 21, 26): 
jit_var_inc_ref_ext(27): 1
jit_var_dec_ref_ext(26): 0
jit_var_dec_ref_ext(21): 0
jit_var_inc_ref_int(27): 1
jit_var_new(28 <- 27): .const .u64 $r0[] = { func_<@>, func_<@>, func_<@> };

jit_var_inc_ref_ext(28): 1
jit_var_dec_ref_ext(27): 0
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(28): 1
jit_var_new(29 <- 5, 28): mov.$t0 $r0, $r2$nmad.wide.u32 $r0, $r1, 8, $r0$nld.const.$t0 $r0, [$r0]
jit_var_inc_ref_ext(29): 1
jit_var_new_literal(30): mov.$b0 $r0, 0x0
jit_var_inc_ref_ext(30): 1
jit_var_new_literal(30): mov.$b0 $r0, 0x0 (reused)
jit_var_inc_ref_ext(30): 2
jit_var_new_literal(30): mov.$b0 $r0, 0x0 (reused)
jit_var_inc_ref_ext(30): 3
jit_var_new_literal(30): mov.$b0 $r0, 0x0 (reused)
jit_var_inc_ref_ext(30): 4
jit_var_dec_ref_ext(30): 3
jit_var_dec_ref_ext(30): 2
jit_var_new(31): 
jit_var_inc_ref_ext(31): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(31): 1
jit_var_new(32 <- 3, 31): 
jit_var_inc_ref_ext(32): 1
jit_var_dec_ref_ext(31): 0
jit_var_inc_ref_int(4): 1
jit_var_inc_ref_int(32): 1
jit_var_new(33 <- 4, 32): 
jit_var_inc_ref_ext(33): 1
jit_var_dec_ref_ext(32): 0
jit_var_inc_ref_int(33): 1
jit_var_new(34 <- 33): 
    {
        .param .align 4 .b8 param_in[8];
        .param .align 4 .b8 param_out[8]
jit_var_inc_ref_ext(34): 1
jit_var_dec_ref_ext(33): 0
jit_var_inc_ref_int(3): 2
jit_var_inc_ref_int(34): 1
jit_var_new(35 <- 3, 34):     st.param.$t1 [param_in+0], $r1
jit_var_inc_ref_ext(35): 1
jit_var_dec_ref_ext(34): 0
jit_var_inc_ref_int(4): 2
jit_var_inc_ref_int(35): 1
jit_var_new(36 <- 4, 35):     st.param.$t1 [param_in+4], $r1
jit_var_inc_ref_ext(36): 1
jit_var_dec_ref_ext(35): 0
jit_var_inc_ref_int(29): 1
jit_var_inc_ref_int(28): 2
jit_var_inc_ref_int(36): 1
jit_var_new(37 <- 29, 28, 36):     call (param_out), $r1, (param_in), $r2
jit_var_inc_ref_ext(37): 1
jit_var_dec_ref_ext(36): 0
jit_var_dec_ref_ext(29): 0
jit_var_dec_ref_ext(28): 0
jit_var_inc_ref_int(37): 1
jit_var_new(38 <- 37):     ld.param.$t0 $r0, [param_out+0]
jit_var_inc_ref_ext(38): 1
jit_var_dec_ref_ext(37): 0
jit_var_inc_ref_int(38): 1
jit_var_new(39 <- 38):     ld.param.$t0 $r0, [param_out+4]
jit_var_inc_ref_ext(39): 1
jit_var_dec_ref_ext(38): 0
jit_var_inc_ref_int(39): 1
jit_var_new(40 <- 39): }

jit_var_inc_ref_ext(40): 1
jit_var_dec_ref_ext(39): 0
jit_var_inc_ref_int(38): 2
jit_var_inc_ref_int(40): 1
jit_var_new(41 <- 38, 40): mov.$t0 $r0, $r1
jit_var_inc_ref_ext(41): 1
jit_var_inc_ref_int(39): 2
jit_var_inc_ref_int(40): 2
jit_var_new(42 <- 39, 40): mov.$t0 $r0, $r1
jit_var_inc_ref_ext(42): 1
jit_var_dec_ref_ext(40): 0
jit_var_dec_ref_ext(30): 1
jit_var_dec_ref_ext(30): 0
jit_var_free(30)
jit_var_dec_ref_ext(5): 1
jit_var_schedule(41)
jit_var_schedule(42)
jit_eval(): launching 1 kernel.
jit_assemble(size=3): register map:
   - gl4 -> 6 [scalar]
   - gl5 -> 10 [scalar]
   - gl6 -> 11 [scalar]
   - gl7 -> 20 [scalar]
   - gl8 -> 21 [scalar]
   - gl9 -> 26 [scalar]
   - gl10 -> 27 [scalar]
   - gl11 -> 28 [scalar]
   - %r12 -> 5
   - %rd13 -> 29
   - %f14 -> 3 [scalar]
   - %u15 -> 31 [scalar]
   - %u16 -> 32 [scalar]
   - %f17 -> 4 [scalar]
   - %u18 -> 33 [scalar]
   - %u19 -> 34 [scalar]
   - %u20 -> 35 [scalar]
   - %u21 -> 36 [scalar]
   - %u22 -> 37
   - %f23 -> 38
   - %f24 -> 39
   - %u25 -> 40
   - %f26 -> 41 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
   - %f27 -> 42 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
  -> launching <@> (n=3, in=0, out=2, ops=28):
.version 6.3
.address_size 64

.func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <5>; .reg.b16 %w<5>; .reg.b32 %r<5>;
    .reg.b64  %rd<5>; .reg.f32 %f<5>; .reg.f64 %d<5>;
    .reg.pred %p<5>;


    // Evaluate %f4
    mov.b32 %f4, 0x0;
    st.param.f32 [out+0], %f4;
    st.param.f32 [out+4], %f4;
    ret;
}

.func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <11>; .reg.b16 %w<11>; .reg.b32 %r<11>;
    .reg.b64  %rd<11>; .reg.f32 %f<11>; .reg.f64 %d<11>;
    .reg.pred %p<11>;


    // Load %f4
    ld.param.f32 %f4, [in+0];

    // Load %f5
    ld.param.f32 %f5, [in+4];

    // Evaluate %f6
    add.ftz.f32 %f6, %f4, %f5;

    // Evaluate %f7
    fma.rn.ftz.f32 %f7, %f4, %f5, %f5;

    // Evaluate %r8
    mov.b32 %r8, 0x5;

    // Evaluate %rd9
    mov.b64 %rd9, <@>;
    mul.wide.u32 %rd3, %r8, 4;
    add.u64 %rd3, %rd3, %rd9;
    st.global.f32 [%rd3], %f5;
    st.param.f32 [out+0], %f6;
    st.param.f32 [out+4], %f7;
    ret;
}

.func (.param .align 4 .b8 out[8]) func_<@>(.param .align 4 .b8 in[8]) {
    .reg.b8   %b <8>; .reg.b16 %w<8>; .reg.b32 %r<8>;
    .reg.b64  %rd<8>; .reg.f32 %f<8>; .reg.f64 %d<8>;
    .reg.pred %p<8>;


    // Load %f4
    ld.param.f32 %f4, [in+0];

    // Load %f5
    ld.param.f32 %f5, [in+4];

    // Evaluate %f6
    mul.ftz.f32 %f6, %f4, %f5;

    // Evaluate %f7
    sub.ftz.f32 %f7, %f4, %f5;
    st.param.f32 [out+0], %f6;
    st.param.f32 [out+4], %f7;
    ret;
}

.const .u64 gl11[] = { func_<@>, func_<@>, func_<@> };

.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1) {
    .reg.b8   %b <28>; .reg.b16 %w<28>; .reg.b32 %r<28>;
    .reg.b64  %rd<28>; .reg.f32 %f<28>; .reg.f64 %d<28>;
    .reg.pred %p<28>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Evaluate %r12
    mov.u32 %r12, %r0;

    // Evaluate %rd13
    mov.u64 %rd13, gl11;
    mad.wide.u32 %rd13, %r12, 8, %rd13;
    ld.const.u64 %rd13, [%rd13];

    // Evaluate %f14
    mov.b32 %f14, 0x3f800000;

    // Evaluate %f17
    mov.b32 %f17, 0x40000000;
    
    {
        .param .align 4 .b8 param_in[8];
        .param .align 4 .b8 param_out[8];
        st.param.f32 [param_in+0], %f14;
        st.param.f32 [param_in+4], %f17;
        call (param_out), %rd13, (param_in), gl11;

    // Evaluate %f23
        ld.param.f32 %f23, [param_out+0];

    // Evaluate %f24
        ld.param.f32 %f24, [param_out+4];
    }


    // Evaluate %f26
    mov.f32 %f26, %f23;

    // Store %f26
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f26;

    // Evaluate %f27
    mov.f32 %f27, %f24;

    // Store %f27
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    st.global.cs.f32 [%rd0], %f27;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(38): 1
jit_var_dec_ref_int(40): 1
jit_var_dec_ref_int(39): 1
jit_var_dec_ref_int(40): 0
jit_var_free(40)
jit_var_dec_ref_int(39): 0
jit_var_free(39)
jit_var_dec_ref_int(38): 0
jit_var_free(38)
jit_var_dec_ref_int(37): 0
jit_var_free(37)
jit_var_dec_ref_int(29): 0
jit_var_free(29)
jit_var_dec_ref_int(5): 0
jit_var_dec_ref_int(28): 1
jit_var_dec_ref_int(28): 0
jit_var_free(28)
jit_var_dec_ref_int(27): 0
jit_var_free(27)
jit_var_dec_ref_int(21): 0
jit_var_free(21)
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_var_dec_ref_int(10): 0
jit_var_free(10)
jit_var_dec_ref_int(20): 0
jit_var_free(20)
jit_var_dec_ref_int(26): 0
jit_var_free(26)
jit_var_dec_ref_int(36): 0
jit_var_free(36)
jit_var_dec_ref_int(4): 1
jit_var_dec_ref_int(35): 0
jit_var_free(35)
jit_var_dec_ref_int(3): 1
jit_var_dec_ref_int(34): 0
jit_var_free(34)
jit_var_dec_ref_int(33): 0
jit_var_free(33)
jit_var_dec_ref_int(4): 0
jit_var_dec_ref_int(32): 0
jit_var_free(32)
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(31): 0
jit_var_free(31)
jit_eval(): done.
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(43): <@>, size=3, free=1
jit_var_inc_ref_ext(43): 1
jit_var_copy_mem(43, size=3)
jit_var_inc_ref_int(41): 1
jit_var_inc_ref_int(43): 1
jit_var_new(44 <- 41, 43): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(44): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=3): register map:
   - %f4 -> 41 [in]
   - %f5 -> 43 [in]
   - %p6 -> 44 [out]
jit_malloc(type=device, device=0, size=64): <@> (new allocation)
  -> launching <@> (n=3, in=2, out=1, ops=7):
.version 6.3
.address_size 64

.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8   %b <7>; .reg.b16 %w<7>; .reg.b32 %r<7>;
    .reg.b64  %rd<7>; .reg.f32 %f<7>; .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Load %f5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f5, [%rd0];

    // Evaluate %p6
    setp.eq.f32 %p6, %f4, %f5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(41): 0
jit_var_dec_ref_int(43): 0
jit_free_flush(): scheduling 1 deallocation
jit_eval(): done.
jit_all(<@>, size=3)
jit_memset_async(<@>, isize=1, size=1)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(44): 0
jit_var_free(44)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(43): 0
jit_var_free(43)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(45): <@>, size=3, free=1
jit_var_inc_ref_ext(45): 1
jit_var_copy_mem(45, size=3)
jit_var_inc_ref_int(42): 1
jit_var_inc_ref_int(45): 1
jit_var_new(46 <- 42, 45): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(46): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=3): register map:
   - %f4 -> 42 [in]
   - %f5 -> 45 [in]
   - %p6 -> 46 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
  -> launching <@> (n=3, in=2, out=1, ops=7):
.version 6.3
.address_size 64

.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8   %b <7>; .reg.b16 %w<7>; .reg.b32 %r<7>;
    .reg.b64  %rd<7>; .reg.f32 %f<7>; .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Load %f5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f5, [%rd0];

    // Evaluate %p6
    setp.eq.f32 %p6, %f4, %f5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(42): 0
jit_var_dec_ref_int(45): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
jit_all(<@>, size=3)
jit_memset_async(<@>, isize=1, size=1)
jit_malloc(type=host-pinned, size=64): <@> (new allocation)
jit_reduce(<@>, type=uint32, rtype=and, size=1)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(46): 0
jit_var_free(46)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(45): 0
jit_var_free(45)
jit_free(<@>, type=device, device=0, size=64)
jit_malloc(type=device, device=0, size=64): <@> (reused local)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_free(<@>, type=host-pinned, size=64)
jit_var_map_mem(47): <@>, size=10, free=1
jit_var_inc_ref_ext(47): 1
jit_var_copy_mem(47, size=10)
jit_var_inc_ref_int(2): 1
jit_var_inc_ref_int(47): 1
jit_var_new(48 <- 2, 47): setp.eq.$t1 $r0, $r1, $r2
jit_var_inc_ref_ext(48): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=10): register map:
   - %f4 -> 2 [in]
   - %f5 -> 47 [in]
   - %p6 -> 48 [out]
jit_malloc(type=device, device=0, size=64): <@> (reused local)
  -> launching <@> (n=10, in=2, out=1, ops=7):
.version 6.3
.address_size 64

.entry enoki_<@>(.param .u32 size,
                              .param .u64 arg0,
                              .param .u64 arg1,
                              .param .u64 arg2) {
    .reg.b8   %b <7>; .reg.b16 %w<7>; .reg.b32 %r<7>;
    .reg.b64  %rd<7>; .reg.f32 %f<7>; .reg.f64 %d<7>;
    .reg.pred %p<7>;

    // Grid-stride loop setup
    mov.u32 %r0, %ctaid.x;
    mov.u32 %r1, %ntid.x;
    mov.u32 %r2, %tid.x;
    mad.lo.u32 %r0, %r0, %r1, %r2;
    ld.param.u32 %r2, [size];
    setp.ge.u32 %p0, %r0, %r2;
    @%p0 bra L0;

    mov.u32 %r3, %nctaid.x;
    mul.lo.u32 %r1, %r3, %r1;

L1: // Loop body

    // Load %f4
    ld.param.u64 %rd0, [arg0];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f4, [%rd0];

    // Load %f5
    ld.param.u64 %rd0, [arg1];
    mul.wide.u32 %rd1, %r0, 4;
    add.u64 %rd0, %rd0, %rd1;
    ld.global.cs.f32 %f5, [%rd0];

    // Evaluate %p6
    setp.eq.f32 %p6, %f4, %f5;

    // Store %p6
    ld.param.u64 %rd0, [arg2];
    mul.wide.u32 %rd1, %r0, 1;
    add.u64 %rd0, %rd0, %rd1;
    selp.u16 %w0, 1, 0, %p6;
    st.global.cs.u8 [%rd0], %w0;

    add.u32 %r0, %r0, %r1;
    setp.ge.u32 %p0, %r0, %r2;
    @!%p0 bra L1;

L0:
    ret;
}
jit_eval(): cleaning up..
jit_var_dec_ref_int(2): 0
jit_var_dec_ref_int(47): 0
jit_free_flush(): scheduling 2 deallocations
jit_eval(): done.
jit_all(<@>, size=10)
jit_memset_async(<@>, isize=1, size=2)
jit_malloc(type=host-pinned, size=64): <@> (reused global)
jit_reduce(<@>, type=uint32, rtype=and, size=3)
jit_free(<@>, type=host-pinned, size=64)
jit_var_dec_ref_ext(48): 0
jit_var_free(48)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(47): 0
jit_var_free(47)
jit_free(<@>, type=device, device=0, size=64)
jit_registry_remove(<@>)
jit_registry_remove(<@>)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(42): 0
jit_var_free(42)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(41): 0
jit_var_free(41)
jit_free(<@>, type=device, device=0, size=64)
jit_var_dec_ref_ext(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_shutdown(): releasing 1 stream ..
jit_free_flush(): scheduling 6 deallocations
jit_shutdown(): releasing 3 kernels ..
jit_registry_trim(): removed 3 / 3 entries.
jit_malloc_trim(): freed
 - host-pinned memory: 192 B in 3 allocations
 - device memory: 320 B in 5 allocations
jit_shutdown(): done
