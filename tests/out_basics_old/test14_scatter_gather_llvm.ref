jit_var_new(1): $r0_0 = insertelement <$w x $t0> undef, i32 $i, i32 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(1): 1
jit_var_inc_ref_ext(1): 2
jit_var_dec_ref_ext(1): 1
jit_var_inc_ref_int(1): 1
jit_var_new(2 <- 1): $r0 = sub <$w x $t0> $z, $r1
jit_var_inc_ref_ext(2): 1
jit_var_schedule(2)
jit_var_inc_ref_ext(2): 2
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_ext(1): 0
jit_malloc(type=host, size=64): <@> (new allocation)
jit_var_map_mem(3): <@>, size=4, free=1
jit_var_inc_ref_ext(3): 1
jit_var_copy_mem(3, size=4)
jit_var_new_literal(4): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(4): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=1024): register map:
   - %r0 -> 1
   - %r1 -> 2 [out]
jit_malloc(type=host-async, size=4096): <@> (new allocation)
  -> launching <@> (n=1024, in=0, out=1, ops=2):
define void @enoki_<@>(i32 %start, i32 %end, i8** noalias %ptrs) #0 {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r0
    %r0_0 = insertelement <8 x i32> undef, i32 %index, i32 0
    %r0_1 = shufflevector <8 x i32> %r0_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %r0 = add <8 x i32> %r0_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %r1
    %r1 = sub <8 x i32> zeroinitializer, %r0

    ; Store %r1
    %r1_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r1_p = bitcast i32* %r1_i to <8 x i32>*
    store <8 x i32> %r1, <8 x i32>* %r1_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind alignstack=32 "target-cpu"="skylake" "stack-probe-size"="1073741824" "target-features"="-vzeroupper" }
jit_run(): scheduling 128 packets in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_int(1): 0
jit_var_free(1)
jit_eval(): done.
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(5 <- 2): <@>
jit_var_inc_ref_ext(5): 1
jit_var_new(6): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(6): 1
jit_var_inc_ref_int(6): 1
jit_var_new(7 <- 6): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(7): 1
jit_var_dec_ref_ext(6): 0
jit_var_inc_ref_ext(7): 2
jit_var_dec_ref_ext(7): 1
jit_var_new(8): 
jit_var_inc_ref_ext(8): 1
jit_var_new(8):  (reused)
jit_var_inc_ref_ext(8): 2
jit_var_inc_ref_int(8): 1
jit_var_dec_ref_ext(8): 1
jit_var_new(9 <- 8, 0, 0, 0): declare <$w x $t1> @llvm.masked.gather.v$w$a1(<$w x $t1*>, i32, <$w x i1>, <$w x $t1>)
jit_var_inc_ref_ext(9): 1
jit_var_inc_ref_int(5): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(7): 1
jit_var_inc_ref_int(9): 1
jit_var_new(10 <- 5, 3, 7, 9): $r0_0 = bitcast $t1 $r1 to $t0*$n$r0_1 = getelementptr $t0, $t0* $r0_0, <$w x $t2> $r2$n$r0 = call <$w x $t0> @llvm.masked.gather.v$w$a0(<$w x $t0*> $r0_1, i32 $s0, <$w x $t3> $r3, <$w x $t0> $z)
jit_var_inc_ref_ext(10): 1
jit_var_dec_ref_ext(9): 0
jit_var_dec_ref_ext(8): 0
jit_var_dec_ref_ext(7): 0
jit_var_dec_ref_ext(5): 0
jit_var_dec_ref_ext(4): 0
jit_var_free(4)
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - gl0 -> 9 [scalar]
   - %r1 -> 6 [scalar]
   - %p2 -> 7 [scalar]
   - %r3 -> 8 [scalar]
   - %r4 -> 3 [in]
   - %rd5 -> 5 [scalar] [direct_pointer]
   - %r6 -> 10 [out]
jit_malloc(type=host-async, size=64): <@> (new allocation)
  -> launching <@> (n=4, in=2, out=1, ops=7):
declare <8 x i32> @llvm.masked.gather.v8i32(<8 x i32*>, i32, <8 x i1>, <8 x i32>)

define void @enoki_<@>(i32 %start, i32 %end, i8** noalias %ptrs) #0 {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd5 = load i8*, i8** %a1_i, align 8, !alias.scope !1

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r1
    %r1_0 = insertelement <8 x i32> undef, i32 %index, i32 0
    %r1_1 = shufflevector <8 x i32> %r1_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %r1 = add <8 x i32> %r1_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %p2
    %p2_0 = insertelement <8 x i32> undef, i32 %end, i32 0
    %p2_1 = shufflevector <8 x i32> %p2_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %p2 = icmp ult <8 x i32> %r1, %p2_1

    ; Evaluate %r3

    ; Load %r4
    %r4_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r4_p = bitcast i32* %r4_i to <8 x i32>*
    %r4 = load <8 x i32>, <8 x i32>* %r4_p, align 32, !alias.scope !1

    ; Evaluate %r6
    %r6_0 = bitcast i8* %rd5 to i32*
    %r6_1 = getelementptr i32, i32* %r6_0, <8 x i32> %r4
    %r6 = call <8 x i32> @llvm.masked.gather.v8i32(<8 x i32*> %r6_1, i32 4, <8 x i1> %p2, <8 x i32> zeroinitializer)

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a2, i32 %index
    %r6_p = bitcast i32* %r6_i to <8 x i32>*
    store <8 x i32> %r6, <8 x i32>* %r6_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind alignstack=32 "target-cpu"="skylake" "stack-probe-size"="1073741824" "target-features"="-vzeroupper" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_int(5): 0
jit_var_free(5)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(7): 0
jit_var_free(7)
jit_var_dec_ref_int(6): 0
jit_var_free(6)
jit_var_dec_ref_int(9): 0
jit_var_free(9)
jit_var_dec_ref_int(8): 0
jit_var_free(8)
jit_eval(): done.
[-34, -62, -75, -2]
[0, -1, -2, -3, -4, .. 1014 skipped .., -1019, -1020, -1021, -1022, -1023]
jit_var_new_literal(11): $r0_0 = insertelement <$w x $t0> undef, $t0 3, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(11): 1
jit_var_inc_ref_int(10): 1
jit_var_inc_ref_int(11): 1
jit_var_new(12 <- 10, 11): $r0 = mul <$w x $t0> $r1, $r2
jit_var_inc_ref_ext(12): 1
jit_var_new_literal(13): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(13): 1
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(14 <- 2): <@>
jit_var_inc_ref_ext(14): 1
jit_var_new(15): 
jit_var_inc_ref_ext(15): 1
jit_var_inc_ref_int(15): 1
jit_var_dec_ref_ext(15): 0
jit_var_new(16 <- 15, 0, 0, 0): declare void @llvm.masked.scatter.v$w$a1(<$w x $t1>, <$w x $t1*>, i32, <$w x i1>)
jit_var_inc_ref_ext(16): 1
jit_var_new(17): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(17): 1
jit_var_inc_ref_int(17): 1
jit_var_new(18 <- 17): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(18): 1
jit_var_dec_ref_ext(17): 0
jit_var_inc_ref_ext(18): 2
jit_var_dec_ref_ext(18): 1
jit_var_inc_ref_int(18): 1
jit_var_inc_ref_int(16): 1
jit_var_new(19 <- 18, 16): $r0 = or <$w x $t1> $r1, $z
jit_var_inc_ref_ext(19): 1
jit_var_inc_ref_int(14): 1
jit_var_inc_ref_int(12): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(19): 1
jit_var_new(20 <- 14, 12, 3, 19): $r0_0 = bitcast $t1 $r1 to $t2*$n$r0_1 = getelementptr $t2, $t2* $r0_0, <$w x $t3> $r3$ncall void @llvm.masked.scatter.v$w$a2(<$w x $t2> $r2, <$w x $t2*> $r0_1, i32 $s1, <$w x $t4> $r4)
jit_var_inc_ref_ext(20): 1
jit_var_mark_scatter(20, 2)
jit_var_dec_ref_ext(19): 0
jit_var_dec_ref_ext(18): 0
jit_var_dec_ref_ext(16): 0
jit_var_dec_ref_ext(14): 0
jit_var_dec_ref_ext(13): 0
jit_var_free(13)
jit_var_dec_ref_ext(12): 0
jit_var_dec_ref_ext(11): 0
jit_var_new_literal(21): $r0_0 = insertelement <$w x $t0> undef, $t0 1, i32 0$n$r0 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x i32> $z
jit_var_inc_ref_ext(21): 1
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - gl0 -> 16 [scalar]
   - %r1 -> 17 [scalar]
   - %p2 -> 18 [scalar]
   - %r3 -> 15 [scalar]
   - %p4 -> 19 [scalar]
   - %r5 -> 10 [in]
   - %r6 -> 11 [scalar]
   - %r7 -> 12
   - %r8 -> 3 [in]
   - %rd9 -> 14 [scalar] [direct_pointer]
   - %u10 -> 20 [scat]
  -> launching <@> (n=4, in=3, out=1, ops=11):
declare void @llvm.masked.scatter.v8i32(<8 x i32>, <8 x i32*>, i32, <8 x i1>)

define void @enoki_<@>(i32 %start, i32 %end, i8** noalias %ptrs) #0 {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %a1_p = load i8*, i8** %a1_i, align 8, !alias.scope !1
    %a1 = bitcast i8* %a1_p to i32*

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %rd9 = load i8*, i8** %a2_i, align 8, !alias.scope !1
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r1
    %r1_0 = insertelement <8 x i32> undef, i32 %index, i32 0
    %r1_1 = shufflevector <8 x i32> %r1_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %r1 = add <8 x i32> %r1_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %p2
    %p2_0 = insertelement <8 x i32> undef, i32 %end, i32 0
    %p2_1 = shufflevector <8 x i32> %p2_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %p2 = icmp ult <8 x i32> %r1, %p2_1

    ; Evaluate %r3

    ; Evaluate %p4
    %p4 = or <8 x i1> %p2, zeroinitializer

    ; Load %r5
    %r5_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r5_p = bitcast i32* %r5_i to <8 x i32>*
    %r5 = load <8 x i32>, <8 x i32>* %r5_p, align 32, !alias.scope !1

    ; Evaluate %r6
    %r6_0 = insertelement <8 x i32> undef, i32 3, i32 0
    %r6 = shufflevector <8 x i32> %r6_0, <8 x i32> undef, <8 x i32> zeroinitializer

    ; Evaluate %r7
    %r7 = mul <8 x i32> %r5, %r6

    ; Load %r8
    %r8_i = getelementptr inbounds i32, i32* %a1, i32 %index
    %r8_p = bitcast i32* %r8_i to <8 x i32>*
    %r8 = load <8 x i32>, <8 x i32>* %r8_p, align 32, !alias.scope !1
    %u10_0 = bitcast i8* %rd9 to i32*
    %u10_1 = getelementptr i32, i32* %u10_0, <8 x i32> %r8
    call void @llvm.masked.scatter.v8i32(<8 x i32> %r7, <8 x i32*> %u10_1, i32 8, <8 x i1> %p4)

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind alignstack=32 "target-cpu"="skylake" "stack-probe-size"="1073741824" "target-features"="-vzeroupper" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_ext(20): 0
jit_var_free(20)
jit_var_dec_ref_int(14): 0
jit_var_free(14)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(12): 0
jit_var_free(12)
jit_var_dec_ref_int(10): 0
jit_var_dec_ref_int(11): 0
jit_var_free(11)
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(19): 0
jit_var_free(19)
jit_var_dec_ref_int(18): 0
jit_var_free(18)
jit_var_dec_ref_int(17): 0
jit_var_free(17)
jit_var_dec_ref_int(16): 0
jit_var_free(16)
jit_var_dec_ref_int(15): 0
jit_var_free(15)
jit_eval(): done.
jit_var_inc_ref_ext(2): 2
jit_var_copy_ptr(22 <- 2): <@>
jit_var_inc_ref_ext(22): 1
jit_var_new(23): $r0_0 = insertelement <$w x $t0> undef, $t0 $i, $t0 0$n$r0_1 = shufflevector <$w x $t0> $r0_0, <$w x $t0> undef, <$w x $t0> $z$n$r0 = add <$w x $t0> $r0_1, $l0
jit_var_inc_ref_ext(23): 1
jit_var_inc_ref_int(23): 1
jit_var_new(24 <- 23): $r0_0 = insertelement <$w x $t1> undef, $t1 %end, $t1 0$n$r0_1 = shufflevector <$w x $t1> $r0_0, <$w x $t1> undef, <$w x $t1> $z$n$r0 = icmp ult <$w x $t1> $r1, $r0_1
jit_var_inc_ref_ext(24): 1
jit_var_dec_ref_ext(23): 0
jit_var_inc_ref_ext(24): 2
jit_var_dec_ref_ext(24): 1
jit_var_new(25): 
jit_var_inc_ref_ext(25): 1
jit_var_new(25):  (reused)
jit_var_inc_ref_ext(25): 2
jit_var_inc_ref_int(25): 1
jit_var_dec_ref_ext(25): 1
jit_var_new(26 <- 25, 0, 0, 0): declare <$w x $t1> @llvm.masked.gather.v$w$a1(<$w x $t1*>, i32, <$w x i1>, <$w x $t1>)
jit_var_inc_ref_ext(26): 1
jit_var_inc_ref_int(22): 1
jit_var_inc_ref_int(3): 1
jit_var_inc_ref_int(24): 1
jit_var_inc_ref_int(26): 1
jit_var_new(27 <- 22, 3, 24, 26): $r0_0 = bitcast $t1 $r1 to $t0*$n$r0_1 = getelementptr $t0, $t0* $r0_0, <$w x $t2> $r2$n$r0 = call <$w x $t0> @llvm.masked.gather.v$w$a0(<$w x $t0*> $r0_1, i32 $s0, <$w x $t3> $r3, <$w x $t0> $z)
jit_var_inc_ref_ext(27): 1
jit_var_dec_ref_ext(26): 0
jit_var_dec_ref_ext(25): 0
jit_var_dec_ref_ext(24): 0
jit_var_dec_ref_ext(22): 0
jit_var_dec_ref_ext(10): 0
jit_var_free(10)
jit_free(<@>, type=host-async, size=64)
jit_var_dec_ref_ext(21): 0
jit_var_free(21)
jit_eval(): launching 1 kernel.
jit_assemble(size=4): register map:
   - gl0 -> 26 [scalar]
   - %r1 -> 23 [scalar]
   - %p2 -> 24 [scalar]
   - %r3 -> 25 [scalar]
   - %r4 -> 3 [in]
   - %rd5 -> 22 [scalar] [direct_pointer]
   - %r6 -> 27 [out]
jit_malloc(type=host-async, size=64): <@> (reused local)
  -> launching <@> (n=4, in=2, out=1, ops=7):
declare <8 x i32> @llvm.masked.gather.v8i32(<8 x i32*>, i32, <8 x i1>, <8 x i32>)

define void @enoki_<@>(i32 %start, i32 %end, i8** noalias %ptrs) #0 {
entry:

    ; Prepare argument 0
    %a0_i = getelementptr inbounds i8*, i8** %ptrs, i32 0
    %a0_p = load i8*, i8** %a0_i, align 8, !alias.scope !1
    %a0 = bitcast i8* %a0_p to i32*

    ; Prepare argument 1
    %a1_i = getelementptr inbounds i8*, i8** %ptrs, i32 1
    %rd5 = load i8*, i8** %a1_i, align 8, !alias.scope !1

    ; Prepare argument 2
    %a2_i = getelementptr inbounds i8*, i8** %ptrs, i32 2
    %a2_p = load i8*, i8** %a2_i, align 8, !alias.scope !1
    %a2 = bitcast i8* %a2_p to i32*
    br label %loop

loop:
    %index = phi i32 [ %index_next, %loop_suffix ], [ %start, %entry ]

    ; Evaluate %r1
    %r1_0 = insertelement <8 x i32> undef, i32 %index, i32 0
    %r1_1 = shufflevector <8 x i32> %r1_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %r1 = add <8 x i32> %r1_1, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>

    ; Evaluate %p2
    %p2_0 = insertelement <8 x i32> undef, i32 %end, i32 0
    %p2_1 = shufflevector <8 x i32> %p2_0, <8 x i32> undef, <8 x i32> zeroinitializer
    %p2 = icmp ult <8 x i32> %r1, %p2_1

    ; Evaluate %r3

    ; Load %r4
    %r4_i = getelementptr inbounds i32, i32* %a0, i32 %index
    %r4_p = bitcast i32* %r4_i to <8 x i32>*
    %r4 = load <8 x i32>, <8 x i32>* %r4_p, align 32, !alias.scope !1

    ; Evaluate %r6
    %r6_0 = bitcast i8* %rd5 to i32*
    %r6_1 = getelementptr i32, i32* %r6_0, <8 x i32> %r4
    %r6 = call <8 x i32> @llvm.masked.gather.v8i32(<8 x i32*> %r6_1, i32 4, <8 x i1> %p2, <8 x i32> zeroinitializer)

    ; Store %r6
    %r6_i = getelementptr inbounds i32, i32* %a2, i32 %index
    %r6_p = bitcast i32* %r6_i to <8 x i32>*
    store <8 x i32> %r6, <8 x i32>* %r6_p, align 32, !noalias !1

    br label %loop_suffix

loop_suffix:
    %index_next = add i32 %index, 8
    %cond = icmp uge i32 %index_next, %end
    br i1 %cond, label %done, label %loop, !llvm.loop !2

done:
    ret void
}

!0 = !{!0}
!1 = !{!1, !0}
!2 = !{!"llvm.loop.unroll.disable", !"llvm.loop.vectorize.enable", i1 0}

attributes #0 = { norecurse nounwind alignstack=32 "target-cpu"="skylake" "stack-probe-size"="1073741824" "target-features"="-vzeroupper" }
jit_run(): scheduling 1 packet in 1 block ..
jit_eval(): cleaning up..
jit_var_dec_ref_int(22): 0
jit_var_free(22)
jit_var_dec_ref_ext(2): 1
jit_var_dec_ref_int(3): 0
jit_var_dec_ref_int(24): 0
jit_var_free(24)
jit_var_dec_ref_int(23): 0
jit_var_free(23)
jit_var_dec_ref_int(26): 0
jit_var_free(26)
jit_var_dec_ref_int(25): 0
jit_var_free(25)
jit_eval(): done.
[-102, -186, -225, -6]
[0, -1, -6, -3, -4, .. 1014 skipped .., -1019, -1020, -1021, -1022, -1023]
jit_var_dec_ref_ext(27): 0
jit_var_free(27)
jit_free(<@>, type=host-async, size=64)
jit_var_dec_ref_ext(3): 0
jit_var_free(3)
jit_free(<@>, type=host-async, size=64)
jit_var_dec_ref_ext(2): 0
jit_var_free(2)
jit_free(<@>, type=host-async, size=4096)
jit_free_flush(): scheduling 3 deallocations
jit_shutdown(): releasing 3 kernels ..
jit_shutdown(): releasing 1 thread state ..
jit_malloc_trim(): freed
 - host-async memory: 4.12 KiB in 3 allocations
jit_shutdown(): done
